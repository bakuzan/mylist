"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mylist",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload","angularMoment"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("animeitems"),ApplicationConfiguration.registerModule("characters"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("favourites"),ApplicationConfiguration.registerModule("mangaitems"),ApplicationConfiguration.registerModule("users"),angular.module("animeitems").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Animeitems","animeitems","dropdown","/animeitems(/create)?"),Menus.addSubMenuItem("topbar","animeitems","List Animeitems","animeitems"),Menus.addSubMenuItem("topbar","animeitems","New Animeitem","animeitems/create")}]),angular.module("animeitems").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAnimeitems",{url:"/animeitems",templateUrl:"modules/animeitems/views/list-animeitems.client.view.html"}).state("createAnimeitem",{url:"/animeitems/create",templateUrl:"modules/animeitems/views/create-animeitem.client.view.html"}).state("viewAnimeitem",{url:"/animeitems/:animeitemId",templateUrl:"modules/animeitems/views/view-animeitem.client.view.html"}).state("editAnimeitem",{url:"/animeitems/:animeitemId/edit",templateUrl:"modules/animeitems/views/edit-animeitem.client.view.html"})}]),angular.module("animeitems").controller("AnimeitemsController",["$scope","$stateParams","$location","Authentication","Animeitems","Mangaitems","fileUpload","$sce","$window","moment",function($scope,$stateParams,$location,Authentication,Animeitems,Mangaitems,fileUpload,$sce,$window,moment){$scope.authentication=Authentication,$scope.authentication.user||$location.path("/signin"),$scope.currentPage=0,$scope.pageSize=10,$scope.numberOfPages=function(){return Math.ceil($scope.animeitems.length/$scope.pageSize)},$scope.itemUpdate=(new Date).toISOString().substring(0,10),$scope.view="list",$scope.isList=!0,$scope.maxAnimeCount=0,$scope.maxAnimeRatedCount=0,$scope.averageAnimeRating=0,$scope.maxCompleteMonth=0,$scope.showDetail=!1,$scope.statTagSortType="tag",$scope.statTagSortReverse=!1,$scope.sortType="latest",$scope.sortReverse=!0,$scope.finalNumbers=!1,$scope.ratingLevel=void 0,$scope.maxRating=10,$scope.imgPath="",$scope.tagArray=[],$scope.tagArrayRemove=[],$scope.usedTags=[],$scope.statTags=[],$scope.areTagless=!1,$scope.taglessItem=!1,$scope.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},$scope.searchTags="",$scope.passTag=function(tag){-1===$scope.searchTags.indexOf(tag)&&($scope.searchTags+=tag+",")},$scope.clearTagValues=function(){$scope.searchTags="",$scope.tagsForFilter=[]},$scope.deleteSearchTag=function(tag){$scope.searchTags=$scope.searchTags.replace(tag+",","");var index=$scope.tagsForFilter.indexOf(tag);$scope.tagsForFilter.splice(index,1)},$scope.addTag=function(){$scope.tagArray.push({text:$scope.newTag}),$scope.newTag=""},$scope.deleteTag=function(text){var removal=$window.confirm("Are you sure you want to delete this tag?");if(removal){var deletingItem=$scope.tagArray;$scope.tagArray=[],angular.forEach(deletingItem,function(tag){tag.text!==text&&$scope.tagArray.push(tag)})}},$scope.removeTag=function(tag){var removal=$window.confirm("Are you sure you want to delete this tag?");if(removal){var index=$scope.animeitem.tags.indexOf(tag);$scope.animeitem.tags.splice(index,1)}},$scope.tagFilter=function(item){var found=!1,i=0,tagsToSearch=[];if($scope.taglessItem!==!0){if(void 0===$scope.searchTags||""===$scope.searchTags)return!0;for($scope.tagsForFilter=$scope.searchTags.substring(0,$scope.searchTags.length-1).split(","),angular.forEach(item.tags,function(tag){tagsToSearch.push(tag.text)}),i=0;i<$scope.tagsForFilter.length;i++){if(-1===tagsToSearch.indexOf($scope.tagsForFilter[i]))return!1;found=!0}return found}return 0===item.tags.length?item:void 0},$scope.months=[{number:"01",text:"January"},{number:"02",text:"February"},{number:"03",text:"March"},{number:"04",text:"April"},{number:"05",text:"May"},{number:"06",text:"June"},{number:"07",text:"July"},{number:"08",text:"August"},{number:"09",text:"September"},{number:"10",text:"October"},{number:"11",text:"November"},{number:"12",text:"December"}],$scope.endedMonth=function(year,month){return function(item){return void 0!==item.end&&item.end.substring(0,4)===year&&item.end.substr(5,2)===month?item:void 0}},$scope.monthDetail=function(year,month){$scope.detailYear===year&&$scope.detailMonth===month?$scope.showDetail=!$scope.showDetail:($scope.detailYear=year,$scope.detailMonth=month,angular.forEach($scope.months,function(mmm){$scope.detailMonth===mmm.number&&($scope.detailMonthName=mmm.text)}),$scope.showDetail=!0)},$scope.$watchCollection("animeitems",function(){if(void 0!==$scope.animeitems){$scope.maxAnimeCount=$scope.animeitems.length;var tempRating=0;angular.forEach($scope.animeitems,function(anime){0!==anime.rating&&(tempRating+=anime.rating,$scope.maxAnimeRatedCount++)}),$scope.averageAnimeRating=tempRating/$scope.maxAnimeRatedCount;for(var modeMap={},maxCount=0,i=0;i<$scope.animeitems.length;i++)if(void 0!==$scope.animeitems[i].end){var end=$scope.animeitems[i].end.substring(0,7);null===modeMap[end]||void 0===modeMap[end]?modeMap[end]=1:modeMap[end]++,modeMap[end]>maxCount&&(maxCount=modeMap[end])}$scope.maxCompleteMonth=maxCount;var add=!0;angular.forEach($scope.animeitems,function(anime){0===anime.tags.length&&($scope.areTagless=!0),angular.forEach(anime.tags,function(tag){for(var i=0;i<$scope.statTags.length;i++)$scope.statTags[i].tag===tag.text&&(add=!1,$scope.statTags[i].count+=1,$scope.statTags[i].ratingAdded+=anime.rating,$scope.statTags[i].ratingAvg=$scope.statTags[i].ratingAdded/$scope.statTags[i].count);add===!0&&$scope.statTags.push({tag:tag.text,count:1,ratingAdded:anime.rating,ratingAvg:anime.rating}),add=!0})})}}),$scope.hoveringOver=function(value){$scope.overStar=value,$scope.percent=100*(value/$scope.maxRating)},$scope.ratingFilter=function(item){return item.rating===$scope.ratingLevel?item:void 0===$scope.ratingLevel?item:void 0},$scope.create=function(){var animeitem=new Animeitems;animeitem=new Animeitems(void 0!==this.manga&&null!==this.manga?{title:this.title,episodes:this.episodes,start:this.start,latest:this.latest,finalEpisode:this.finalEpisode,disc:this.disc,manga:this.manga._id,tags:$scope.tagArray,user:this.user}:{title:this.title,episodes:this.episodes,start:this.start,latest:this.latest,finalEpisode:this.finalEpisode,disc:this.disc,manga:this.manga,tags:$scope.tagArray,user:this.user}),animeitem.$save(function(response){$location.path("/animeitems/"+response._id),$scope.title="",$scope.episodes="",$scope.start="",$scope.latest="",$scope.status="",$scope.tags=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(animeitem){var removal=$window.confirm("Are you sure you want to delete this item?");if(removal)if(animeitem){animeitem.$remove();for(var i in $scope.animeitems)$scope.animeitems[i]===animeitem&&$scope.animeitems.splice(i,1)}else $scope.animeitem.$remove(function(){$location.path("animeitems")})},$scope.update=function(){var animeitem=$scope.animeitem;if(null!==$scope.animeitem.manga&&void 0!==$scope.animeitem.manga&&(animeitem.manga=$scope.animeitem.manga._id),void 0!==$scope.tagArray){var temp=animeitem.tags;animeitem.tags=temp.concat($scope.tagArray)}void 0!==$scope.imgPath&&null!==$scope.imgPath&&""!==$scope.imgPath&&(animeitem.image=$scope.imgPath),animeitem.episodes===animeitem.finalEpisode&&void 0===animeitem.end&&(animeitem.end=animeitem.latest.substring(0,10)),void 0!==animeitem.end?animeitem.status=!0:animeitem.status=!1,animeitem.reWatching===!0&&animeitem.episodes===animeitem.finalEpisode&&(animeitem.reWatchCount+=1,animeitem.reWatching=!1),animeitem.$update(function(){$location.path("animeitems/"+animeitem._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.animeitems=Animeitems.query()},$scope.findOne=function(){$scope.animeitem=Animeitems.get({animeitemId:$stateParams.animeitemId})},$scope.findManga=function(){$scope.mangaitems=Mangaitems.query()},$scope.uploadFile=function(){var file=$scope.myFile;$scope.imgPath="/modules/animeitems/img/"+file.name,console.log("file is "+JSON.stringify(file));var uploadUrl="/fileUploadAnime";fileUpload.uploadFileToUrl(file,uploadUrl)},$scope.latestDate=function(latest){var today=moment(new Date),latestDate=moment(latest),diff=today.diff(latestDate,"days");return 0===diff?"Today":1===diff?"Yesterday":diff+" days ago."}}]),angular.module("animeitems").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]).directive("listBack",function(){return function(scope,element,attrs){var url=attrs.listBack;element.css({"background-image":"url("+url+")","background-size":"50%","background-repeat":"no-repeat","background-position":"right"})}}),angular.module("animeitems").filter("startFrom",function(){return function(input,start){return start=+start,input.slice(start)}}),angular.module("animeitems").factory("Animeitems",["$resource",function($resource){return $resource("animeitems/:animeitemId",{animeitemId:"@_id"},{update:{method:"PUT"}})}]).service("fileUpload",["$http",function($http){this.uploadFileToUrl=function(file,uploadUrl){var fd=new FormData;fd.append("file",file),$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(response){alert("File Uploaded!")}).error(function(err){alert("File Upload Failed: "+err.message)})}}]),angular.module("characters").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Characters","characters","dropdown","/characters(/create)?"),Menus.addSubMenuItem("topbar","characters","List Characters","characters"),Menus.addSubMenuItem("topbar","characters","New Character","characters/create")}]),angular.module("characters").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCharacters",{url:"/characters",templateUrl:"modules/characters/views/list-characters.client.view.html"}).state("createCharacter",{url:"/characters/create",templateUrl:"modules/characters/views/create-character.client.view.html"}).state("viewCharacter",{url:"/characters/:characterId",templateUrl:"modules/characters/views/view-character.client.view.html"}).state("editCharacter",{url:"/characters/:characterId/edit",templateUrl:"modules/characters/views/edit-character.client.view.html"})}]),angular.module("characters").controller("CharactersController",["$scope","$stateParams","$location","Authentication","Characters","Animeitems","Mangaitems","fileUpload","$sce","$window",function($scope,$stateParams,$location,Authentication,Characters,Animeitems,Mangaitems,fileUpload,$sce,$window){$scope.authentication=Authentication,$scope.authentication.user||$location.path("/signin"),$scope.currentPage=0,$scope.pageSize=10,$scope.numberOfPages=function(){return Math.ceil($scope.characters.length/$scope.pageSize)},$scope.isList="list",$scope.maxItemCount=0,$scope.statTagSortType="count",$scope.statTagSortReverse=!0,$scope.statTagDetailSortType="count",$scope.statTagDetailSortReverse=!0,$scope.statSeriesSortType="count",$scope.statSeriesSortReverse=!0,$scope.myInterval=2500,$scope.sortType="name",$scope.sortReverse=!1,$scope.imgPath="",$scope.tagArray=[],$scope.tagArrayRemove=[],$scope.usedTags=[],$scope.voiceActors=[],$scope.statTags=[],$scope.showTagDetail=!1,$scope.statSearch="",$scope.statSeries=[],$scope.showSeriesDetail=!1,$scope.seriesSearch="",$scope.areTagless=!1,$scope.taglessItem=!1,$scope.male=0,$scope.female=0,$scope.nosex=0,$scope.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},$scope.$watchCollection("characters",function(){if(void 0!==$scope.characters){$scope.maxItemCount=$scope.characters.length;var add=!0;angular.forEach($scope.characters,function(item){0===item.tags.length&&($scope.areTagless=!0),angular.forEach(item.tags,function(tag){for(var i=0;i<$scope.statTags.length;i++)$scope.statTags[i].tag===tag.text&&(add=!1,$scope.statTags[i].count+=1);add===!0&&$scope.statTags.push({tag:tag.text,count:1}),add=!0})}),angular.forEach($scope.characters,function(item){for(var i=0;i<$scope.statSeries.length;i++)null!==item.anime?$scope.statSeries[i].name===item.anime.title&&(add=!1,$scope.statSeries[i].count+=1):null!==item.manga&&$scope.statSeries[i].name===item.manga.title&&(add=!1,$scope.statSeries[i].count+=1);add===!0&&(null!==item.anime?$scope.statSeries.push({name:item.anime.title,count:1}):null!==item.manga&&$scope.statSeries.push({name:item.manga.title,count:1})),add=!0}),angular.forEach($scope.statTags,function(stat){"male"===stat.tag?$scope.male=stat.count:"female"===stat.tag&&($scope.female=stat.count)}),$scope.nosex=$scope.maxItemCount-$scope.male-$scope.female,angular.forEach($scope.characters,function(item){for(var i=0;i<$scope.voiceActors.length;i++)$scope.voiceActors[i]===item.voice&&(add=!1);add===!0&&$scope.voiceActors.push(item.voice),add=!0})}}),$scope.searchTags="",$scope.passTag=function(tag){-1===$scope.searchTags.indexOf(tag)&&($scope.searchTags+=tag+",")},$scope.clearTagValues=function(){$scope.searchTags="",$scope.tagsForFilter=[]},$scope.deleteSearchTag=function(tag){$scope.searchTags=$scope.searchTags.replace(tag+",","");var index=$scope.tagsForFilter.indexOf(tag);$scope.tagsForFilter.splice(index,1)},$scope.addTag=function(){$scope.tagArray.push({text:$scope.newTag}),$scope.newTag=""},$scope.deleteTag=function(text){var removal=$window.confirm("Are you sure you want to delete this tag?");if(removal){var deletingItem=$scope.tagArray;$scope.tagArray=[],angular.forEach(deletingItem,function(tag){tag.text!==text&&$scope.tagArray.push(tag)})}},$scope.removeTag=function(tag){var removal=$window.confirm("Are you sure you want to delete this tag?");if(removal){var index=$scope.character.tags.indexOf(tag);$scope.character.tags.splice(index,1)}},$scope.tagDetail=function(name){if($scope.detailTagName===name)$scope.statSearch="",$scope.showTagDetail=!1,$scope.detailTagName="";else{$scope.statSearch=name,$scope.detailTagName=name,$scope.showTagDetail=!0,$scope.tagDetailCollection=[],$scope.tagDetailResult=[];var add=!0;angular.forEach($scope.characters,function(item){for(var i=0;i<item.tags.length;i++)item.tags[i].text===name&&$scope.tagDetailCollection.push(item.tags)}),angular.forEach($scope.tagDetailCollection,function(item){angular.forEach(item,function(tem){for(var i=0;i<$scope.tagDetailResult.length;i++)$scope.tagDetailResult[i].name===tem.text&&tem.text!==name&&(add=!1,$scope.tagDetailResult[i].count+=1);add===!0&&tem.text!==name&&$scope.tagDetailResult.push({name:tem.text,count:1}),add=!0})})}},$scope.seriesDetailFilter=function(item){if(null!==item.anime){if(item.anime.title===$scope.detailSeriesName)return item}else if(null!==item.manga&&item.manga.title===$scope.detailSeriesName)return item},$scope.seriesDetail=function(name){$scope.detailSeriesName===name?($scope.seriesSearch="",$scope.showSeriesDetail=!1,$scope.detailSeriesName=""):($scope.seriesSearch=name,$scope.detailSeriesName=name,$scope.showSeriesDetail=!0)},$scope.tagFilter=function(item){var found=!1,i=0,tagsToSearch=[];if($scope.taglessItem!==!0){if(void 0===$scope.searchTags||""===$scope.searchTags)return!0;for($scope.tagsForFilter=$scope.searchTags.substring(0,$scope.searchTags.length-1).split(","),angular.forEach(item.tags,function(tag){tagsToSearch.push(tag.text)}),i=0;i<$scope.tagsForFilter.length;i++){if(-1===tagsToSearch.indexOf($scope.tagsForFilter[i]))return!1;found=!0}return found}return 0===item.tags.length?item:void 0},$scope.mediaFilter=function(item){return"anime"===$scope.media?null!==item.anime&&null===item.manga?!0:!1:"manga"===$scope.media?null!==item.manga&&null===item.anime?!0:!1:"both"===$scope.media?null!==item.anime&&null!==item.manga?!0:!1:!0},$scope.create=function(){var character=new Characters;character=new Characters(void 0!==this.anime&&void 0!==this.manga&&null!==this.anime&&null!==this.manga?{name:this.name,image:$scope.imgPath,anime:this.anime._id,manga:this.manga._id,voice:this.voice,tags:$scope.tagArray,user:this.user}:void 0!==this.anime&&null!==this.anime?{name:this.name,image:$scope.imgPath,anime:this.anime._id,manga:this.manga,voice:this.voice,tags:$scope.tagArray,user:this.user}:void 0!==this.manga&&null!==this.manga?{name:this.name,image:$scope.imgPath,anime:this.anime,manga:this.manga._id,voice:this.voice,tags:$scope.tagArray,user:this.user}:{name:this.name,image:$scope.imgPath,anime:this.anime,manga:this.manga,voice:this.voice,tags:$scope.tagArray,user:this.user}),character.$save(function(response){$location.path("characters/"+response._id),$scope.name="",$scope.image="",$scope.voice="",$scope.tags=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(character){var removal=$window.confirm("Are you sure you want to delete this item?");if(removal)if(character){character.$remove();for(var i in $scope.characters)$scope.characters[i]===character&&$scope.characters.splice(i,1)}else $scope.character.$remove(function(){$location.path("characters")})},$scope.update=function(){var character=$scope.character;if(null!==$scope.character.manga&&void 0!==$scope.character.manga&&(character.manga=$scope.character.manga._id),console.log($scope.character.anime),null!==$scope.character.anime&&void 0!==$scope.character.anime&&(character.anime=$scope.character.anime._id),void 0!==$scope.tagArray){var temp=character.tags;character.tags=temp.concat($scope.tagArray)}void 0!==$scope.imgPath&&null!==$scope.imgPath&&""!==$scope.imgPath&&(character.image=$scope.imgPath),character.$update(function(){$location.path("characters/"+character._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.characters=Characters.query()},$scope.findOne=function(){$scope.character=Characters.get({characterId:$stateParams.characterId}),console.log($scope.character)},$scope.findAnime=function(){$scope.animeitems=Animeitems.query()},$scope.findOneAnime=function(anime){$scope.animeitem=Animeitems.get({animeitemId:anime})},$scope.findManga=function(){$scope.mangaitems=Mangaitems.query()},$scope.findOneManga=function(manga){$scope.mangaitem=Mangaitems.get({mangaitemId:manga})},$scope.uploadFile=function(){var file=$scope.myFile;$scope.imgPath="/modules/characters/img/"+file.name,console.log("file is "+JSON.stringify(file));var uploadUrl="/fileUploadCharacter";fileUpload.uploadFileToUrl(file,uploadUrl)}}]),angular.module("characters").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]).directive("characterBack",function(){return function(scope,element,attrs){var url=attrs.characterBack;element.css({"background-image":"url("+url+")","background-size":"100%","background-repeat":"no-repeat","background-position":"right"})}}).directive("disableNgAnimate",["$animate",function($animate){return{restrict:"A",link:function(scope,element){$animate.enabled(!1,element)}}}]).directive("enterTag",function(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.enterTag)}),event.preventDefault())})}}),angular.module("characters").filter("startFrom",function(){return function(input,start){return start=+start,input.slice(start)}}),angular.module("characters").factory("Characters",["$resource",function($resource){return $resource("characters/:characterId",{characterId:"@_id"},{update:{method:"PUT"}})}]).service("fileUpload",["$http",function($http){this.uploadFileToUrl=function(file,uploadUrl){var fd=new FormData;fd.append("file",file),$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(response){alert("File Uploaded!")}).error(function(err){alert("File Upload Failed: "+err.message)})}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/signin"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$rootScope","Authentication","$window","$location","Animeitems","Mangaitems",function($scope,$rootScope,Authentication,$window,$location,Animeitems,Mangaitems){$scope.authentication=Authentication,$rootScope.$on("$viewContentLoaded",function(){window.scrollTo(0,0)}),$scope.authentication.user||$location.path("/signin"),$scope.isCollapseFilter=!1,$scope.isCollapseAction=!0,$scope.isAddTask=!1,$scope.today=new Date,$scope.datesSelected="current",$scope.saved=localStorage.getItem("taskItems"),$scope.taskItem=null!==localStorage.getItem("taskItems")?JSON.parse($scope.saved):[{description:"Why not add a task?",date:$scope.today.toISOString().substring(0,10),complete:!1}],localStorage.setItem("taskItems",JSON.stringify($scope.taskItem)),$scope.newTask=null,$scope.newTaskDate=null,$scope.categories=[{name:"Watch"},{name:"Read"},{name:"Play"},{name:"Other"}],$scope.newTaskCategory=$scope.categories,$scope.days=[{name:"Any"},{name:"Monday"},{name:"Tuesday"},{name:"Wednesday"},{name:"Thursday"},{name:"Friday"},{name:"Saturday"},{name:"Sunday"}],$scope.newTaskDay=$scope.days,$scope.dayFilter=function(item){var ds=$scope.daySelected;return"1"===ds&&"Monday"===item.day?item:"2"===ds&&"Tuesday"===item.day?item:"3"===ds&&"Wednesday"===item.day?item:"4"===ds&&"Thursday"===item.day?item:"5"===ds&&"Friday"===item.day?item:"6"===ds&&"Saturday"===item.day?item:"0"===ds&&"Sunday"===item.day?item:""===ds||null===ds||void 0===ds?item:"Any"===ds&&"Any"===item.day?item:void 0},$scope.dateFilter=function(item){if(null===item.date||void 0===item.date)return"current"===$scope.datesSelected?item:!1;var day=$scope.today.getDay(),diff=$scope.today.getDate()-day+(0===day?0:7),temp=new Date,wkEnd=new Date(temp.setDate(diff)),currentWkEnd=wkEnd.toISOString().substring(0,10);if(console.log("wk-end: "+currentWkEnd),"current"===$scope.datesSelected){if(item.date.substr(0,4)<currentWkEnd.substr(0,4))return item;if(item.date.substr(0,4)===currentWkEnd.substr(0,4)){if(item.date.substr(5,2)<currentWkEnd.substr(5,2))return item;if(item.date.substr(5,2)===currentWkEnd.substr(5,2)&&item.date.substr(8,2)<=currentWkEnd.substr(8,2))return item}}else if("future"===$scope.datesSelected){if(item.date.substr(0,4)>currentWkEnd.substr(0,4))return item;if(item.date.substr(0,4)===currentWkEnd.substr(0,4)){if(item.date.substr(5,2)>currentWkEnd.substr(5,2))return item;if(item.date.substr(5,2)===currentWkEnd.substr(5,2)&&item.date.substr(8,2)>currentWkEnd.substr(8,2))return item}}},$scope.weekBeginning=function(){var day=$scope.today.getDay(),diff=$scope.today.getDate()-day+(0===day?-6:1),wkBeg=new Date;return new Date(wkBeg.setDate(diff))},$scope.checkStatus=function(){var day=$scope.today.getDay();if(console.log($scope.taskItem),1===day){var refreshItems=$scope.taskItem;$scope.taskItem=[],angular.forEach(refreshItems,function(taskItem){taskItem.updated===!1?taskItem.completeTimes!==taskItem.repeat&&(taskItem.complete=!1,taskItem.updated=!0,$scope.taskItem.push(taskItem),console.log("updated set to true")):($scope.taskItem.push(taskItem),console.log("updated already true"))}),localStorage.setItem("taskItems",JSON.stringify($scope.taskItem))}else{var updated=$scope.taskItem;$scope.taskItem=[],angular.forEach(updated,function(taskItem){if(taskItem.updated=!1,taskItem.daily===!0)if(taskItem.completeTimes!==taskItem.repeat){var today=$scope.today.getDate();taskItem.dailyRefresh!==today?(taskItem.complete=!1,taskItem.dailyRefresh=today,$scope.taskItem.push(taskItem)):$scope.taskItem.push(taskItem)}else $scope.taskItem.push(taskItem);else $scope.taskItem.push(taskItem)}),console.log("updated set to false"),localStorage.setItem("taskItems",JSON.stringify($scope.taskItem))}},$scope.addNew=function(){(null===$scope.newTaskDay.name||""===$scope.newTaskDay.name||void 0===$scope.newTaskDay.name)&&($scope.newTaskDay.name="Any"),(null===$scope.newTaskCategory.name||""===$scope.newTaskCategory.name||void 0===$scope.newTaskCategory.name)&&($scope.newTaskCategory.name="Other"),(null===$scope.newTaskDate||""===$scope.newTaskDate||void 0===$scope.newTaskDate)&&($scope.newTaskDate=$scope.today.toISOString().substring(0,10));var day=$scope.today.getDay();$scope.taskItem.push(1===day?{description:$scope.newTask,day:$scope.newTaskDay.name,date:$scope.newTaskDate,repeat:$scope.newTaskRepeat,completeTimes:0,updated:!0,complete:!1,category:$scope.newTaskCategory.name,daily:$scope.newTaskDaily,dailyRefresh:$scope.today.getDate()}:{description:$scope.newTask,day:$scope.newTaskDay.name,date:$scope.newTaskDate,repeat:$scope.newTaskRepeat,completeTimes:0,updated:!1,complete:!1,category:$scope.newTaskCategory.name,daily:$scope.newTaskDaily,dailyRefresh:$scope.today.getDate()}),$scope.newTask="",$scope.newTaskDay=$scope.days,$scope.newTaskDate="",$scope.newTaskCategory=$scope.categories,$scope.newTaskRepeat="",$scope.newTaskDaily=!1,localStorage.setItem("taskItems",JSON.stringify($scope.taskItem))},$scope.deleteTask=function(description){var removal=$window.confirm("Are you sure you want to delete this task?"),deletingItem=$scope.taskItem;$scope.taskItem=[],removal&&(angular.forEach(deletingItem,function(taskItem){taskItem.description!==description&&$scope.taskItem.push(taskItem)}),localStorage.setItem("taskItems",JSON.stringify($scope.taskItem)))},$scope.save=function(description){angular.forEach($scope.taskItem,function(taskItem){taskItem.description===description&&taskItem.complete===!0&&(taskItem.completeTimes+=1)}),localStorage.setItem("taskItems",JSON.stringify($scope.taskItem))},$scope.remaining=function(){var count=0;return angular.forEach($scope.taskItem,function(taskItem){$scope.dateFilter(taskItem)&&(count+=taskItem.complete?0:1)}),count}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("favourites").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/signin"),$stateProvider.state("favourites",{url:"/favourites",templateUrl:"modules/favourites/views/favourites.client.view.html"}).state("animeFavourites",{url:"/animefavourites",templateUrl:"modules/favourites/views/anime-favourites.client.view.html"}).state("mangaFavourites",{url:"/mangafavourites",templateUrl:"modules/favourites/views/manga-favourites.client.view.html"}).state("characterFavourites",{url:"/characterfavourites",templateUrl:"modules/favourites/views/character-favourites.client.view.html"})}]),angular.module("favourites").controller("FavouritesController",["$scope","Authentication","$window","$sce","Animeitems","Mangaitems","$location",function($scope,Authentication,$window,$sce,Animeitems,Mangaitems,$location){$scope.authentication=Authentication,$scope.authentication.user||$location.path("/signin"),$scope.today=(new Date).toISOString(),$scope.saved=localStorage.getItem("favouriteAnimeitems"),$scope.favouriteAnimeitem=null!==localStorage.getItem("favouriteAnimeitems")?JSON.parse($scope.saved):[{rank:"1",date:$scope.today,anime:{title:"Favourite Anime 1"}},{rank:"2",date:$scope.today,anime:{title:"Favourite Anime 2"}},{rank:"3",date:$scope.today,anime:{title:"Favourite Anime 3"}},{rank:"4",date:$scope.today,anime:{title:"Favourite Anime 4"}},{rank:"5",date:$scope.today,anime:{title:"Favourite Anime 5"}}],localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.saved=localStorage.getItem("favouriteMangaitems"),$scope.favouriteMangaitem=null!==localStorage.getItem("favouriteMangaitems")?JSON.parse($scope.saved):[{
rank:"1",date:$scope.today,manga:{title:"Favourite Manga 1"}},{rank:"2",date:$scope.today,manga:{title:"Favourite Manga 2"}},{rank:"3",date:$scope.today,manga:{title:"Favourite Manga 3"}},{rank:"4",date:$scope.today,manga:{title:"Favourite Manga 4"}},{rank:"5",date:$scope.today,manga:{title:"Favourite Manga 5"}}],localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},$scope.findAnime=function(){$scope.animeitems=Animeitems.query()},$scope.findManga=function(){$scope.mangaitems=Mangaitems.query()},$scope.updateAnimeFavouriteOne=function(){$scope.favouriteOne&&(angular.forEach($scope.favouriteAnimeitem,function(favouriteAnimeitem){"1"===favouriteAnimeitem.rank&&(favouriteAnimeitem.anime=$scope.favouriteOne,favouriteAnimeitem.date=$scope.today)}),localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.favouriteOne="")},$scope.updateAnimeFavouriteTwo=function(){$scope.favouriteTwo&&(angular.forEach($scope.favouriteAnimeitem,function(favouriteAnimeitem){"2"===favouriteAnimeitem.rank&&(favouriteAnimeitem.anime=$scope.favouriteTwo,favouriteAnimeitem.date=$scope.today)}),localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.favouriteTwo="")},$scope.updateAnimeFavouriteThree=function(){$scope.favouriteThree&&(angular.forEach($scope.favouriteAnimeitem,function(favouriteAnimeitem){"3"===favouriteAnimeitem.rank&&(favouriteAnimeitem.anime=$scope.favouriteThree,favouriteAnimeitem.date=$scope.today)}),localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.favouriteThree="")},$scope.updateAnimeFavouriteFour=function(){$scope.favouriteFour&&(angular.forEach($scope.favouriteAnimeitem,function(favouriteAnimeitem){"4"===favouriteAnimeitem.rank&&(favouriteAnimeitem.anime=$scope.favouriteFour,favouriteAnimeitem.date=$scope.today)}),localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.favouriteFour="")},$scope.updateAnimeFavouriteFive=function(){$scope.favouriteFive&&(angular.forEach($scope.favouriteAnimeitem,function(favouriteAnimeitem){"5"===favouriteAnimeitem.rank&&(favouriteAnimeitem.anime=$scope.favouriteFive,favouriteAnimeitem.date=$scope.today)}),localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.favouriteFive="")},$scope.updateMangaFavouriteOne=function(){$scope.favouriteMangaOne&&(angular.forEach($scope.favouriteMangaitem,function(favouriteMangaitem){"1"===favouriteMangaitem.rank&&(favouriteMangaitem.manga=$scope.favouriteMangaOne,favouriteMangaitem.date=$scope.today)}),localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.favouriteMangaOne="")},$scope.updateMangaFavouriteTwo=function(){$scope.favouriteMangaTwo&&(angular.forEach($scope.favouriteMangaitem,function(favouriteMangaitem){"2"===favouriteMangaitem.rank&&(favouriteMangaitem.manga=$scope.favouriteMangaTwo,favouriteMangaitem.date=$scope.today)}),localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.favouriteMangaTwo="")},$scope.updateMangaFavouriteThree=function(){$scope.favouriteMangaThree&&(angular.forEach($scope.favouriteMangaitem,function(favouriteMangaitem){"3"===favouriteMangaitem.rank&&(favouriteMangaitem.manga=$scope.favouriteMangaThree,favouriteMangaitem.date=$scope.today)}),localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.favouriteMangaThree="")},$scope.updateMangaFavouriteFour=function(){$scope.favouriteMangaFour&&(angular.forEach($scope.favouriteMangaitem,function(favouriteMangaitem){"4"===favouriteMangaitem.rank&&(favouriteMangaitem.manga=$scope.favouriteMangaFour,favouriteMangaitem.date=$scope.today)}),localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.favouriteMangaFour="")},$scope.updateMangaFavouriteFive=function(){$scope.favouriteMangaFive&&(angular.forEach($scope.favouriteMangaitem,function(favouriteMangaitem){"5"===favouriteMangaitem.rank&&(favouriteMangaitem.manga=$scope.favouriteMangaFive,favouriteMangaitem.date=$scope.today)}),localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.favouriteMangaFive="")},$scope.reorderFavourites=function(favourite){if($scope.selectedFavourite===favourite)$scope.selectedFavourite=void 0,$scope.selectedFavouriteTwo=void 0;else if(void 0===$scope.selectedFavourite)$scope.selectedFavourite=favourite;else{$scope.selectedFavouriteTwo=favourite;var temprank1=$scope.selectedFavourite.rank,temprank2=$scope.selectedFavouriteTwo.rank;void 0!==$scope.selectedFavourite.anime?(angular.forEach($scope.favouriteAnimeitem,function(favouriteAnimeitem){favouriteAnimeitem.anime.title===$scope.selectedFavourite.anime.title?favouriteAnimeitem.rank=temprank2:favouriteAnimeitem.anime.title===$scope.selectedFavouriteTwo.anime.title&&(favouriteAnimeitem.rank=temprank1)}),localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.selectedFavourite=void 0,$scope.selectedFavouriteTwo=void 0):void 0!==$scope.selectedFavourite.manga&&(angular.forEach($scope.favouriteMangaitem,function(favouriteMangaitem){favouriteMangaitem.manga.title===$scope.selectedFavourite.manga.title?favouriteMangaitem.rank=temprank2:favouriteMangaitem.manga.title===$scope.selectedFavouriteTwo.manga.title&&(favouriteMangaitem.rank=temprank1)}),localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.selectedFavourite=void 0,$scope.selectedFavouriteTwo=void 0)}}}]),angular.module("favourites").directive("favouriteBack",function(){return function(scope,element,attrs){var url=attrs.favouriteBack;element.css({"background-image":"url("+url+")","background-size":"100%","background-repeat":"no-repeat","background-position":"right"})}}),angular.module("mangaitems").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Mangaitems","mangaitems","dropdown","/mangaitems(/create)?"),Menus.addSubMenuItem("topbar","mangaitems","List Mangaitems","mangaitems"),Menus.addSubMenuItem("topbar","mangaitems","New Mangaitem","mangaitems/create")}]),angular.module("mangaitems").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMangaitems",{url:"/mangaitems",templateUrl:"modules/mangaitems/views/list-mangaitems.client.view.html"}).state("createMangaitem",{url:"/mangaitems/create",templateUrl:"modules/mangaitems/views/create-mangaitem.client.view.html"}).state("viewMangaitem",{url:"/mangaitems/:mangaitemId",templateUrl:"modules/mangaitems/views/view-mangaitem.client.view.html"}).state("editMangaitem",{url:"/mangaitems/:mangaitemId/edit",templateUrl:"modules/mangaitems/views/edit-mangaitem.client.view.html"})}]),angular.module("mangaitems").controller("MangaitemsController",["$scope","$stateParams","$location","Authentication","Mangaitems","Animeitems","fileUpload","$sce","$window","moment",function($scope,$stateParams,$location,Authentication,Mangaitems,Animeitems,fileUpload,$sce,$window,moment){$scope.authentication=Authentication,$scope.authentication.user||$location.path("/signin"),$scope.currentPage=0,$scope.pageSize=10,$scope.numberOfPages=function(){return Math.ceil($scope.mangaitems.length/$scope.pageSize)},$scope.itemUpdate=(new Date).toISOString().substring(0,10),$scope.view="list",$scope.isList=!0,$scope.maxMangaCount=0,$scope.maxMangaRatedCount=0,$scope.averageMangaRating=0,$scope.maxCompleteMonth=0,$scope.showDetail=!1,$scope.statTagSortType="tag",$scope.statTagSortReverse=!1,$scope.sortType="latest",$scope.sortReverse=!0,$scope.finalNumbers=!1,$scope.ratingLevel=void 0,$scope.maxRating=10,$scope.imgExtension="",$scope.imgPath="",$scope.tagArray=[],$scope.tagArrayRemove=[],$scope.usedTags=[],$scope.statTags=[],$scope.areTagless=!1,$scope.taglessItem=!1,$scope.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},$scope.searchTags="",$scope.passTag=function(tag){-1===$scope.searchTags.indexOf(tag)&&($scope.searchTags+=tag+",")},$scope.clearTagValues=function(){$scope.searchTags="",$scope.tagsForFilter=[]},$scope.deleteSearchTag=function(tag){$scope.searchTags=$scope.searchTags.replace(tag+",","");var index=$scope.tagsForFilter.indexOf(tag);$scope.tagsForFilter.splice(index,1)},$scope.addTag=function(){$scope.tagArray.push({text:$scope.newTag}),$scope.newTag=""},$scope.deleteTag=function(text){var removal=$window.confirm("Are you sure you want to delete this tag?");if(removal){var deletingItem=$scope.tagArray;$scope.tagArray=[],angular.forEach(deletingItem,function(tag){tag.text!==text&&$scope.tagArray.push(tag)})}},$scope.removeTag=function(tag){var removal=$window.confirm("Are you sure you want to delete this tag?");if(removal){var index=$scope.mangaitem.tags.indexOf(tag);$scope.mangaitem.tags.splice(index,1)}},$scope.tagFilter=function(item){var found=!1,i=0,tagsToSearch=[];if($scope.taglessItem!==!0){if(void 0===$scope.searchTags||""===$scope.searchTags)return!0;for($scope.tagsForFilter=$scope.searchTags.substring(0,$scope.searchTags.length-1).split(","),angular.forEach(item.tags,function(tag){tagsToSearch.push(tag.text)}),i=0;i<$scope.tagsForFilter.length;i++){if(-1===tagsToSearch.indexOf($scope.tagsForFilter[i]))return!1;found=!0}return found}return 0===item.tags.length?item:void 0},$scope.months=[{number:"01",text:"January"},{number:"02",text:"February"},{number:"03",text:"March"},{number:"04",text:"April"},{number:"05",text:"May"},{number:"06",text:"June"},{number:"07",text:"July"},{number:"08",text:"August"},{number:"09",text:"September"},{number:"10",text:"October"},{number:"11",text:"November"},{number:"12",text:"December"}],$scope.endedMonth=function(year,month){return function(item){return void 0!==item.end&&item.end.substring(0,4)===year&&item.end.substr(5,2)===month?item:void 0}},$scope.monthDetail=function(year,month){$scope.detailYear===year&&$scope.detailMonth===month?$scope.showDetail=!$scope.showDetail:($scope.detailYear=year,$scope.detailMonth=month,angular.forEach($scope.months,function(mmm){$scope.detailMonth===mmm.number&&($scope.detailMonthName=mmm.text)}),$scope.showDetail=!0)},$scope.$watchCollection("mangaitems",function(){if(void 0!==$scope.mangaitems){$scope.maxMangaCount=$scope.mangaitems.length;var tempRating=0;angular.forEach($scope.mangaitems,function(manga){0!==manga.rating&&(tempRating+=manga.rating,$scope.maxMangaRatedCount++)}),$scope.averageMangaRating=tempRating/$scope.maxMangaRatedCount;for(var modeMap={},maxCount=0,i=0;i<$scope.mangaitems.length;i++)if(void 0!==$scope.mangaitems[i].end){var end=$scope.mangaitems[i].end.substring(0,7);null===modeMap[end]||void 0===modeMap[end]?modeMap[end]=1:modeMap[end]++,modeMap[end]>maxCount&&(maxCount=modeMap[end])}$scope.maxCompleteMonth=maxCount;var add=!0;angular.forEach($scope.mangaitems,function(manga){0===manga.tags.length&&($scope.areTagless=!0),angular.forEach(manga.tags,function(tag){for(var i=0;i<$scope.statTags.length;i++)$scope.statTags[i].tag===tag.text&&(add=!1,$scope.statTags[i].count+=1,$scope.statTags[i].ratingAdded+=manga.rating,$scope.statTags[i].ratingAvg=$scope.statTags[i].ratingAdded/$scope.statTags[i].count);add===!0&&$scope.statTags.push({tag:tag.text,count:1,ratingAdded:manga.rating,ratingAvg:manga.rating}),add=!0})})}}),$scope.hoveringOver=function(value){$scope.overStar=value,$scope.percent=100*(value/$scope.maxRating)},$scope.ratingFilter=function(item){return item.rating===$scope.ratingLevel?item:void 0===$scope.ratingLevel?item:void 0},$scope.create=function(){var mangaitem=new Mangaitems;mangaitem=new Mangaitems(void 0!==this.anime&&null!==this.anime?{title:this.title,chapters:this.chapters,volumes:this.volumes,start:this.start,latest:this.latest,finalChapter:this.finalChapter,finalVolume:this.finalVolume,hardcopy:this.hardcopy,anime:this.anime._id,tags:$scope.tagArray,user:this.user}:{title:this.title,chapters:this.chapters,volumes:this.volumes,start:this.start,latest:this.latest,finalChapter:this.finalChapter,finalVolume:this.finalVolume,hardcopy:this.hardcopy,anime:this.anime,tags:$scope.tagArray,user:this.user}),mangaitem.$save(function(response){$location.path("/mangaitems/"+response._id),$scope.title="",$scope.chapters="",$scope.volumes="",$scope.start="",$scope.latest="",$scope.status="",$scope.tags=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(mangaitem){var removal=$window.confirm("Are you sure you want to delete this item?");if(removal)if(mangaitem){mangaitem.$remove();for(var i in $scope.mangaitems)$scope.mangaitems[i]===mangaitem&&$scope.mangaitems.splice(i,1)}else $scope.mangaitem.$remove(function(){$location.path("/mangaitems")})},$scope.update=function(){var mangaitem=$scope.mangaitem;if(null!==$scope.mangaitem.anime&&void 0!==$scope.mangaitem.anime&&(mangaitem.anime=$scope.mangaitem.anime._id),void 0!==$scope.tagArray){var temp=mangaitem.tags;mangaitem.tags=temp.concat($scope.tagArray)}void 0!==$scope.imgPath&&null!==$scope.imgPath&&""!==$scope.imgPath&&(mangaitem.image=$scope.imgPath),mangaitem.chapters===mangaitem.finalChapter&&mangaitem.volumes===mangaitem.finalVolume&&void 0===mangaitem.end&&(mangaitem.end=mangaitem.latest.substring(0,10)),void 0!==mangaitem.end?mangaitem.status=!0:mangaitem.status=!1,mangaitem.reReading===!0&&mangaitem.chapters===mangaitem.finalChapter&&mangaitem.volumes===mangaitem.finalVolume&&(mangaitem.reReadCount+=1,mangaitem.reReading=!1),mangaitem.$update(function(){$location.path("/mangaitems/"+mangaitem._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.mangaitems=Mangaitems.query()},$scope.findOne=function(){$scope.mangaitem=Mangaitems.get({mangaitemId:$stateParams.mangaitemId})},$scope.findAnime=function(){$scope.animeitems=Animeitems.query()},$scope.uploadFile=function(){var file=$scope.myFile;$scope.imgPath="/modules/mangaitems/img/"+file.name,console.log("file is "+JSON.stringify(file));var uploadUrl="/fileUpload";fileUpload.uploadFileToUrl(file,uploadUrl)},$scope.latestDate=function(latest){var today=moment(new Date),latestDate=moment(latest),diff=today.diff(latestDate,"days");return 0===diff?"Today":1===diff?"Yesterday":diff+" days ago."}}]),angular.module("mangaitems").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]).directive("listBack",function(){return function(scope,element,attrs){var url=attrs.listBack;element.css({"background-image":"url("+url+")","background-size":"50%","background-repeat":"no-repeat","background-position":"right"})}}),angular.module("mangaitems").filter("startFrom",function(){return function(input,start){return start=+start,input.slice(start)}}),angular.module("mangaitems").factory("Mangaitems",["$resource",function($resource){return $resource("mangaitems/:mangaitemId",{mangaitemId:"@_id"},{update:{method:"PUT"}})}]).service("fileUpload",["$http",function($http){this.uploadFileToUrl=function(file,uploadUrl){var fd=new FormData;fd.append("file",file),$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(response){alert("File Uploaded!")}).error(function(err){alert("File Upload Failed: "+err.message)})}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/signin")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$scope.credentials.username="username",$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$scope.loginBody=!0,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);