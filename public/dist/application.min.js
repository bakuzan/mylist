'use strict';// Init the application configuration module for AngularJS application
var ApplicationConfiguration=function(){// Init module configuration options
var t='mylist';// Add a new vertical module
return{applicationModuleName:t,applicationModuleVendorDependencies:['ngResource','ngCookies','ngAnimate','ngTouch','ngSanitize','ui.router','ui.bootstrap','ui.utils','angularFileUpload','angularMoment'],registerModule:function(s,r){angular.module(s,r||[]),angular.module(t).requires.push(s)}}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(['$locationProvider',function(t){t.hashPrefix('!')}]),angular.module(ApplicationConfiguration.applicationModuleName).run(['$rootScope','$state','Authentication',function(t,s,r){t.$on('$stateChangeStart',function(l,m){if('signin'===m.name)if(r.user._id)l.preventDefault(),s.go('listTasks');else return;r.user||(l.preventDefault(),s.go('signin'))})}]),angular.element(document).ready(function(){'#_=_'===window.location.hash&&(window.location.hash='#!'),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule('animeitems'),ApplicationConfiguration.registerModule('characters'),ApplicationConfiguration.registerModule('core'),ApplicationConfiguration.registerModule('history'),ApplicationConfiguration.registerModule('mangaitems'),ApplicationConfiguration.registerModule('orders'),ApplicationConfiguration.registerModule('ratings'),ApplicationConfiguration.registerModule('statistics'),ApplicationConfiguration.registerModule('tasks'),ApplicationConfiguration.registerModule('toptens'),ApplicationConfiguration.registerModule('users'),angular.module('animeitems').run(['Menus',function(t){t.addMenuItem('topbar','Animeitems','animeitems','dropdown'),t.addSubMenuItem('topbar','animeitems','List Animeitems','animeitems'),t.addSubMenuItem('topbar','animeitems','Watch Animeitems','animeitems/watch-list'),t.addSubMenuItem('topbar','animeitems','New Animeitem','animeitems/create')}]),angular.module('animeitems').config(['$stateProvider',function(t){t.state('listAnimeitems',{url:'/animeitems',templateUrl:'modules/animeitems/views/list-animeitems.client.view.html',controller:'AnimeitemsController as ctrl'}).state('watchListAnimeitems',{url:'/animeitems/watch-list',templateUrl:'modules/animeitems/views/list-animeitems.client.view.html',controller:'WatchListController as ctrl'}).state('createAnimeitem',{url:'/animeitems/create',templateUrl:'modules/animeitems/views/create-animeitem.client.view.html'}).state('viewAnimeitem',{url:'/animeitems/:animeitemId',templateUrl:'modules/animeitems/views/view-animeitem.client.view.html'}).state('editAnimeitem',{url:'/animeitems/:animeitemId/edit',templateUrl:'modules/animeitems/views/create-animeitem.client.view.html'}).state('watchAnimeitem',{url:'/animeitems/watch/:animeitemId',templateUrl:'modules/animeitems/views/watch-animeitem.client.view.html'})}]),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h,y,v,w,C){/** Find a list of Animeitems for values:
         *  (0) returns only ongoing series. (1) returns all series.
         */function $(S){w.loading('anime',d.query({status:S}).$promise.then(function(I){T.animeitems=I,T.filterConfig.areTagless=h.checkForTagless(I),T.filterConfig.statTags=g.buildStatTags(I,0)}))}//Set defaults on requery and "neutralise" the other search variable.
var T=this;T.authentication=m,T.filterConfig={ongoingList:!0,showingCount:0,expandFilters:!1,sortType:'',sortReverse:!0,ratingLevel:void 0,ratingActions:{maxRating:10,percent:void 0,overStar:null},search:{},searchTags:'',tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:{},statTags:[],commonArrays:h.getCommonArrays(),getItemsAvailable:function(){T.animeitems=void 0,!0===T.filterConfig.ongoingList?(T.filterConfig.search.onHold=!1,T.filterConfig.search.status='',$(0)):(T.filterConfig.search.onHold='',T.filterConfig.search.status=!1,$(1))},viewItem:''},T.findOne=// Find existing Animeitem
function(){d.get({animeitemId:r.animeitemId}).$promise.then(function(I){T.animeitem=I,console.log(T.animeitem)})},T.latestDate=//latest date display format.
function(I,A){return g.latestDate(I,A)},T.pageConfig={currentPage:0,pageSize:10},T.remove=// Remove existing Animeitem
function(I){y.confirmation(function(){if(I)for(var A in I.$remove(),T.animeitems)T.animeitems[A]===I&&T.animeitems.splice(A,1);else T.animeitem.$remove(function(){l.path('animeitems')});y.warning('Deleted!','Anime was successfully deleted.')})}// Update existing Animeitem
,T.tickOff=function(I){I.episodes+=1,I.latest=new Date,T.animeitem=I,T.update()},T.trustAsResourceUrl=//allow retreival of local resource
function(I){return u.trustAsResourceUrl(I)},T.update=function(){var I=T.animeitem;T.animeitem=void 0,v.update(I,void 0,!0,void 0)},T.usedTags=[],T.viewItemHistory=function(){C.open({animation:!0,templateUrl:'/modules/history/views/item-history.html',controller:'ViewHistoryController as viewHistory',size:'lg',resolve:{data:function(){return{viewItem:T.filterConfig.viewItem,type:'anime'}}}}).result.then(function(I){console.log('closed history: ',I,T.filterConfig.viewItem.meta),I&&(T.animeitem=T.filterConfig.viewItem,T.update())})},T.whichController='animeitem',T.filterConfig.selectListOptions=h.getSelectListOptions(T.whichController),T.filterConfig.getItemsAvailable()}angular.module('animeitems').controller('AnimeitemsController',t),t.$inject=['$scope','$stateParams','$location','Authentication','Animeitems','Mangaitems','$sce','$window','ItemService','ListService','NotificationFactory','AnimeFactory','spinnerService','$uibModal']}(),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h,y,v,w,C,$,T){var S=this,I=r.animeitemId;S.addedEpisodes=function(){S.animeitem.latest=S.itemUpdate,S.config.updateHistory=!0,S.animeitem.episodes===S.animeitem.finalEpisode&&0!==S.animeitem.finalEpisode&&!1===S.animeitem.reWatching&&(S.animeitem.end=S.itemUpdate),S.animeitem.episodes>S.animeitem.finalEpisode&&0!==S.animeitem.finalEpisode&&(S.animeitem.episodes=S.animeitem.finalEpisode)},S.addTag=//For adding new tags.
function(){$.addTag(S.tagArray,S.newTag),S.newTag=''}//Drop tag for new tags.
,S.animeitem={},S.authentication=m,S.config={title:'Create',updateHistory:!1,ratingActions:{maxRating:10,percent:void 0,overStar:null},statTags:[],commonArrays:y.getCommonArrays(),malSearchType:'anime'},S.create=// Create new Animeitem
function(){// Create new Animeitem object
var x=new d;x=new d({title:S.animeitem.title,episodes:S.animeitem.episodes,start:S.animeitem.start,latest:S.animeitem.latest,finalEpisode:S.animeitem.finalEpisode,image:S.imgPath,season:!0===S.season?h.convertDateToSeason(new Date(S.animeitem.start)):'',disc:S.animeitem.disc,manga:S.animeitem.manga!==void 0&&null!==S.animeitem.manga?S.animeitem.manga._id:S.animeitem.manga,tags:S.tagArray,mal:S.animeitem.mal,user:S.user}),x.$save(function(){l.path('/animeitems'),v.success('Saved!','Anime was saved successfully')},function(M){S.error=M.data.message,v.error('Error!',M.data.message)})}// Update existing Animeitem
,S.dropTag=function(x){$.dropTag(S.tagArray,x)}//Drop tag for animeitem tags.
,S.finalNumbers=!1,S.find=// Find a list of Animeitems
function(){d.query().$promise.then(function(x){S.animeitems=x,S.config.statTags=h.buildStatTags(x,0)})}// Find existing Animeitem
,S.findOne=function(){C.loading('editAnime',d.get({animeitemId:I}).$promise.then(function(x){S.animeitem=x,S.malSearchOptions.disabled=S.animeitem.mal&&0<S.animeitem.mal.id||!1}))}// Find list of mangaitems for dropdown.
,S.findManga=function(){S.mangaitems=c.query()}//image upload
,S.imgPath='',S.itemUpdate=new Date,S.init=//for typeahead array.
function(){S.config.isCreate=I===void 0,S.config.isCreate?(S.animeitem.episodes=0,S.animeitem.start=S.itemUpdate,S.animeitem.latest=S.itemUpdate,S.malSearchOptions.disabled=!1):!S.config.isCreate&&(S.config.title='Edit',S.findOne()),S.find(),S.findManga()},S.malSearchOptions={placeholder:'Title',name:'title',required:!0,autocomplete:'off',disabled:!0},S.removeTag=function(x){$.dropTag(S.animeitem.tags,x)},S.sections={showAdditional:!1,showCompletion:!1,showItemTags:!1},S.selectMalEntry=function(x){x?(S.animeitem.title=x.title,S.animeitem.finalEpisode=x.episodes,S.imgPath=x.image,S.season=x.status===T.malStatus.anime.ongoing,S.animeitem.mal={id:x.id}):(S.animeitem.finalEpisode=0,S.animeitem.mal=void 0,S.season=!1)},S.setInSeason=function(){S.animeitem.season.year=null===S.animeitem.season.season?null:S.animeitem.start.substring(0,4)},S.submit=function(){S.config.isCreate&&S.create(),S.config.isCreate||S.update()},S.tagArray=[],S.tagArrayRemove=[],S.update=function(){var x=S.animeitem;S.animeitem=void 0,w.update(x,S.tagArray,S.config.updateHistory,S.imgPath)},S.uploadFile=function(){S.imgPath='/modules/animeitems/img/'+S.myFile.name,u.uploadFileToUrl(S.myFile,'/fileUploadAnime')},S.usedTags=[],S.init()}angular.module('animeitems').controller('CreateAnimeController',t),t.$inject=['$scope','$stateParams','$location','Authentication','Animeitems','Mangaitems','fileUpload','$sce','$window','ItemService','ListService','NotificationFactory','AnimeFactory','spinnerService','TagService','Enums']}(),function(){'use strict';function t(s,r,l,m,d,c,u,p){function g(){localStorage.setItem('watched',JSON.stringify(h.watchedList)),h.watchedList=JSON.parse(localStorage.getItem('watched'))}var h=this,y=localStorage.getItem('watched');h.authentication=r,h.findOne=// Find existing Animeitem
function(){d.get({animeitemId:l.animeitemId}).$promise.then(function(w){h.animeitem=w,console.log(h.animeitem)})},h.playVideo=function(){h.watchedList[h.videoFile.file]=!0,g(),h.animeitem.reWatching&&-1<u.findWithAttr(h.animeitem.video.files,'file',h.videoFile.file)&&(h.animeitem.episodes=parseInt(h.videoFile.number,10),h.update())},h.startRewatch=function(){console.log('startRewatch: ');for(var w=h.animeitem.video.files.length;w--;)h.watchedList[h.animeitem.video.files[w].file]=!1;g(),h.animeitem.episodes=0,h.update()}// Update existing Animeitem
,h.update=function(){h.animeitem.latest=new Date,p.update(h.animeitem,void 0,!1,'')},h.videoFile={processed:'',file:'',number:'',message:'Please select an episode.'},h.watchedList=null===localStorage.getItem('watched')?{}:JSON.parse(y),s.$watch('fileGrab',function(v){v&&(h.videoFile.message='',h.videoFile.file=v.name,h.videoFile.number=h.animeitem.video.files[u.findWithAttr(h.animeitem.video.files,'file',v.name)].number,h.videoFile.processed=c.trustAsResourceUrl(window.URL.createObjectURL(v)))}),h.findOne()}angular.module('animeitems').controller('WatchAnimeController',t),t.$inject=['$scope','Authentication','$stateParams','$timeout','Animeitems','$sce','ListService','AnimeFactory']}(),function(){'use strict';function t(s,r,l,m,d,c,u,p){var g=this;g.authentication=r,g.filterConfig={ongoingList:!0,showingCount:0,expandFilters:!1,sortType:'',sortReverse:!0,ratingLevel:void 0,ratingActions:{maxRating:10,percent:void 0,overStar:null},search:{},searchTags:'',tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:{},statTags:[],commonArrays:u.getCommonArrays()},g.find=// Find a list of Animeitems
function(){g.filterConfig.selectListOptions=u.getSelectListOptions(g.whichController),g.filterConfig.sortType=g.filterConfig.selectListOptions.sortOptions[g.filterConfig.selectListOptions.sortOption].v,d.loading('watch',p.query().$promise.then(function(y){g.animeitems=y,console.log('watch list: ',y,'filterConfig: ',g.filterConfig)}))},g.latestDate=//latest date display format.
function(y,v){return c.latestDate(y,v)},g.pageConfig={currentPage:0,pageSize:10},g.trustAsResourceUrl=//allow retreival of local resource
function(y){return m.trustAsResourceUrl(y)},g.watchAnime=function(y){l.go('watchAnimeitem',{animeitemId:y})},g.whichController='watch',g.find()}angular.module('animeitems').controller('WatchListController',t),t.$inject=['$scope','Authentication','$state','$sce','spinnerService','ItemService','ListService','WatchAnime','$filter']}(),function(){'use strict';angular.module('tasks').directive('animeItemModel',function(){return{restrict:'A',replace:!0,templateUrl:'modules/animeitems/templates/anime-item.html'}})}(),function(){'use strict';function t(s){return{restrict:'A',link:function(r,l,m){var d=s(m.fileModel),c=d.assign;l.bind('change',function(){r.$apply(function(){c(r,l[0].files[0])})})}}}angular.module('animeitems').directive('fileModel',t),t.$inject=['$parse']}(),function(){'use strict';angular.module('animeitems').directive('keycuts',function(){return{restrict:'A',link:function(r){r.$on('my:keydown',function(l,m){m.altKey&&86===m.keyCode&&('list'===r.isList?r.isList='slider':'slider'===r.isList?r.isList='list':'Anime'===r.view?r.view='Manga':'Manga'===r.view?r.view='Character':'Character'===r.view&&(r.view='Anime'))})}}})}(),function(){'use strict';angular.module('animeitems').directive('listBack',function(){return function(s,r,l){var m=l.listBack;r.css({'background-image':'url('+m+')','background-size':'50%','background-repeat':'no-repeat','background-position':'right'})}})}(),function(){'use strict';angular.module('animeitems').directive('listFilters',function(){return{restrict:'EA',replace:!0,scope:{filterConfig:'=',items:'=',page:'='},templateUrl:'/modules/animeitems/templates/list-filters.html',link:function(s){s.filterConfig.searchTags='',s.passTag=function(r){-1===s.filterConfig.searchTags.indexOf(r)&&(s.filterConfig.searchTags+=r+',',s.filterConfig.tagsForFilter=s.filterConfig.searchTags.substring(0,s.filterConfig.searchTags.length-1).split(','))},s.hoveringOver=function(r){s.filterConfig.ratingActions.overStar=r,s.filterConfig.ratingActions.percent=100*(r/s.filterConfig.ratingActions.maxRating)},s.itemsAvailable=function(){s.filterConfig.getItemsAvailable()},s.collapseFilters=function(){s.filterConfig.expandFilters=!1}}}})}(),function(){'use strict';angular.module('animeitems').directive('swOnplay',function(){return{restrict:'A',link:function(s,r,l){var m=r[0];m.addEventListener('play',function(){s.$apply(l.swOnplay)})}}})}(),function(){'use strict';angular.module('animeitems').directive('pageControls',function(){return{restrict:'EA',replace:!0,scope:{pageConfig:'=',showingCount:'='},templateUrl:'/modules/animeitems/templates/page-controls.html',link:function(s){s.$watch('showingCount',function(){s.pageCount=Math.ceil(s.showingCount/s.pageConfig.pageSize),s.pageConfig.currentPage>s.pageCount-1?s.last():0>s.pageConfig.currentPage&&s.first()}),s.first=function(){s.pageConfig.currentPage=0},s.last=function(){s.pageConfig.currentPage=s.pageCount-1},s.next=function(){s.pageConfig.currentPage+=1},s.prev=function(){s.pageConfig.currentPage-=1},s.$on('my:keydown',function(r,l){l.ctrlKey&&39===l.keyCode&&s.pageConfig.currentPage<s.pageCount-1?s.next():l.ctrlKey&&37===l.keyCode&&0<s.pageConfig.currentPage&&s.prev()})}}})}(),function(){'use strict';angular.module('animeitems').filter('endedMonth',function(){return function(s,r,l){return s.filter(function(m){//ended stat month filter
if(m.end!==void 0&&null!==m.end&&m.end.substring(0,4)===r&&m.end.substr(5,2)===l)return m})}})}(),function(){'use strict';function t(s){//ended stat season filter
return function(r,l,m){return r.filter(function(d){var p,g,h,y,v,c=s(d.start),u=s(d.end),w='00';if(d.end!==void 0&&null!==d.end)/**
                       *  Can currently handle shows of 1 or 2 seasons with 'standard' lengths (10-13) / (22-26) that
                       *  start and finish in the 'normal' season months (J-M,A-J,J-S,O-D) / (J-J,A-S,J-D,O-M).
                       */if(9<d.finalEpisode&&14>d.finalEpisode){if(g=(w+(m-2)).slice(-w.length),(d.end.substring(0,4)===l&&d.end.substr(5,2)===m||d.start.substring(0,4)===l&&d.start.substr(5,2)===g)&&(y=u.diff(c,'days'),v=Math.ceil(y/7)+1,v>=d.episodes))return d;}else if(13<d.finalEpisode&&26>d.finalEpisode&&(p=0<m-5?m-5:10,h=0<m-5?l:l-1,g=(w+p).slice(-w.length),(d.end.substring(0,4)===l&&d.end.substr(5,2)===m||d.start.substring(0,4)===h&&d.start.substr(5,2)===g)&&(y=u.diff(c,'days'),v=Math.ceil(y/7)+1,v>=d.episodes)))return d})}}angular.module('animeitems').filter('endedSeason',t),t.$inject=['moment']}(),function(){'use strict';angular.module('animeitems').filter('ratingFilter',function(){return function(s,r){if(s!==void 0)//filter for rating stars
return s.filter(function(l){//            console.log(item);
return l.rating===r?l:void 0===r?l:void 0})}})}(),function(){'use strict';angular.module('animeitems').filter('seasonForCharacterAnime',function(){return function(s,r,l){return s.filter(function(m){if(m.anime&&m.anime.season!==void 0&&null!==m.anime.season&&m.anime.season.year===r&&m.anime.season.season===l)return m})}})}(),function(){'use strict';angular.module('animeitems').filter('season',function(){return function(s,r,l){return s.filter(function(m){if(m.season!==void 0&&null!==m.season&&m.season.year===r&&m.season.season===l)return m})}})}(),function(){'use strict';angular.module('animeitems').filter('startFrom',function(){return function(s,r){if(void 0!==s)//parse to int
return r=+r,s.slice(r)}})}(),function(){'use strict';function t(s){return function(r,l,m,d){var c=''===d?'summaryYear':'months'===l?'endedMonth':'season',u=''===d?l:d;return s(c)(r,m,u)}}angular.module('animeitems').filter('statisticsDetailFilter',t),t.$inject=['$filter']}(),function(){'use strict';angular.module('animeitems').filter('summaryYear',function(){return function(s,r,l){if(s!==void 0)return s.filter(function(m){if('months'===l&&void 0!==m.end&&null!==m.end){if(m.end.substring(0,4)===r)return m;}else if('seasons'===l&&m.season.year===r)return m})}})}(),function(){'use strict';function t(s,r,l,m,d){return{update:function(c,u,p,g,h){var y=c;console.log(y),null!==c.manga&&c.manga!==void 0&&(y.manga=c.manga._id),u!==void 0&&(y.tags=r.concatenateTagArrays(y.tags,u)),y=l.itemHistory(y,p,'anime',h),g!==void 0&&null!==g&&''!==g&&(y.image=g),y.episodes===y.finalEpisode&&0!==y.finalEpisode?(y.end===void 0||null===y.end)&&(y.end=y.latest):!1===y.reWatching&&(y.end=null),y.end!==void 0&&null!==y.end?(y.status=!0,y.onHold=!1):y.status=!1,!0===y.reWatching&&(y=l.itemRevisits(y,'anime'),y.episodes===y.finalEpisode&&(y.reWatchCount+=1,y.reWatching=!1)),y.$update(function(){-1===window.location.href.indexOf('tasks')&&-1===window.location.href.indexOf('watch')&&d.path('animeitems'),m.success('Saved!','Anime was saved successfully')},function(v){v.data.message,m.error('Error!',v.data.message)})}}}angular.module('animeitems').factory('AnimeFactory',t),t.$inject=['Animeitems','ListService','ItemService','NotificationFactory','$location']}(),function(){'use strict';function t(s){return s('animeitems/:animeitemId',{animeitemId:'@_id'},{update:{method:'PUT'}})}angular.module('animeitems').factory('Animeitems',t),t.$inject=['$resource']}(),function(){'use strict';function t(s,r){return{uploadFileToUrl:function(m,d){var c=new FormData;c.append('file',m),s.post(d,c,{transformRequest:angular.identity,headers:{'Content-Type':void 0}}).success(function(){r.success('Uploaded!','Image was saved successfully')}).error(function(u){r.popup('Woops!','Something went wrong! \n'+u,'error')})}}}angular.module('animeitems').service('fileUpload',t),t.$inject=['$http','NotificationFactory']}(),function(){'use strict';function t(s,r,l){var m={buildOverview://build statistics item overview details.
function(c){var u={ongoing:r('filter')(c,{status:!1}).length,completed:r('filter')(c,{status:!0}).length};//            console.log('overview ' , overview);
return u}//calculate which month has the most anime completed in it.
,buildRatingsDistribution://builds counts for number of items given for each rating.
function(c){for(var u=c.length,p=[],g=[10,9,8,7,6,5,4,3,2,1,0].length;g--;){var h=r('filter')(c,{rating:g},!0).length;p.push({number:0===g?'-':g,text:0===g?h+' entries unrated.':h+' entries rated '+g,colour:6<g?'#449d44':7>g&&3<g?'#31b0d5':0===g?'#000000':'#c9302c',count:h,percentage:(100*(h/u)).toFixed(2)})}//            console.log('RD: ', ratingsDistribution);
return p}// 'sub-function' of the completeBy... functions.
,buildStatTags://build stat tags including counts, averages etc.
function(c){var g,u=!0,p=[],h=m.maxTagCount(c),y=c.length;//is tag in array?
return angular.forEach(c,function(v){angular.forEach(v.tags,function(w){for(var C=0,$=p.length;C<$;C++)p[C].tag===w.text&&(u=!1,p[C].count+=1,p[C].ratedCount+=0===v.rating?0:1,p[C].ratings.push(v.rating),p[C].ratingAdded+=v.rating,p[C].ratingAvg=0===p[C].ratingAdded?0:p[C].ratingAdded/p[C].ratedCount,p[C].ratingWeighted=m.ratingsWeighted(p[C].ratings));// add if not in
!0==u&&(g=0===v.rating?0:1,p.push({tag:w.text,count:1,ratedCount:g,ratings:[v.rating],ratingAdded:v.rating,ratingAvg:v.rating,ratingWeighted:0})),u=!0})}),p}//function to calculate the weighted mean ratings for the genre tags.
,completeByMonth://complete by month stats
function(c){//build comlpeteByMonths object.
for(var u={},p=[],g=0,h=m.endingYears(c),y=h.length;y--;)//chuck the null end date. push the year part of the other end dates with months array.
void 0!==h[y].year&&null!==h[y].year&&p.push({year:h[y].year,months:[{number:'01',text:'January',count:r('endedMonth')(c,h[y].year,'01').length},{number:'02',text:'February',count:r('endedMonth')(c,h[y].year,'02').length},{number:'03',text:'March',count:r('endedMonth')(c,h[y].year,'03').length},{number:'04',text:'April',count:r('endedMonth')(c,h[y].year,'04').length},{number:'05',text:'May',count:r('endedMonth')(c,h[y].year,'05').length},{number:'06',text:'June',count:r('endedMonth')(c,h[y].year,'06').length},{number:'07',text:'July',count:r('endedMonth')(c,h[y].year,'07').length},{number:'08',text:'August',count:r('endedMonth')(c,h[y].year,'08').length},{number:'09',text:'September',count:r('endedMonth')(c,h[y].year,'09').length},{number:'10',text:'October',count:r('endedMonth')(c,h[y].year,'10').length},{number:'11',text:'November',count:r('endedMonth')(c,h[y].year,'11').length},{number:'12',text:'December',count:r('endedMonth')(c,h[y].year,'12').length}]});//            console.log('completeByMonthItems', completeByMonthItems);
return g=m.maxCompleteMonth(c),u={months:p,max:g},u}//complete by season stats.
,completeBySeason:function(c){//build completeBySeasonItems object.
for(var u={},p=[],g=0,h=m.endingYears(c),y=h.length;y--;)//chuck the null end date. push the year part of the other end dates with seasons array.
void 0!==h[y].year&&null!==h[y].year&&p.push({year:h[y].year,seasons:[{number:'03',text:'Winter',count:r('season')(c,h[y].year,'Winter').length},{number:'06',text:'Spring',count:r('season')(c,h[y].year,'Spring').length},{number:'09',text:'Summer',count:r('season')(c,h[y].year,'Summer').length},{number:'12',text:'Fall',count:r('season')(c,h[y].year,'Fall').length}]});//find maximum complete in a season.
//            console.log('completeBySeasonItems', seasonDetails);
return angular.forEach(p,function(v){for(var w=v.seasons.length;w--;)v.seasons[w].count>g&&(g=v.seasons[w].count)}),u={seasons:p,max:g},u}//Temporary function to generate the season data for pre-exisiting items in db.
,convertDateToSeason://Using the date, returns the season.
function(c){//            console.log('convert: ', year, month);
for(var u='',p=c.getFullYear(),g=c.getMonth()+1,h=l.getCommonArrays(),y=h.seasons.length;y--;)g>+h.seasons[y].number&&''==u&&(u={season:h.seasons[y+1].text,year:p}),0===y&&''==u&&(u={season:h.seasons[y].text,year:p});//            console.log('to: ', season);
return u}//add history entry to item.
,deleteHistory://remove an entry from an items history.
function(c,u){var p=[];return angular.forEach(c.meta.history,function(g){g.value!==u.value&&p.push(g)}),c.meta.history=p,c},endingYears:function(c){var u=[],p=r('unique')(c,'end.substring(0,4)');//get unqiue years as items.
return p=r('orderBy')(p,'-end.substring(0,4)'),angular.forEach(p,function(g){void 0!==g.end&&null!==g.end&&u.push({year:g.end.substring(0,4)})}),u},getRatingValues://calculate the rating values - max rated count and average rating.
function(c){var u=0,p=0,g=0;angular.forEach(c,function(y){0!==y.rating&&(u+=y.rating,p++)}),g=u/p;var h={maxRatedCount:p,averageRating:g};//            console.log('values', values);
return h}//calculate which month has the most anime completed in it.
,itemHistory:function(c,u,p,g){//console.log('item history: ', item, item.meta, episodeRating);
//populate the history of when each part was 'checked' off.
if(0!==c.meta.history.length){var h=c.meta.history[c.meta.history.length-1].value,y='anime'===p?c.episodes-h:c.chapters-h;if(0<y&&('anime'===p?!1===c.reWatching:!1===c.reReading))for(var v=1;v<=y;v++)c.meta.history.push({date:Date.now(),value:h+v,rating:g||0,title:c.title,id:c._id})}else u&&('anime'===p?!1===c.reWatching:!1===c.reReading)&&c.meta.history.push({date:Date.now(),value:'anime'===p?c.episodes:c.chapters,rating:g||0,title:c.title,id:c._id});return c},itemRevisits:function(c,u){var p='anime'===u?{count:'reWatchCount',currentPart:'episodes',finalPart:'finalEpisode'}:{count:'reReadCount',currentPart:'chapters',finalPart:'finalChapter'},g=l.findWithAttr(c.meta.revisits,'value',c[p.count]+1);return-1===g?c.meta.revisits.push({id:c.id,title:c.title,value:c[p.count]+1,rating:0,start:c.latest,end:c[p.currentPart]===c[p.finalPart]?c.latest:null}):-1<g&&c[p.currentPart]===c[p.finalPart]&&(c.meta.revisits[g].end=c.latest),c}//function to display relative time - using latest or updated date.
,latestDate:function(c,u){//latest date display format.
//          console.log(latest, updated);
var g,h,p=s(new Date);return s(c).toISOString().substring(0,10)===s(u).toISOString().substring(0,10)?(g=s(u),h=g.fromNow(),'a day ago'===h)?'Yesterday at '+g.format('HH:mm'):-1<h.indexOf('days')?h+' at '+g.format('HH:mm'):h+'.':(g=s(c),h=p.diff(g,'days'),0===h)?'Today':1===h?'Yesterday':h+' days ago.'},maxCompleteMonth:function(c){var u={},p=0;for(var g=0;g<c.length;g++)if(c[g].end!==void 0&&null!==c[g].end){var h=c[g].end.substring(0,7);null===u[h]||u[h]===void 0?u[h]=1:u[h]++,u[h]>p&&(p=u[h])}return p},maxTagCount:function(c){var u={},p=0;return angular.forEach(c,function(g){angular.forEach(g.tags,function(h){var y=h.text;null===u[y]||void 0===u[y]?u[y]=1:u[y]++,u[y]>p&&(p=u[y])})}),p},ratingsWeighted:function(c){var u=[],p=[],g=0,h=0;/**
	             *  create array (weights) with key(rating).
	             */for(var y=0,v=c.length;y<v;y++)c[y]in u?p[c[y]]++:(u.push(c[y]),p[c[y]]=1);/**
	             *  using the key(rating) multiply by the value(weight).
	             *  calculated weighted total and count.
	             */for(var w in p)'function'==typeof p[w]||isNaN(p[w])||(g+=w*p[w],h+=p[w]),0===w&&p[w];/* Weighted average.
							 * total = (nth_rating_value * number_of_that_value + ...)
							 * count = number of ratings.
							 */return g/h},setSeason:function(c,u,p){var g=r('endedSeason')(c,u,p);return angular.forEach(g,function(h){h.season=m.convertDateToSeason(new Date(h.start))}),g}};return m}angular.module('animeitems').service('ItemService',t),t.$inject=['moment','$filter','ListService']}(),function(){'use strict';function t(s,r){//Retrieve the item values for grouping by
function l(c,u){var p=[];return angular.forEach(u,function(g){p.push(c[g])}),p}//Group the items into arrays using the values.
function m(c,u){var p={};return c.forEach(function(g){var h=JSON.stringify(u(g));p[h]=p[h]||[],p[h].push(g)}),Object.keys(p).map(function(g){return p[g]})}//returns the options for the various filters in list pages.
//check to see if there are items with no tags.
var d={checkForTagless:function(u){var p=!1;return angular.forEach(u,function(g){0===g.tags.length&&(p=!0)}),p},concatenateTagArrays:function(u,p){if(0<u.length){for(var g=0,h=!1;g<p.length;){for(var y=0;y<u.length;y++)u[y].text===p[g].text&&(h=!0);//add if isn't already in the array.
!1==h&&u.push(p[g]),g++,h=!1}//                console.log(itemTags);
return u}//if there are no tags for item, then just return the new tags.
return p},findWithAttr://find index of object with given attr.
function(u,p,g){if(u!==void 0)for(var h=0;h<u.length;h+=1)if(u[h][p]===g)return h;return-1}/** Splitting array into multiple arrays by grouping by attributes.
					 */,getCommonArrays:function(){var u={};return u={months:[{number:'01',text:'January'},{number:'02',text:'February'},{number:'03',text:'March'},{number:'04',text:'April'},{number:'05',text:'May'},{number:'06',text:'June'},{number:'07',text:'July'},{number:'08',text:'August'},{number:'09',text:'September'},{number:'10',text:'October'},{number:'11',text:'November'},{number:'12',text:'December'}],seasons:[{number:'03',text:'Winter'},{number:'06',text:'Spring'},{number:'09',text:'Summer'},{number:'12',text:'Fall'}],categories:[{name:'Watch'},{name:'Read'},{name:'Play'},{name:'Other'}],days:[{name:'Any'},{name:'Monday'},{name:'Tuesday'},{name:'Wednesday'},{name:'Thursday'},{name:'Friday'},{name:'Saturday'},{name:'Sunday'}],summaryFunctions:[{name:'Average'},{name:'Highest'},{name:'Lowest'},{name:'Mode'}],itemTypes:[{name:'anime'},{name:'manga'},{name:'character'}]},u},getSelectListOptions:function(u){var p={};//            console.log(selectListOptions);
return'character'!==u&&'topten'!==u?(p.status=[{v:'',n:'All'},{v:!1,n:'Ongoing'},{v:!0,n:'Completed'}],p.searchName='title','animeitem'===u||'watch'===u?(p.onHold=[{v:'',n:'All'},{v:!1,n:'Ongoing'},{v:!0,n:'On Hold'}],p.sortOptions=[{v:'title',n:'Title'},{v:'episodes',n:'Episodes'},{v:'start',n:'Start date'},{v:'end',n:'End date'},{v:['latest','meta.updated'],n:'Latest'},{v:'rating',n:'Rating'}],p.sortOption=d.findWithAttr(p.sortOptions,'n','Latest'),p.media=[{v:'',n:'All'},{v:!1,n:'Online'},{v:!0,n:'Disc'}],p.mediaType='disc',p.repeating=[{v:'',n:'All'},{v:!1,n:'Not Re-watching'},{v:!0,n:'Re-watching'}],p.repeatType='reWatching'):'mangaitem'==u&&(p.sortOptions=[{v:'title',n:'Title'},{v:'chapters',n:'Chapters'},{v:'volumes',n:'Volumes'},{v:'start',n:'Start date'},{v:'end',n:'End date'},{v:['latest','meta.updated'],n:'Latest'},{v:'rating',n:'Rating'}],p.sortOption=d.findWithAttr(p.sortOptions,'n','Latest'),p.media=[{v:'',n:'All'},{v:!1,n:'Online'},{v:!0,n:'Hardcopy'}],p.mediaType='hardcopy',p.repeating=[{v:'',n:'All'},{v:!1,n:'Not Re-reading'},{v:!0,n:'Re-reading'}],p.repeatType='reReading')):('character'===u?(p.sortOptions=[{v:'name',n:'Name'},{v:'anime.title',n:'Anime'},{v:'manga.title',n:'Manga'},{v:'voice',n:'Voice'}],p.media=[{v:'',n:'-- choose media type --'},{v:'none',n:'None'},{v:'anime',n:'Anime-only'},{v:'manga',n:'Manga-only'},{v:'both',n:'Both'}]):'topten'==u&&(p.sortOptions=[{v:'name',n:'Name'}],p.media=[{v:'',n:'All'},{v:'anime',n:'Anime'},{v:'manga',n:'Manga'},{v:'character',n:'Character'}],p.mediaType='type'),p.searchName='name',p.sortOption=d.findWithAttr(p.sortOptions,'n','Name')),p},groupItemsByProperties:function(u,p){return r(function(g){var h=m(u,function(y){return l(y,p)});g(h)})},manipulateString:function(u,p,g){switch(p.toLowerCase()){case'lower':if(g)return u.charAt(0).toLowerCase()+u.slice(1);if(!g)return u.toLowerCase();break;case'upper':if(g)return u.charAt(0).toUpperCase()+u.slice(1);if(!g)return u.toUpperCase();break;default:return u.toLowerCase();}},numberOfPages://get number of pages for list.
function(u,p,g){var h=Math.ceil(u/p);//reset number of pages to be the final page if the number of pages
//becomes less than the one you are on.
g+1>=h&&0!==h&&(g=h-1),0!==h&&0>g&&(g=0);var y={currentPage:g,pageCount:h};return y},stringReverse:function(u){return u.split('').reverse().join('')},weekEndingForDate:function(u){var p=new Date(u),g=p.getDay(),h=p.getDate()-g+(0===g?0:7),y=new Date(u),v=new Date(y.setDate(h));return s(v.toISOString()).endOf('day')}};return d}angular.module('animeitems').service('ListService',t),t.$inject=['moment','$q']}(),function(){'use strict';function t(s){return s('animeitems/watch-list',{},{update:{method:'PUT'}})}angular.module('animeitems').factory('WatchAnime',t),t.$inject=['$resource']}(),angular.module('characters').run(['Menus',function(t){t.addMenuItem('topbar','Characters','characters','dropdown','/characters(/create)?'),t.addSubMenuItem('topbar','characters','List Characters','characters'),t.addSubMenuItem('topbar','characters','New Character','characters/create')}]),angular.module('characters').config(['$stateProvider',function(t){t.state('listCharacters',{url:'/characters',templateUrl:'modules/characters/views/list-characters.client.view.html'}).state('createCharacter',{url:'/characters/create',templateUrl:'modules/characters/views/create-character.client.view.html'}).state('viewCharacter',{url:'/characters/:characterId',templateUrl:'modules/characters/views/view-character.client.view.html'}).state('editCharacter',{url:'/characters/:characterId/edit',templateUrl:'modules/characters/views/edit-character.client.view.html'})}]),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h,y,v,w,C,$){var T=this;T.addTag=//For adding new tags.
function(){$.addTag(T.tagArray,T.newTag),T.newTag=''}//Drop tag for new tags.
,T.authentication=m,T.create=// Create new Character
function(){//console.log(ctrl.tagArray);
var I=new d;// Create new Character object
I=new d({name:T.name,image:T.imgPath,anime:T.anime!==void 0&&null!==T.anime?T.anime._id:T.anime,manga:T.manga!==void 0&&null!==T.manga?T.manga._id:T.manga,voice:T.voice,tags:T.tagArray,user:T.user}),I.$save(function(A){l.path('characters/'+A._id),w.success('Saved!','Character was saved successfully')},function(A){T.error=A.data.message,w.error('Error!',A.data.message)})}// Remove existing Character
,T.dropTag=function(I){$.dropTag(T.tagArray,I)}//Drop tag for animeitem tags.
,T.filterConfig={isList:'list',//show list? or slider.
showingCount:0,sortType:'',sortReverse:!1,searchTags:'',media:'',seriesFilter:'',tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:{},statTags:[],voiceActors:[],series:[]},T.find=// Find a list of Characters
function(){T.filterConfig.selectListOptions=y.getSelectListOptions(T.whichController),C.loading('characters',d.query().$promise.then(function(I){T.characters=I,T.filterConfig.areTagless=y.checkForTagless(I),T.filterConfig.statTags=v.buildCharacterTags(I),T.filterConfig.voiceActors=v.buildVoiceActors(I),T.filterConfig.series=v.buildSeriesList(I),console.log('find characters: ',T.characters,T.filterConfig)}))}// Find existing Character
,T.findAnime=// Find a list of Animeitems
function(){T.animeitems=c.query()}// Find existing Animeitem
,T.findManga=// Find a list of Mangaitems
function(){T.mangaitems=u.query()}// Find existing Animeitem
,T.findOne=function(){T.character=d.get({characterId:r.characterId})},T.findOneAnime=function(I){T.animeitem=c.get({animeitemId:I})},T.findOneManga=function(I){T.mangaitem=u.get({mangaitemId:I})}//image upload
,T.imgPath='',T.maxItemCount=0,T.pageConfig={currentPage:0,pageSize:10},T.remove=function(I){w.confirmation(function(){if(I)for(var A in I.$remove(),T.characters)T.characters[A]===I&&T.characters.splice(A,1);else T.character.$remove(function(){l.path('characters')});w.warning('Deleted!','Character was successfully deleted.')})}// Update existing Character
,T.removeTag=function(I){$.dropTag(T.mangaitem.tags,I)},T.tagArray=[],T.tagArrayRemove=[],T.trustAsResourceUrl=//allow retreival of local resource
function(I){return g.trustAsResourceUrl(I)},T.update=function(){var I=T.character;//dropdown passes whole object, if-statements for lazy fix - setting them to _id.
null!==T.character.manga&&T.character.manga!==void 0&&(I.manga=T.character.manga._id),null!==T.character.anime&&T.character.anime!==void 0&&(I.anime=T.character.anime._id),T.tagArray!==void 0&&(I.tags=y.concatenateTagArrays(I.tags,T.tagArray)),T.imgPath!==void 0&&null!==T.imgPath&&''!==T.imgPath&&(I.image=T.imgPath),I.$update(function(){l.path('characters'),w.success('Saved!','Character was saved successfully')},function(A){T.error=A.data.message,w.error('Error!',A.data.message)})},T.uploadFile=function(){T.imgPath='/modules/characters/img/'+T.myFile.name,p.uploadFileToUrl(T.myFile,'/fileUploadCharacter')},T.usedTags=[],T.whichController='character'}angular.module('characters').controller('CharactersController',t),t.$inject=['$scope','$stateParams','$location','Authentication','Characters','Animeitems','Mangaitems','fileUpload','$sce','$window','ListService','CharacterService','NotificationFactory','spinnerService','TagService']}(),function(){'use strict';angular.module('characters').directive('characterBack',function(){return function(s,r,l){var m=l.characterBack;r.css({'background-image':'url('+m+')','background-size':'cover','background-repeat':'no-repeat','background-position':'center'})}})}(),function(){'use strict';angular.module('characters').directive('clearTagValues',function(){return function(s,r){r.bind('click',function(){s.$apply(function(){s.filterConfig.searchTags='',s.filterConfig.characterTags='',s.filterConfig.tagsForFilter=[]})})}})}(),function(){'use strict';angular.module('characters').directive('deleteSearchTag',function(){return{restrict:'A',link:function(s,r,l){r.bind('click',function(){s.$apply(function(){var m=l.deleteSearchTag,d=s.filterConfig.tagsForFilter.indexOf(m);//                    console.log(tag, index);
s.filterConfig.searchTags=s.filterConfig.searchTags.replace(m+',',''),s.filterConfig.tagsForFilter.splice(d,1)})})}}})}(),function(){'use strict';function t(s){return{restrict:'A',link:function(r,l){s.enabled(!1,l)}}}angular.module('characters').directive('disableNgAnimate',t),t.$inject=['$animate']}(),function(){'use strict';function t(s){return function(r,l,m){l.bind('click',function(){var d=m.dropTag;//are you sure option...
s.confirmation(function(){r.$apply(function(){var c=r.tagArray;r.$parent.tagArray=[],angular.forEach(c,function(u){u.text!==d&&r.$parent.tagArray.push(u)})}),s.warning('Dropped!','Tag was successfully dropped')})})}}angular.module('characters').directive('dropTag',t),t.$inject=['NotificationFactory']}(),function(){'use strict';angular.module('characters').directive('enterTag',function(){return{restrict:'A',link:function(s,r,l){r.bind('keydown keypress',function(m){13===m.which&&(s.$apply(function(){s.$eval(l.enterTag)}),m.preventDefault())})}}})}(),function(){'use strict';function t(s){return{restrict:'A',link:function(r,l,m){l.bind('click',function(){var c,d=m.removeTag,u=r.whichController;//are you sure option...
s.confirmation(function(){r.$apply(function(){var p;if('character'===u){for(c=0;c<r.character.tags.length;c++)r.character.tags[c].text===d&&(p=c);//                                console.log(index);
r.$parent.character.tags.splice(p,1)}else if('animeitem'===u){for(c=0;c<r.animeitem.tags.length;c++)r.animeitem.tags[c].text===d&&(p=c);//                                console.log(index);
r.$parent.animeitem.tags.splice(p,1)}else if('mangaitem'===u){for(c=0;c<r.mangaitem.tags.length;c++)r.mangaitem.tags[c].text===d&&(p=c);//                                console.log(index);
r.$parent.mangaitem.tags.splice(p,1)}//                        console.log(index, tag);
}),s.warning('Deleted!','Tag was successfully deleted')})})}}}angular.module('characters').directive('removeTag',t),t.$inject=['NotificationFactory']}(),function(){'use strict';function t(s,r){return{restrict:'AE',replace:!0,scope:{slides:'=?',interval:'=?',filterConfig:'=?'},bindToController:!0,controllerAs:'sliderController',templateUrl:'/modules/characters/templates/slider.html',controller:['$scope',function(l){var d,c,m=this;//if no collection, make a dummy collection to cycle throught the children.
if(m.currentIndex=-1,m.enter=//Stop timer on enter.
function(){!0!==l.filteredSlides[m.currentIndex].locked&&s.cancel(d)}//Restart timer on leave.
,m.goToSlide=function(g){m.currentIndex===g?l.filteredSlides[m.currentIndex].locked?(l.filteredSlides[m.currentIndex].locked=!1,c()):(l.filteredSlides[m.currentIndex].locked=!0,s.cancel(d)):g===l.filteredSlides.length?m.currentIndex=0:m.currentIndex=g},m.interval=void 0===m.interval?3000:m.interval,m.isFullscreen=!1,m.leave=function(){!0!==l.filteredSlides[m.currentIndex].locked&&(d=s(c,m.interval))}//Fullscreen capability
,m.next=function(){m.currentIndex<l.filteredSlides.length-1?m.currentIndex+=1:m.currentIndex=0},m.prev=function(){0<m.currentIndex?m.currentIndex-=1:m.currentIndex=l.filteredSlides.length-1},m.repeater=void 0!==m.slides,m.toggleFullscreen=function(){m.isFullscreen=!m.isFullscreen},m.trustAsResourceUrl=//allow retreival of local resource
function(g){return r.trustAsResourceUrl(g)},!m.repeater){m.slides=[];//used to allow cycling.
for(var u=0;u<length;u++)m.slides.push({index:u})}l.$watch('sliderController.currentIndex',function(){-1<m.currentIndex&&0<l.filteredSlides.length&&(l.filteredSlides.forEach(function(p){p.visible=!1,p.locked=!1}),l.filteredSlides[m.currentIndex].visible=!0)}),c=function(){d=s(function(){m.next(),d=s(c,m.interval)},m.interval)},c(),l.$on('$destroy',function(){s.cancel(d)})}],link:function(l,m){l.childElementCount=m[0].childElementCount-1}}}angular.module('characters').directive('slider',t),t.$inject=['$timeout','$sce']}(),function(){'use strict';angular.module('characters').filter('mediaFilter',function(){return function(s,r){if(s!==void 0)return s.filter(function(l){return'anime'===r?null!==l.anime&&null===l.manga:'manga'===r?null!==l.manga&&null===l.anime:'both'===r?null!==l.anime&&null!==l.manga:'none'!==r||null===l.anime&&null===l.manga||void 0})}})}(),function(){'use strict';angular.module('characters').filter('seriesDetailFilter',function(){return function(s,r){if(s!==void 0)return s.filter(function(l){if(''===r)return l;//filter stat series detail.
if(null!==l.anime&&void 0!==l.anime){if(l.anime.title===r)return l;}else if(null!==l.manga&&void 0!==l.manga&&l.manga.title===r)return l})}})}(),function(){'use strict';angular.module('characters').filter('seriesFilter',function(){return function(s,r){if(s!==void 0)return s.filter(function(l){if(''!==r&&void 0!==r){//filter stat series detail.
if(null!==l.anime&&void 0!==l.anime)return-1<l.anime.title.toLowerCase().indexOf(r.toLowerCase());if(null!==l.manga&&void 0!==l.manga)return-1<l.manga.title.toLowerCase().indexOf(r.toLowerCase())}else return l})}})}(),function(){'use strict';angular.module('characters').filter('tagFilter',function(){return function(s,r,l){if(s!==void 0)return s.filter(function(m){//special tag filter
var p,d=!1,c=0,u=[];//if tagless is checked return tagless and nothing else.
if(!0!==l){if(void 0===r||''===r)return!0;//filter: check in 'query' is in tags.
for(p=r.substring(0,r.length-1).split(','),angular.forEach(m.tags,function(g){u.push(g.text)}),c=0;c<p.length;c++)if(-1!==u.indexOf(p[c]))d=!0;else return!1;return d}return 0===m.tags.length?m:void 0})}})}(),function(){'use strict';function t(s){this.buildGenderDistribution=function(r,l){return s(function(m){var d,c=[];angular.forEach(r,function(u){'male'===u.tag?c.push({type:'male',count:u.count,percentage:+(100*(u.count/l)).toFixed(2),text:'% male.'}):'female'===u.tag&&c.push({type:'female',count:u.count,percentage:+(100*(u.count/l)).toFixed(2),text:'% female.'})}),c.push({type:'unassigned',count:l-c[0].count-c[1].count,percentage:+(100*(l-c[0].count-c[1].count/l)).toFixed(2),text:'% unassigned.'}),d=c[0].percentage+c[1].percentage+c[2].percentage,100<d?c[2].percentage-=(d-100).toFixed(2):100>d&&(c[2].percentage+=(100-d).toFixed(2)),m(c)})},this.buildCharacterTags=function(r){var l=!0,m=[];//is tag in array?
return angular.forEach(r,function(d){angular.forEach(d.tags,function(c){for(var u=0;u<m.length;u++)m[u].tag===c.text&&(l=!1,m[u].count+=1);// add if not in
!0==l&&m.push({tag:c.text,count:1}),l=!0})}),m},this.buildRelatedCharacterTags=function(r,l){var m=!0,d=[],c=[];//get all character tag arrays that contain the chosen tag into a collection.
//        console.log(tagDetailResult);
return angular.forEach(r,function(u){for(var p=0;p<u.tags.length;p++)u.tags[p].text===l&&d.push(u.tags)}),angular.forEach(d,function(u){angular.forEach(u,function(p){//              console.log(bit);
for(var g=0;g<c.length;g++)//if exists and not the search value - increment the count.
c[g].name===p.text&&p.text!==l&&(m=!1,c[g].count+=1);//add if true and not the tag we searched on.
!0==m&&p.text!==l&&c.push({name:p.text,count:1}),m=!0})}),c},this.buildVoiceActors=function(r){var l=!0,m=[];//is voice actor in array?
return angular.forEach(r,function(d){for(var c=0;c<m.length;c++)m[c].name===d.voice&&(l=!1,m[c].count+=1);// add if not in
!0==l&&m.push({name:d.voice,count:1}),l=!0}),m},this.buildSeriesList=function(r){var l=!0,m=[];//get series counts.
return angular.forEach(r,function(d){for(var c=0;c<m.length;c++)d.anime?m[c].name===d.anime.title&&(l=!1,m[c].count+=1):d.manga&&m[c].name===d.manga.title&&(l=!1,m[c].count+=1);// add if not in
!0==l&&('object'==typeof d.anime&&null!==d.anime?m.push({_id:d.anime._id,name:d.anime.title,count:1}):'object'==typeof d.manga&&null!==d.manga&&m.push({_id:d.manga._id,name:d.manga.title,count:1})),l=!0}),m}}angular.module('characters').service('CharacterService',t),t.$inject=['$q']}(),function(){'use strict';function t(s){return s('characters/:characterId',{characterId:'@_id'},{update:{method:'PUT'}})}angular.module('characters').factory('Characters',t),t.$inject=['$resource']}(),function(){'use strict';function t(s,r){var l={};//Add newTag to tagArray
return l.addTag=function(m,d){if(''!==d&&void 0!==d){var c=0,u=!1;if(0<m.length){for(;c<m.length;)m[c].text===d&&(u=!0),c++;//if not in array add it.
!1==u&&m.push({text:d})}else m.push({text:d})}},l.dropTag=function(m,d){r.confirmation(function(){s.$apply(function(){for(var c=m.length;c--;)if(m[c].text===d){m.splice(c,1),r.warning('Dropped!','Tag was successfully dropped');break}})})},l}angular.module('characters').service('TagService',t),t.$inject=['$rootScope','NotificationFactory']}(),function(){'use strict';function t(s,r,l,m){var d=this;d.authentication=r,d.changeTheme=function(){localStorage.setItem('timedTheme',JSON.stringify(d.timedTheme));var u=localStorage.getItem('timedTheme');if('false'===u)localStorage.setItem('theme',JSON.stringify(d.theme));else{var p=new Date().getHours();20<p||8>p?localStorage.setItem('theme',JSON.stringify(d.styles[1].url)):8<p&&localStorage.setItem('theme',JSON.stringify(d.styles[0].url))}var g=localStorage.getItem('theme'),h=document.getElementById('app-theme');h.href=g.substr(1,g.lastIndexOf('"')-1),d.theme=g.substr(1,g.lastIndexOf('"')-1)},d.isActive=function(u){return u===m.path()},d.isCollapsed=!1,d.isTimedTheme=localStorage.getItem('timedTheme'),d.menu=l.getMenu('topbar'),d.saved=localStorage.getItem('theme'),d.styles=[{name:'Day',url:'dist/main-day.css'},{name:'Night',url:'dist/main-night.css'}],d.theme=null===localStorage.getItem('theme')?d.styles[1].url:JSON.parse(d.saved),d.timedTheme=null!==localStorage.getItem('timedTheme')&&JSON.parse(d.isTimedTheme),d.toggleCollapsibleMenu=function(){d.isCollapsed=!d.isCollapsed}// Collapsing the menu after navigation
,localStorage.setItem('theme',JSON.stringify(d.theme)),localStorage.setItem('timedTheme',JSON.stringify(d.timedTheme)),s.$on('$stateChangeSuccess',function(){d.isCollapsed=!1})}angular.module('core').controller('HeaderController',t),t.$inject=['$scope','Authentication','Menus','$location']}(),function(){'use strict';function t(s){return{restrict:'A',scope:{showBackdrop:'=ngShow'},link:function(r){var l=document.body,m=angular.element('<div id="anywhere-but-here-backdrop" ng-show="showBackdrop" ng-click="triggerAnywhereButHere()"></div>')[0];l.appendChild(m),s(m)(r),r.triggerAnywhereButHere=function(){r.showBackdrop=!1}}}}angular.module('core').directive('anywhereButHere',t),t.$inject=['$compile']}(),function(){'use strict';function t(s){return{restrict:'A',link:function(r,l,m){l.bind('click',function(d){s(function(){d.stopPropagation(),document.getElementById(m.clickPass).click()},0)})}}}angular.module('core').directive('clickPass',t),t.$inject=['$timeout']}(),function(){'use strict';angular.module('core').directive('formatDate',function(){return{require:'ngModel',link:function(s,r,l,m){m.$formatters.push(function(d){return null===d?null:new Date(d)})}}})}(),function(){'use strict';function t(s,r){return{restrict:'A',transclude:!0,replace:!0,templateUrl:'/modules/core/templates/loading-spinner.html',scope:{name:'@',size:'@?'},bindToController:'loadingSpinner',controller:['$scope',function(l){l.active=!1;//            $scope.isLoading = function () {
//                return $http.pendingRequests.length > 0;
//            };
//            $scope.$watch($scope.isLoading, function (v) {
//                if ($scope.size === 'fullscreen') {
//                    if(v) {
//                        $scope.active = true;
//                    } else {
//                        $scope.active = false;
//                    }
//                }
//            });
var m={name:l.name,show:function(){l.active=!0},hide:function(){l.active=!1},toggle:function(){l.active=!l.active}};r._register(m),l.$on('$destroy',function(){r._unregister(l.name)})}]}}angular.module('core').directive('loadingSpinner',t),t.$inject=['$http','spinnerService']}(),function(){'use strict';function t(s,r,l){return{restrict:'A',scope:{type:'=malSearch',selectItem:'=malSearchSelect',searchString:'=malSearchModel',options:'=malSearchOptions'},templateUrl:'/modules/core/templates/mal-search.html',bindToController:!0,controllerAs:'malSearchCtrl',controller:['$scope',function(m){function d(p,g){s.search(p,g).then(h=>{u.searchResults=h,u.hasSearchResults=!0,l.hide(u.spinner)})}function c(){u.hasFocus=!0,u.searchString!==void 0&&2<u.searchString.length&&null===u.selectedItem&&!u.options.disabled&&(l.show(u.spinner),d(u.type,u.searchString))}var u=this;u.delayInMs=1500,u.displayActions=!1,u.displaySelectedItemActions=function(){u.displayActions=!0},u.handleSearchString=c,u.hasFocus=!1,u.hasSearchResults=!1,u.processItem=function(g){u.selectItem(g),u.selectedItem=g},u.searchResults=[],u.selectedItem=null,u.selectedItemActions=[{displayText:'Remove selected',action:()=>{u.processItem(null),u.searchString=void 0,u.displayActions=!1}},{displayText:'Display raw json',action:()=>{u.displayRawJson=!0}}],u.spinner=`mal-search-${u.options.name}`,u.toggleSearchDropdownOnFocus=function(g){r(()=>{u.hasFocus='focus'===g.type,u.hasFocus&&0===u.searchResults.length&&u.searchString&&2<u.searchString.length&&c()},200)},m.$watch('malSearchCtrl.displayActions',p=>{p===void 0||p||(u.displayRawJson=p)})}]}}angular.module('core').directive('malSearch',t),t.$inject=['MalService','$timeout','spinnerService']}(),function(){'use strict';angular.module('core').directive('myProgress',function(){return function(s,r,l){s.$watch(l.myProgress,function(m){r.html('<div class="checklist-progress" style="width: '+m+'%;height: 100%"></div>')})}})}(),function(){'use strict';angular.module('core').filter('calendarFilter',function(){return function(s,r){if(s)return s.filter(function(l){//date filter
if(null===l.date||void 0===l.date)return!1===r&&l;var m=new Date().getDay(),d=new Date().getDate()-m+(0===m?0:7),c=new Date,u=new Date(c.setDate(d)),p=u.toISOString().substring(0,10),g=new Date(l.date).toISOString(),h={year:g.substr(0,4),month:g.substr(5,2),day:g.substr(8,2)},y={year:p.substr(0,4),month:p.substr(5,2),day:p.substr(8,2)};if(!1===r){if(h.year<y.year)return l;if(h.year===y.year){if(h.month<y.month)return l;if(h.month===y.month&&h.day<=y.day)return l}}else if(!0===r){if(h.year>y.year)return l;if(h.year===y.year){if(h.month>y.month)return l;if(h.month===y.month&&h.day>y.day)return l}}})}})}(),function(){'use strict';function t(s){var r=['th','st','nd','rd'];return function(l){if(l!==void 0){var m=s('date')(l,'MMMM d'),d=parseInt(m.slice(-2)),c=30>d?d%20:d%30,u=3>=c?r[c]:r[0],p=m.split(' '),g=p[0];return p[1]+u+' '+g+' '+s('date')(l,'yyyy')}}}t.$inject=['$filter'],angular.module('core').filter('dateSuffix',t)}(),function(){'use strict';angular.module('core').filter('dayFilter',function(){return function(s,r){return s.filter(function(l){//special day filter
//            console.log(item);
var m=r;return'1'===m&&'Monday'===l.day?l:'2'===m&&'Tuesday'===l.day?l:'3'===m&&'Wednesday'===l.day?l:'4'===m&&'Thursday'===l.day?l:'5'===m&&'Friday'===l.day?l:'6'===m&&'Saturday'===l.day?l:'0'===m&&'Sunday'===l.day?l:''===m||null===m||void 0===m?l:'Any'===m&&'Any'===l.day?l:void 0})}})}(),function(){'use strict';angular.module('core').filter('numberFixedLen',function(){return function(s,r){var l=parseInt(s,10);if(r=parseInt(r,10),isNaN(l)||isNaN(r))return s;for(l=''+l;l.length<r;)l='0'+l;return l}})}(),function(){'use strict';angular.module('core').service('Enums',function(){return{malStatus:{anime:{ongoing:'Currently Airing',complete:'Finished Airing'},manga:{ongoing:'Publishing',complete:'Finished'}}}})}(),function(){'use strict';function t(){return{pad:function(r,l,m){return m=m||'0',r=r+'',r.length>=l?r:Array(l-r.length+1).join(m)+r}}}angular.module('core').service('FunctionService',t),t.$inject=['moment']}(),function(){'use strict';function t(s,r){var m=r('',{},{search:{method:'GET',url:'malSearch/:type',params:{type:'@_type',searchString:'@_searchString'},isArray:!0}});return{search:function(d,c){return m.search({type:d,searchString:c}).$promise}}}angular.module('core').factory('MalService',t),t.$inject=['$http','$resource']}(),angular.module('core').service('Menus',[function(){this.defaultRoles=['*'],this.menus={};// A private function for rendering decision 
var t=function(s){if(s){if(!!~this.roles.indexOf('*'))return!0;for(var r in s.roles)for(var l in this.roles)if(this.roles[l]===s.roles[r])return!0}else return this.isPublic;return!1};// Validate menu existance
this.validateMenuExistance=function(s){if(s&&s.length){if(this.menus[s])return!0;throw new Error('Menu does not exists')}else throw new Error('MenuId was not provided');return!1},this.getMenu=function(s){// Return the menu object
return this.validateMenuExistance(s),this.menus[s]},this.addMenu=function(s,r,l){// Return the menu object
return this.menus[s]={isPublic:r||!1,roles:l||this.defaultRoles,items:[],shouldRender:t},this.menus[s]},this.removeMenu=function(s){this.validateMenuExistance(s),delete this.menus[s]},this.addMenuItem=function(s,r,l,m,d,c,u,p){// Return the menu object
return this.validateMenuExistance(s),this.menus[s].items.push({title:r,link:l,menuItemType:m||'item',menuItemClass:m,uiRoute:d||'/'+l,isPublic:null===c||'undefined'==typeof c?this.menus[s].isPublic:c,roles:null===u||'undefined'==typeof u?this.menus[s].roles:u,position:p||0,items:[],shouldRender:t}),this.menus[s]},this.addSubMenuItem=function(s,r,l,m,d,c,u,p){// Search for menu item
for(var g in this.validateMenuExistance(s),this.menus[s].items)this.menus[s].items[g].link===r&&this.menus[s].items[g].items.push({title:l,link:m,uiRoute:d||'/'+m,isPublic:null===c||'undefined'==typeof c?this.menus[s].items[g].isPublic:c,roles:null===u||'undefined'==typeof u?this.menus[s].items[g].roles:u,position:p||0,shouldRender:t});// Return the menu object
return this.menus[s]},this.removeMenuItem=function(s,r){// Search for menu item to remove
for(var l in this.validateMenuExistance(s),this.menus[s].items)this.menus[s].items[l].link===r&&this.menus[s].items.splice(l,1);// Return the menu object
return this.menus[s]},this.removeSubMenuItem=function(s,r){// Search for menu item to remove
for(var l in this.validateMenuExistance(s),this.menus[s].items)for(var m in this.menus[s].items[l].items)this.menus[s].items[l].items[m].link===r&&this.menus[s].items[l].items.splice(m,1);// Return the menu object
return this.menus[s]},this.addMenu('topbar')}]),function(){'use strict';angular.module('core').factory('NotificationFactory',function(){return this,toastr.options={closeButton:!1,debug:!1,newestOnTop:!1,progressBar:!1,positionClass:'toast-bottom-right',preventDuplicates:!1,onclick:null,showDuration:'300',hideDuration:'1000',timeOut:'5000',extendedTimeOut:'1000',showEasing:'swing',hideEasing:'linear',showMethod:'fadeIn',hideMethod:'fadeOut'},{success:function(s,r){toastr.success(r,s,'Success')},warning:function(s,r){toastr.warning(r,s,'Warning')},error:function(s,r){toastr.error(r,s,'Error')},popup:function(s,r,l){swal({title:s,text:r,type:l})},confirmation:function(s){swal({title:'Are you sure?',text:'Are you sure that you want to delete this?',type:'warning',showCancelButton:!0,closeOnConfirm:!0,confirmButtonText:'Yes, delete it!',confirmButtonColor:'#ec6c62'},s)}}})}(),function(){'use strict';function t(){var s={},r={},l={};return{spinners:s,// private method for spinner registration.
_register:function(m){if(!m.hasOwnProperty('name'))throw new Error('Spinner must specify a name when registering with the spinner service.');if(s.hasOwnProperty(m.name))throw new Error('A spinner with the name \''+m.name+'\' has already been registered.');s[m.name]=m,this.count++,r[m.name]&&(l[m.name]?(this[r[m.name]](m.name,l[m.name]),delete l[m.name],delete r[m.name]):(this[r[m.name]](m.name),delete r[m.name]))},_unregister:function(m){s.hasOwnProperty(m)&&delete s[m]},loading:function(m,d){if(!this.spinners[m])//            console.log('defer', loads[name]);
return r[m]='loading',void(l[m]=d);var c=s[m];c.show(m),d=d||{},(d.always||d['finally'])&&(d={promise:d});var u=angular.extend({},d);u.promise&&(u.promise.always?u.promise.always(function(){c.hide(m)}):u.promise['finally']&&u.promise['finally'](function(){c.hide(m)}))},show:function(m){//        console.log('show');
if(!this.spinners[m])return void(r[m]='show');var d=s[m];if(!d)throw new Error('No spinner named \''+m+'\' is registered.');d.show()},hide:function(m){//        console.log('hide');
if(!this.spinners[m])return void(r[m]='hide');var d=s[m];if(!d)throw new Error('No spinner named \''+m+'\' is registered.');d.hide()},toggle:function(m){//        console.log('toggle');
if(!this.spinners[m])return void(r[m]='toggle');var d=s[m];if(!d)throw new Error('No spinner named \''+m+'\' is registered.');d.toggle()},count:0}}angular.module('core').factory('spinnerService',t),t.$inject=['$q']}(),angular.module('history').config(['$stateProvider','$urlRouterProvider',function(t,s){s.otherwise('/signin'),t.state('history',{url:'/history',templateUrl:'modules/history/views/history.client.view.html'})}]),function(){'use strict';function t(s,r,l,m,d,c,u,p,g){var h=this,y=new Date().setDate(new Date().getDate()-29);h.authentication=m,h.buildHistory=function(){g.loading('history',d.query({latest:y}).$promise.then(function(w){return u.buildHistoryList(w)}).then(function(w){return h.animeHistory=w,c.query({latest:y}).$promise}).then(function(w){//    console.log('manga', result);
return u.buildHistoryList(w)}).then(function(w){h.mangaHistory=w}))}//Needed to catch 'Character' setting and skip it.
,h.filterConfig={historyFilter:'Today'},h.happenedWhen=function(w){return u.happenedWhen(w)},h.historyGroups=[{name:'Today'},{name:'Yesterday'},{name:'This week'},{name:'Last week'},{name:'Two weeks ago'},{name:'Three weeks ago'},{name:'Four weeks ago'}],h.view='Anime',s.$watch('view',function(v){h.view!==void 0&&'Anime'!==v&&'Manga'!==v&&(h.view='Anime')})}angular.module('history').controller('HistoryController',t),t.$inject=['$scope','$stateParams','$location','Authentication','AnimeHistory','MangaHistory','HistoryService','ListService','spinnerService']}(),function(){'use strict';function t(s,r,l,m,d,c,u,p){var g=this,h=[];g.cancel=function(){g.updated&&(g.viewItem.meta.history=h),p.dismiss()},g.deleteHistory=function(v,w){c.confirmation(function(){0===h.length&&(h=g.viewItem.meta.history),g.viewItem=d.deleteHistory(v,w),g.updated=!0})},g.submit=function(){p.close(g.updated)},g.type=r.type,g.updated=!1,g.viewItem=r.viewItem}angular.module('tasks').controller('ViewHistoryController',t),t.$inject=['$scope','data','$stateParams','Authentication','ItemService','NotificationFactory','spinnerService','$uibModalInstance']}(),function(){'use strict';function t(s,r){return function(l,m,d){var c,u='group'===m?'latest':'date';if(l!==void 0)return l.filter(function(p){return c=r(p[u]).startOf('day'),!!s.filterItemHistory(d.toLowerCase(),c)&&p})}}angular.module('history').filter('historySeparator',t),t.$inject=['HistoryService','moment']}(),function(){'use strict';//History service used to communicate Animeitems REST endpoints
function t(s){return s('history/anime/:latest',{latest:'@_latest'},{update:{method:'PUT'}})}angular.module('history').factory('AnimeHistory',t),t.$inject=['$resource']}(),function(){'use strict';function t(s,r){// getting mondays and sundays for this, last, two and three weeks ago.
function l(){var p=[],g=m.weekBeginning(),h=m.weekEnding();return p={mondays:[g,m.getSetDaysAgo(g,7),m.getSetDaysAgo(g,14),m.getSetDaysAgo(g,21),m.getSetDaysAgo(g,28)],sundays:[h,m.getSetDaysAgo(h,7),m.getSetDaysAgo(h,14),m.getSetDaysAgo(h,21),m.getSetDaysAgo(h,28)]},p}//get 'daysAgo' days ago from 'thisEnd' date.
//get 'this' monday.
//get 'this' sunday.
/** function to display relative time.
     *  Using diff because fromNow will create conflicts between
     *  the item date and the 'group date'.
     */var m={buildHistoryList:function(g){var h=r.defer(),y=m.extractHistory(g).then(function(v){return v.sort(function(w,C){var $=w.date,T=C.date;return $>T?-1:$<T?1:$===T?0:void 0}),m.groupItemHistory(v)}).then(function(v){h.resolve(v)});return h.promise},extractHistory:function(g){var h=r.defer(),y=[],v=s(new Date).startOf('day');return angular.forEach(g,function(w){angular.forEach(w.meta.history,function(C){var $=s(C.date).startOf('day'),T=v.diff($,'days');//                console.log(diff);
29>T&&y.push({date:C.date,value:C.value,title:w.title,id:w._id})})}),h.resolve(y),h.promise},filterItemHistory:function(g,h){var y=m.today.diff(h,'days');return'today'===g?0===y:'yesterday'===g?1===y:'this week'===g?c[0]<=h&&h<=u[0]:'last week'===g?c[1]<=h&&h<=u[1]:'two weeks ago'===g?c[2]<=h&&h<=u[2]:'three weeks ago'===g?c[3]<=h&&h<=u[3]:'four weeks ago'===g?c[4]<=h&&h<=u[4]:void 0},getEndsOfWeek:l,getSetDaysAgo:function(g,h){var y=s(g).subtract(h,'days');return y},groupItemHistory:function(g){var y,v,w,C,h=r.defer(),$=g.length,T=[];for(var S=0;S<$;S++)w=g[S],0===S?(T.push({title:w.title,items:[],count:1,latest:w.date,oldest:w.date}),T[0].items.push(w)):0!=S&&(v=g[S-1],y=T.length-1,v.title===w.title?(T[y].items.push(w),T[y].count++,T[y].oldest=w.date):v.title!==w.title&&(C={title:w.title,items:[],count:1,latest:w.date,oldest:w.date},C.items.push(w),T.push(C)));return h.resolve(T),h.promise},happenedWhen:function(g){//          console.log(latest, updated);
var h=s(new Date).startOf('day'),y=s(g).startOf('day'),v=h.diff(y,'days');//for 0 and 1 day(s) ago use the special term.
return 0===v?'Today at '+s(g).format('HH:mm'):1===v?'Yesterday at '+s(g).format('HH:mm'):v+' days ago at '+s(g).format('HH:mm')},today:s(new Date).startOf('day'),weekBeginning:function(){var g=new Date,h=g.getDay(),y=g.getDate()-h+(0===h?-6:1),v=new Date,w=new Date(v.setDate(y));return s(w.toISOString()).startOf('day')},weekEnding:function(){var g=new Date,h=g.getDay(),y=g.getDate()-h+(0===h?0:7),v=new Date,w=new Date(v.setDate(y));return s(w.toISOString()).endOf('day')}},d=l(),c=d.mondays,u=d.sundays;return m}angular.module('history').service('HistoryService',t),t.$inject=['moment','$q']}(),function(){'use strict';function t(s){return s('history/manga/:latest',{latest:'@_latest'},{update:{method:'PUT'}})}angular.module('history').factory('MangaHistory',t),t.$inject=['$resource']}(),angular.module('mangaitems').run(['Menus',function(t){t.addMenuItem('topbar','Mangaitems','mangaitems','dropdown','/mangaitems(/create)?'),t.addSubMenuItem('topbar','mangaitems','List Mangaitems','mangaitems'),t.addSubMenuItem('topbar','mangaitems','New Mangaitem','mangaitems/create')}]),angular.module('mangaitems').config(['$stateProvider',function(t){t.state('listMangaitems',{url:'/mangaitems',templateUrl:'modules/mangaitems/views/list-mangaitems.client.view.html'}).state('createMangaitem',{url:'/mangaitems/create',templateUrl:'modules/mangaitems/views/create-mangaitem.client.view.html'}).state('viewMangaitem',{url:'/mangaitems/:mangaitemId',templateUrl:'modules/mangaitems/views/view-mangaitem.client.view.html'}).state('editMangaitem',{url:'/mangaitems/:mangaitemId/edit',templateUrl:'modules/mangaitems/views/create-mangaitem.client.view.html'})}]),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h,y,v,w,C,$){var T=this,S=r.mangaitemId;T.addedChapters=function(){T.mangaitem.latest=T.itemUpdate,T.config.updateHistory=!0,T.mangaitem.chapters===T.mangaitem.finalChapter&&0!==T.mangaitem.finalChapter&&!1===T.mangaitem.reReading&&(T.mangaitem.end=T.itemUpdate),T.mangaitem.chapters>T.mangaitem.finalChapter&&0!==T.mangaitem.finalChapter&&(T.mangaitem.chapters=T.mangaitem.finalChapter)},T.addedVolumes=function(){T.mangaitem.volumes>T.mangaitem.finalVolume&&0!==T.mangaitem.finalVolume&&(T.mangaitem.volumes=T.mangaitem.finalVolume)}// Create new Mangaitem
,T.addTag=//For adding new tags.
function(){$.addTag(T.tagArray,T.newTag),T.newTag=''}//Drop tag for new tags.
,T.mangaitem={},T.authentication=m,T.config={title:'Create',updateHistory:!1,ratingActions:{maxRating:10,percent:void 0,overStar:null},statTags:[],commonArrays:y.getCommonArrays(),malSearchType:'manga'},T.create=function(){var A=new c;//Handle situation if objects not selected.
// Create new Mangaitem object
A=new c({title:T.mangaitem.title,chapters:T.mangaitem.chapters,volumes:T.mangaitem.volumes,start:T.mangaitem.start,latest:T.mangaitem.latest,finalChapter:T.mangaitem.finalChapter,finalVolume:T.mangaitem.finalVolume,image:T.imgPath,hardcopy:T.mangaitem.hardcopy,anime:T.mangaitem.anime!==void 0&&null!==T.mangaitem.anime?T.mangaitem.anime._id:T.mangaitem.anime,tags:T.tagArray,mal:T.mangaitem.mal,user:T.user}),A.$save(function(){l.path('/mangaitems'),v.success('Saved!','Manga was saved successfully')},function(x){T.error=x.data.message,v.error('Error!',x.data.message)})}// Update existing Mangaitem
,T.dropTag=function(A){$.dropTag(T.tagArray,A)}//Drop tag for tags.
,T.finalNumbers=!1,T.find=// Find a list of Mangaitems
function(){c.query().$promise.then(function(A){T.mangaitems=A,T.config.statTags=h.buildStatTags(A,0)})}// Find existing Animeitem
,T.findOne=function(){C.loading('editManga',c.get({mangaitemId:r.mangaitemId}).$promise.then(function(A){T.mangaitem=A,T.malSearchOptions.disabled=T.mangaitem.mal&&0<T.mangaitem.mal.id||!1}))}// Find a list of Animeitems for dropdowns.
,T.findAnime=function(){T.animeitems=d.query()}//image upload
,T.imgPath='',T.itemUpdate=new Date,T.init=//for typeahead array.
function(){T.config.isCreate=S===void 0,T.config.isCreate?(T.mangaitem.chapters=0,T.mangaitem.volumes=0,T.mangaitem.start=T.itemUpdate,T.mangaitem.latest=T.itemUpdate,T.malSearchOptions.disabled=!1):!T.config.isCreate&&(T.config.title='Edit',T.findOne()),T.find(),T.findAnime()},T.malSearchOptions={placeholder:'Title',name:'title',required:!0,autocomplete:'off',disabled:!0},T.removeTag=function(A){$.dropTag(T.mangaitem.tags,A)},T.sections={showAdditional:!1,showCompletion:!1,showItemTags:!1},T.selectMalEntry=function(A){A?(T.mangaitem.title=A.title,T.mangaitem.finalChapter=A.chapters,T.mangaitem.finalVolume=A.volumes,T.imgPath=A.image,T.mangaitem.mal={id:A.id}):(T.mangaitem.finalChapter=0,T.mangaitem.finalVolume=0,T.mangaitem.mal=void 0)},T.submit=function(){T.config.isCreate&&T.create(),T.config.isCreate||T.update()},T.tagArray=[],T.tagArrayRemove=[],T.update=function(){var A=T.mangaitem;T.mangaitem=void 0,w.update(A,T.tagArray,T.config.updateHistory,T.imgPath)},T.uploadFile=function(){T.imgPath='/modules/mangaitems/img/'+T.myFile.name,u.uploadFileToUrl(T.myFile,'/fileUpload')},T.usedTags=[],T.init()}angular.module('mangaitems').controller('CreateMangaController',t),t.$inject=['$scope','$stateParams','$location','Authentication','Animeitems','Mangaitems','fileUpload','$sce','$window','ItemService','ListService','NotificationFactory','MangaFactory','spinnerService','TagService','Enums']}(),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h,y,v,w,C){var $=this;$.authentication=m,$.filterConfig={showingCount:0,sortType:'',sortReverse:!0,ratingLevel:void 0,ratingActions:{maxRating:10,percent:void 0,overStar:null},searchTags:'',tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:{},statTags:[],viewItem:''},$.find=// Find a list of Mangaitems
function(){$.filterConfig.selectListOptions=h.getSelectListOptions($.whichController),w.loading('manga',d.query().$promise.then(function(S){$.mangaitems=S,$.filterConfig.areTagless=h.checkForTagless(S),$.filterConfig.statTags=g.buildStatTags(S,0)}))},$.findOne=// Find existing Mangaitem
function(){d.get({mangaitemId:r.mangaitemId}).$promise.then(function(S){$.mangaitem=S})},$.latestDate=//latest date display format.
function(S,I){return g.latestDate(S,I)},$.pageConfig={currentPage:0,pageSize:10},$.remove=// Remove existing Mangaitem
function(S){y.confirmation(function(){if(S)for(var I in S.$remove(),$.mangaitems)$.mangaitems[I]===S&&$.mangaitems.splice(I,1);else $.mangaitem.$remove(function(){l.path('/mangaitems')});y.warning('Deleted!','Manga was successfully deleted.')})}// Update existing Mangaitem
,$.tickOff=function(S){S.chapters+=1,S.latest=new Date,$.updateHistory=!0,$.mangaitem=S,$.update()},$.trustAsResourceUrl=//allow retreival of local resource
function(S){return u.trustAsResourceUrl(S)},$.update=function(){var S=$.mangaitem;$.mangaitem=void 0,v.update(S,$.tagArray,$.updateHistory,$.imgPath)},$.usedTags=[],$.viewItemHistory=function(){C.open({animation:!0,templateUrl:'/modules/history/views/item-history.html',controller:'ViewHistoryController as viewHistory',size:'lg',resolve:{data:function(){return{viewItem:$.filterConfig.viewItem,type:'manga'}}}}).result.then(function(S){console.log('closed history: ',S,$.filterConfig.viewItem.meta),S&&($.mangaitem=$.filterConfig.viewItem,$.update())})},$.whichController='mangaitem'}angular.module('mangaitems').controller('MangaitemsController',t),t.$inject=['$scope','$stateParams','$location','Authentication','Mangaitems','Animeitems','$sce','$window','ItemService','ListService','NotificationFactory','MangaFactory','spinnerService','$uibModal']}(),function(){'use strict';angular.module('tasks').directive('mangaItemModel',function(){return{restrict:'A',replace:!0,templateUrl:'modules/mangaitems/templates/manga-item.html'}})}(),function(){'use strict';function t(s,r,l,m,d){return{update:function(c,u,p,g){var h=c;//console.log(mangaitem);
//dropdown passes whole object, if-statements for lazy fix - setting them to _id.
null!==c.anime&&c.anime!==void 0&&(h.anime=c.anime._id),u!==void 0&&(h.tags=r.concatenateTagArrays(h.tags,u)),h=l.itemHistory(h,p,'manga'),g!==void 0&&null!==g&&''!==g&&(h.image=g),h.chapters===h.finalChapter&&0!==h.finalChapter?(h.end===void 0||null===h.end)&&(h.volumes=h.finalVolume,h.end=h.latest):!1===h.reReading&&(h.end=null),h.status=void 0!==h.end&&null!==h.end,!0===h.reReading&&h.chapters===h.finalChapter&&(h.volumes=h.finalVolume,h.reReadCount+=1,h.reReading=!1),h.$update(function(){-1===window.location.href.indexOf('tasks')&&d.path('/mangaitems'),m.success('Saved!','Manga was saved successfully')},function(y){y.data.message,m.error('Error!',y.data.message)})}}}angular.module('mangaitems').factory('MangaFactory',t),t.$inject=['Mangaitems','ListService','ItemService','NotificationFactory','$location']}(),function(){'use strict';//Mangaitems service used to communicate Mangaitems REST endpoints
function t(s){return s('mangaitems/:mangaitemId',{mangaitemId:'@_id'},{update:{method:'PUT'}})}angular.module('mangaitems').factory('Mangaitems',t),t.$inject=['$resource']}(),angular.module('orders').run(['Menus',function(t){t.addMenuItem('topbar','Orders','orders','dropdown','/orders(/create)?'),t.addSubMenuItem('topbar','orders','List Orders','orders'),t.addSubMenuItem('topbar','orders','New Order','orders/create')}]),angular.module('orders').config(['$stateProvider',function(t){t.state('listOrders',{url:'/orders',templateUrl:'modules/orders/views/list-orders.client.view.html'}).state('createOrder',{url:'/orders/create',templateUrl:'modules/orders/views/create-order.client.view.html'}).state('viewOrder',{url:'/orders/:orderId',templateUrl:'modules/orders/views/view-order.client.view.html'}).state('editOrder',{url:'/orders/:orderId/edit',templateUrl:'modules/orders/views/create-order.client.view.html'})}]);var CompleteOrdersController=function(){function t(s,r,l){this.$scope=s,this.$uibModalInstance=r,this.order=l,this.newPrice={company:'',price:null}}return t.prototype.editOrder=function(s){var r=this.order.nextVolume.prices[s];this.newPrice.company=r.company,this.newPrice.price=r.price,this.order.nextVolume.prices.splice(s,1)},t.prototype.completeOrder=function(){this.order.nextVolume.prices.push({company:this.newPrice.company,date:this.newPrice.date,price:this.newPrice.price,rrp:this.order.rrp,paid:!0}),this.$uibModalInstance.close(this.order)},t.prototype.cancel=function(){this.$uibModalInstance.dismiss('cancel')},t.controllerId='CompleteOrdersController',t.$inject=['$scope','$uibModalInstance','order'],t}();angular.module('orders').controller(CompleteOrdersController.controllerId,CompleteOrdersController);var CreateOrdersController=function(){function t(s,r,l,m,d,c,u,p,g){this.$scope=s,this.$stateParams=r,this.$location=l,this.Authentication=m,this.$q=d,this.Orders=c,this.Mangaitems=u,this.$uibModal=p,this.NotificationFactory=g,this.isCreateMode=void 0===this.$stateParams.orderId,this.order={},this.orderCopy={series:'',nextVolume:{volume:1,date:Date.now(),rrp:0,prices:[]},rrp:0,orderHistory:[]},this.authentication=this.Authentication,this.stepConfig={stepHeaders:[{text:'Set next order'},{text:'Set prices'}],currentStep:1,stepCount:2,items:[]},this.init()}return t.prototype.init=function(){var s=this;angular.copy(this.orderCopy,this.order),this.isCreateMode?(console.log('create mode'),this.Mangaitems.query().$promise.then(function(r){s.stepConfig.items=r,console.log('items: ',r)})):(console.log('edit mode'),this.findOne()),console.log('init done: ')},t.prototype.takeStep=function(s,r){console.log('stepping: ',s,r),this.stepConfig.currentStep=r?s+1:s-1},t.prototype.processOrder=function(){if(0<this.order.nextVolume.volume){var s=angular.copy(this.order.nextVolume);this.order.orderHistory.push(this.order.nextVolume),this.order.nextVolume={volume:s.volume+1,date:null,rrp:this.order.rrp,prices:[]},this.update()}},t.prototype.cancel=function(){this.$location.path('orders')},t.prototype.create=function(){var s=this,r=new this.Orders({series:this.order.series._id,nextVolume:{date:this.order.nextVolume.date,volume:this.order.nextVolume.volume,rrp:this.order.nextVolume.rrp,prices:this.order.nextVolume.prices},rrp:this.order.rrp,orderHistory:this.order.orderHistory});r.$save(function(l){s.$location.path('orders/'+l._id),s.NotificationFactory.success('Saved!','New Order was successfully saved!'),angular.copy(s.orderCopy,s.order)},function(l){this.error=l.data.message,this.NotificationFactory.error('Error!','Order failed to save!')})},t.prototype.update=function(){var s=this,r=this.order;r.$update(function(){s.$location.path('orders/'+r._id),s.NotificationFactory.success('Saved!','Order was successfully saved!')},function(l){this.error=l.data.message,this.NotificationFactory.error('Error!','Order failed to save!')})},t.prototype.openBoughtDialog=function(){var s=this,r=this.$uibModal.open({animation:!0,templateUrl:'/modules/orders/views/complete-order.client.view.html',controller:'CompleteOrdersController as modal',size:'md',resolve:{order:function(){return s.order}}});r.result.then(function(l){console.log(l),s.order=l,s.processOrder()})},t.prototype.findOne=function(){this.order=this.Orders.get({orderId:this.$stateParams.orderId}),console.log('found one: ',this.order)},t.controllerId='CreateOrdersController',t.$inject=['$scope','$stateParams','$location','Authentication','$q','Orders','Mangaitems','$uibModal','NotificationFactory'],t}();angular.module('orders').controller(CreateOrdersController.controllerId,CreateOrdersController);var OrderHistoryController=function(){function t(s,r,l,m){this.$scope=s,this.$uibModalInstance=r,this.order=l,this.$filter=m,this.processHistory()}return t.prototype.processHistory=function(){var s=this;angular.forEach(this.order.orderHistory,function(r){console.log('order history: ',r);var l=r.prices.length;for(var m=0;m<l;m++)if(r.prices[m].paid){var d=s.$filter('number')(r.prices[m].price,2),c=s.$filter('number')(r.prices[m].rrp,2);r.purchaseDate=r.prices[m].date,r.paid=d,r.rrpInstance=c,r.saving=(100*(d/c)).toFixed(2)}})},t.prototype.cancel=function(){this.$uibModalInstance.dismiss('cancel')},t.controllerId='OrderHistoryController',t.$inject=['$scope','$uibModalInstance','order','$filter'],t}();angular.module('orders').controller(OrderHistoryController.controllerId,OrderHistoryController);var OrdersController=function(){function t(s,r,l,m,d,c,u){this.$scope=s,this.$stateParams=r,this.$location=l,this.Authentication=m,this.Orders=d,this.spinnerService=c,this.$uibModal=u,this.authentication=this.Authentication,this.order=void 0,this.orders=[],this.pageConfig={currentPage:0,pageSize:10},this.init()}return t.prototype.init=function(){console.log('init: ',this.$stateParams),this.$stateParams.orderId?(console.log('find one'),this.findOne()):(console.log('find all'),this.find())},t.prototype.remove=function(s){if(s){s.$remove();for(var r=0,l=this.order.length;r<l;r++)this.orders[r]===s&&this.orders.splice(r,1)}else this.order.$remove(function(){this.$location.path('orders')})},t.prototype.find=function(){var s=this;this.spinnerService.loading('orders',this.Orders.query().$promise.then(function(r){s.orders=r}))},t.prototype.findOne=function(){var s=this;this.spinnerService.loading('orders',this.Orders.get({orderId:this.$stateParams.orderId}).$promise.then(function(r){s.order=r}))},t.prototype.openOrderHistoryDialog=function(){var s=this;this.$uibModal.open({animation:!0,templateUrl:'/modules/orders/views/order-history.client.view.html',controller:'OrderHistoryController as modal',size:'md',resolve:{order:function(){return s.order}}})},t.controllerId='OrdersController',t.$inject=['$scope','$stateParams','$location','Authentication','Orders','spinnerService','$uibModal'],t}();angular.module('orders').controller(OrdersController.controllerId,OrdersController),function(){'use strict';function t(s){return s('orders/:orderId',{orderId:'@_id'},{update:{method:'PUT'}})}angular.module('orders').factory('Orders',t),t.$inject=['$resource']}(),angular.module('ratings').config(['$stateProvider','$urlRouterProvider',function(t,s){s.otherwise('/signin'),t.state('ratings',{url:'/ratings',templateUrl:'modules/ratings/views/ratings.client.view.html'})}]),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h){function y(w){'Anime'===w?h.loading('rating',d.query().$promise.then(function(C){v.items=C})):'Manga'==w&&h.loading('rating',c.query().$promise.then(function(C){v.items=C})),v.viewItem=void 0}//apply new score.
/** Episode rating functions below here.
     */var v=this;v.authentication=m,v.episodeScore=function(C){//            console.log('finished: ', finished, ctrl.viewItem.meta.history);
if(C){var $=v.viewItem;$.$update(function(){l.path('ratings'),p.success('Saved!','New episode rating was saved successfully'),h.loading('summary',g.buildSummaryFunctions(v.viewItem.meta.history).then(function(T){v.summaryFunctions=T}))},function(T){v.error=T.data.message,p.error('Error!','Your change failed!')})}},v.find=function(C){'Anime'===C||'Manga'===C?y(C):(v.view='Anime',y(v.view))},v.go=function(C){l.path('/mangaitems/'+C)},v.hoveringOver=//rating 'tooltip' function
function(C){v.overStar=C,v.percent=100*(C/v.maxRating)},v.itemScore=function(C,$){return C.rating!==$&&(C.rating=$,C.$update(function(){l.path('ratings'),p.success('Saved!','New rating was saved successfully')},function(T){v.error=T.data.message,p.error('Error!','Your change failed!')})),!1},v.maxRating=10,v.modelOptions={debounce:700},v.pageConfig={currentPage:0,pageSize:20},v.ratingLevel=void 0,v.sortReverse=!0,v.sortType='rating',v.view='Anime',v.viewEpisodeRatings=function(C){v.viewItem=v.viewItem===C?void 0:C,v.isEqual=!(v.viewItem!==C),v.search=v.viewItem===C?C.title:'',v.viewItem!==void 0&&h.loading('summary',g.buildSummaryFunctions(v.viewItem.meta.history).then(function($){v.summaryFunctions=$}))},v.viewItem=void 0}angular.module('ratings').controller('RatingsController',t),t.$inject=['$scope','$stateParams','$location','Authentication','Animeitems','Mangaitems','ListService','NotificationFactory','StatisticsService','spinnerService']}(),function(){'use strict';function t(s){return function(r,l,m){r.$watch(m.focusOnShow,function(d){s(function(){var c=d&&l[0].focus();return c})},!0)}}t.$inject=['$timeout'],angular.module('ratings').directive('focusOnShow',t)}(),angular.module('statistics').config(['$stateProvider','$urlRouterProvider',function(t,s){s.otherwise('/signin'),t.state('statistics',{url:'/statistics',templateUrl:'modules/statistics/views/statistics.client.view.html'})}]),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h,y,v,w,C){//for voice actor list;
function $(x,M){'Anime'===x||'Manga'===x?(I.overview=h.buildOverview(M),I.historyDetails.months=h.completeByMonth(M),'Anime'==x&&(I.historyDetails.seasons=h.completeBySeason(M)),I.ratingValues=h.getRatingValues(M),I.ratingsDistribution=h.buildRatingsDistribution(M),I.statTags=h.buildStatTags(M,I.ratingValues.averageRating)):'Character'===x?(I.statTags=y.buildCharacterTags(M),I.statSeries=y.buildSeriesList(M),I.voiceActors=y.buildVoiceActors(M),y.buildGenderDistribution(I.statTags,M.length).then(function(F){I.gender=F,I.gender[0].colour=I.colours.red,I.gender[1].colour=I.colours.green,I.gender[2].colour=I.colours.blue})):'Topten'==x&&(v.buildToptenModeList(M,I.toptens.type).then(function(F){I.toptens.detail.items=F.sort(function(O,L){return O.count<L.count?1:O.count>L.count?-1:0})}),console.log('topten stat process: ',M,I.toptens))}//handle getting view items and setting view specific defaults.
function T(x){I.detail.history='months',I.filterConfig.search.tag='',I.detail.isVisible=!1,I.detail.isEpisodeRatings=!1,I.statTags=[],I.ratingsDistribution=[],'Anime'===x?(I.filterConfig.sort.tag.type='ratingWeighted',0===I.dataStore.anime.length?C.loading('items',d.query().$promise.then(function(M){I.dataStore.anime=M,I.items=M,$(x,M)})):(I.items=I.dataStore.anime,$(x,I.dataStore.anime),console.log('from cache - anime'))):'Manga'===x?(I.filterConfig.sort.tag.type='ratingWeighted',0===I.dataStore.manga.length?C.loading('items',c.query().$promise.then(function(M){I.dataStore.manga=M,I.items=M,$(x,M)})):(I.items=I.dataStore.manga,$(x,I.dataStore.manga),console.log('from cache - anime'))):'Character'===x?(I.filterConfig.sort.tag.type='count',0===I.dataStore.character.length?C.loading('character',u.query().$promise.then(function(M){I.dataStore.character=M,I.items=M,$(x,M)})):(I.items=I.dataStore.character,$(x,I.dataStore.character),console.log('from cache - character'))):'Topten'==x&&(I.dataStore.toptens.anime.totalListCount===void 0?C.loading('topten',p.query().$promise.then(function(M){return g.groupItemsByProperties(M,['type'])}).then(function(M){for(var F=0,O='';3>F;F++)O=M[F][0].type,I.dataStore.toptens[O].items=M[F],I.dataStore.toptens[O].totalListCount=M[F].length;return v.buildToptenDataStructure(I.toptens,M)}).then(function(M){I.toptens=M,$(x,M[I.toptens.type].items),console.log('topten arrays: ',I.toptens)})):($(x,I.toptens[I.toptens.type].items),console.log('from cache - topten'))),console.log('dataStore check: ',I.dataStore)}//Builds ratings aggregates.
function S(x){C.loading('detail',v.buildSummaryFunctions(x).then(function(M){I.historyDetails.summaryFunctions=M,console.log('got summary functions: ',I.detail,I.historyDetails)})),!0===I.detail.summary.isVisible&&C.loading('detail',v.buildYearSummary(x,I.detail.year,I.detail.summary.type).then(function(M){I.historyDetails.yearSummary=M,console.log('got year summary: ',I.detail,I.historyDetails)})),I.detail.isEpisodeRatings&&x[0].meta.episodeSummaryFunctions===void 0&&C.loading('detail',v.buildEpisodeSummaries(x).then(function(){console.log(x)}))}/** Using the start date of confirmed 'in-season' shows
       *  to populate the new season attrs. that will work with the new
       *  filters in the hopes accuracy and speed will increase.
       */var I=this,A=w('filter');I.authentication=m,I.colours={red:'#c9302c',green:'#449d44',blue:'#31b0d5'},I.commonArrays=g.getCommonArrays('statistics'),I.dataStore={anime:[],manga:[],character:[],toptens:{anime:{},manga:{},character:{}}},I.detail={isVisible:!1,year:'',division:'',divisionText:'',history:'months',summary:{type:'',isVisible:!1},isEpisodeRatings:!1},I.filterConfig={show:{tag:!1,series:!1,voice:!1},sort:{episodeRating:{type:'title',reverse:!1},tag:{type:'ratingWeighted',reverse:!0},tagDetail:{type:'count',reverse:!0},series:{type:'count',reverse:!0},voice:{type:'count',reverse:!0},topten:{type:'count',reverse:!0}},search:{tag:'',tagDetail:'',series:'',voice:'',topten:''},topten:{isRanked:!1,isFavourite:!1}},I.find=function(M){T(M)},I.gender={},I.generateSeasons=function(){if('Anime'===I.view){var M=h.setSeason(I.items,I.detailSeasonYear,I.detailSeason);angular.forEach(M,function(F){F.$update(function(){console.log(F)},function(O){I.error=O.data.message})})}},I.getFilteredItems=function(M){M&&(I.detail.isVisible=!1,I.detail.summary.isVisible=!1,'months'===I.detail.history&&(I.detail.isEpisodeRatings=!1));var F=w('statisticsDetailFilter')(I.items,I.detail.history,I.detail.year,I.detail.division);S(F)},I.getToptenItemStatistics=function(M,F){console.log('get topten stats: ',F);var O=I.dataStore.toptens[F].items;I.filterConfig.topten.isRanked&&(O=A(O,{isRanked:!0})),I.filterConfig.topten.isFavourite&&(O=A(O,{isFavourite:!0})),console.log('post filtering: ',O),0<O.length?(I.toptens[F].items=[],v.buildToptenDataStructure(I.toptens,[O]).then(function(L){I.toptens=L,console.log('topten data structure - result: ',L,I.toptens),$(M,L[F].items)})):(I.toptens[F].listCount=0,I.toptens.detail.items=O)},I.historyDetail=function(M,F,O,L){I.detail.isVisible=!0,I.detail.year=M,I.detail.division=F,I.detail.divisionText=O,I.detail.summary.type=L,I.detail.summary.isVisible=L!==void 0,I.getFilteredItems()},I.historyDetails={},I.overview={},I.ratingsDistribution=[],I.statSeries=[],I.statTags=[],I.tableDetail=function(M,F){I.tableDetails[M]===F?(I.filterConfig.search[M]='',I.filterConfig.show[M]=!1,I.tableDetails[M]='','tag'===M&&(I.tableDetails.isEqual=!1)):(I.filterConfig.search[M]=F,I.tableDetails[M]=F,I.filterConfig.show[M]=!0,'tag'===M&&(I.tagDetailResult=y.buildRelatedCharacterTags(I.items,F),I.tableDetails.isEqual=!0))},I.tableDetails={},I.taglessItem=!1,I.toptens={type:'anime',anime:{listCount:0,items:[]},manga:{listCount:0,items:[]},character:{listCount:0,items:[]},detail:{items:[]}},I.view='Anime',I.voiceActors=[]}angular.module('statistics').controller('StatisticsController',t),t.$inject=['$scope','$stateParams','$location','Authentication','Animeitems','Mangaitems','Characters','Toptens','ListService','ItemService','CharacterService','StatisticsService','$filter','spinnerService']}(),function(){'use strict';function t(){return{restrict:'A',link:function(s,r){function l(){m.scrollWidth>m.offsetWidth?m.classList.add('flooded'):m.classList.remove('flooded')}var m=r[0];l(),s.$watch(function(){return{width:m.offsetWidth}},function(){l()},!0)}}}angular.module('statistics').directive('detectFlood',t),t.$inject=['$timeout']}(),function(){'use strict';angular.module('statistics').directive('percentageBarContainer',function(){return{restrict:'A',replace:!0,scope:{border:'@?'},transclude:!0,bindToController:!0,template:'<div class="relative {{percentageBarContainer.border}}" style="height: 20px;" ng-transclude></div>',controllerAs:'percentageBarContainer',controller:['$scope',function(){}]}})}(),function(){'use strict';angular.module('statistics').directive('percentageBar',function(){return{restrict:'A',replace:!0,scope:{type:'@?',percentage:'@',colour:'@?',display:'@?'},require:'^percentageBarContainer',templateUrl:'/modules/statistics/templates/percentage-bar.html',link:function(){}}})}(),function(){'use strict';angular.module('statistics').directive('tabContainer',function(){return{restrict:'A',transclude:!0,replace:!0,scope:{model:'=ngModel'},templateUrl:'/modules/statistics/templates/tab-container.html',require:'?ngModel',bindToController:!0,controllerAs:'tabContainer',controller:['$scope',function(s){var r=this;r.tabs=[],r.currentTab=void 0,r.listShift=0,r.addTab=function(m){r.tabs.push(m),1===r.tabs.length&&(m.active=!0)},r.disable=function(l){l.active&&angular.forEach(r.tabs,function(m){m.disabled||r.select(m)})},r.select=function(l){l.disabled||(angular.forEach(r.tabs,function(m){m.active&&m!==l&&(m.active=!1)}),l.active=!0,r.currentTab=s.tabContainer.model===void 0?void 0:l.heading)},r.shiftTabs=function(l){'origin'===l?0<r.listShift+100?r.listShift=0:r.listShift+=100:'offset'===l?r.listShift-100<s.elWidth-s.ulWidth?r.listShift=s.elWidth-s.ulWidth:r.listShift-=100:void 0}}],link:function(s,r,l,m){var d=r[0],c=d.children[0].children[0];s.elWidth=d.offsetWidth,s.ulWidth=c.offsetWidth,s.$watch('tabContainer.currentTab',function(u){u!==void 0&&m.$viewValue!==void 0&&m.$setViewValue(u)}),s.$watch(function(){return{width:d.offsetWidth}},function(){s.elWidth=d.offsetWidth},!0),s.$watch(function(){return{width:c.offsetWidth}},function(){s.ulWidth=c.offsetWidth},!0),s.$watch('tabContainer.listShift',function(u){if(u!==void 0){var p=0===u?'':'px';c.style.left=u+p}})}}})}(),function(){'use strict';angular.module('statistics').directive('tabView',function(){return{restrict:'A',transclude:!0,replace:!0,template:'<div class="tab-view" role="tabpanel" ng-show="active" ng-transclude></div>',require:'^tabContainer',scope:{heading:'@',disabled:'='},link:function(s,r,l,m){s.active=!1,m.addTab(s),s.$watch('disabled',function(d){d!==void 0&&d&&(console.log(s.heading,d),m.disable(s))})}}})}(),function(){'use strict';//Statistics service
function t(s,r,l){function m(c,u){var p=u.length;if(1>c.length){for(;p--;)c.push({metric:u[p].metric,values:[]});c.reverse()}p=u.length;for(var g=0;g<p;g++)c[g].values.push({value:u[g].value});return c}var d={buildEpisodeSummaries:function(u){return l(function(p){angular.forEach(u,function(g){d.buildSummaryFunctions(g.meta.history).then(function(h){g.meta.episodeSummaryFunctions=h})}),p(u)})},buildSummaryFunctions:function(u){return l(function(p){if(u!==void 0){for(var g=u.length,h=0,y=10,v=0,w={},C={count:0,sum:0};g--;)h=u[g].rating>h?u[g].rating:h,y=0<u[g].rating&&u[g].rating<y?u[g].rating:y,C.count+=0<u[g].rating?1:0,C.sum+=u[g].rating,v=(C.sum/C.count).toFixed(2),w=d.getModeMap(u,'rating',0);p([{metric:'Average rating',value:v},{metric:'Highest rating',value:h},{metric:'Lowest rating',value:10===y?0:y},{metric:'Mode rating',value:w.value===void 0?0:w.value}])}})},buildToptenDataStructure:function(u,p){return l(function(g){angular.forEach(p,function(h){var y=h[0].type,v=y+'List',w=h.length;u[y].listCount=w;for(var C=0;C<w;C++){var $=h[C][v].length;for(var T=0;T<$;T++)u[y].items.push(h[C][v][T])}}),g(u)})},buildToptenModeList:function(u,p){var g='character'===p?'name':'title';return d.occuranceCounter(u,g)},buildYearSummary:function(u,p,g){return l(function(h){var y='months'===g?'endedMonth':'season',v='months'===g?'number':'text',w=r.getCommonArrays(),C=w[g].length,$=[],T=[];for(var S=0;S<C;S++){var I=s(y)(u,p,w[g][S][v]),A=d.buildSummaryFunctions(I);T.push(A)}angular.forEach(T,function(x){x.then(function(M){$=m($,M)})}),h($)})},getModeMap:function(u,p,g){var h={},y={count:0,value:''};for(var v=0;v<u.length;v++){var w=u[v][p];null===h[w]||h[w]===void 0?h[w]=1:h[w]++,h[w]>y.count&&g!==w&&(y.count=h[w],y.value=w)}//        console.log(max);
return y},occuranceCounter:function(u,p){return l(function(g){var h=[];r.groupItemsByProperties(u,[p]).then(function(y){for(var v=0,w=y.length;v<w;v++)h.push({value:y[v][0][p],count:y[v].length})}),g(h)})}};return d}angular.module('statistics').service('StatisticsService',t),t.$inject=['$filter','ListService','$q']}(),angular.module('tasks').config(['$stateProvider',function(t){t.state('listTasks',{url:'/tasks',templateUrl:'modules/tasks/views/list-tasks.client.view.html'}).state('createTask',{url:'/tasks/create',templateUrl:'modules/tasks/views/create-task.client.view.html'}).state('viewTask',{url:'/tasks/:taskId',templateUrl:'modules/tasks/views/view-task.client.view.html'}).state('editTask',{url:'/tasks/:taskId/edit',templateUrl:'modules/tasks/views/edit-task.client.view.html'})}]),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h,y,v,w){function C(T){switch(T){case 1:if(!0===$.newTask.link.linked){var S=$.newTask.category;if('Watch'===S)$.linkItems=v.query({status:0}),$.linkType='anime',$.newTask.checklistItems=[],$.newTask.checklist=!1;else if('Read'===S)$.linkItems=w.query({status:0}),$.linkType='manga';else return{valid:!1,message:'Category must be either Watch or Read for linked items!'}}else $.linkType='',$.newTask.link.anime=void 0,$.newTask.link.manga=void 0;return{valid:!0};}}var $=this;$.addChecklistItem=//for adding/removing options.
function(){if(''!==$.newTask.checklistItem&&$.newTask.checklistItem!==void 0){var S=0,I=!1;if(0<$.newTask.checklistItems.length){for(;S<$.newTask.checklistItems.length;)$.newTask.checklistItems[S].text===$.newTask.checklistItem&&(I=!0),S++;//if not in array add it.
!1==I&&$.newTask.checklistItems.push({text:$.newTask.checklistItem,complete:!1})}else $.newTask.checklistItems.push({text:$.newTask.checklistItem,complete:!1})}$.newTask.checklistItem=''},$.backStep=function(){$.stepConfig.currentStep-=1},$.cancel=function(){y.dismiss()},$.commonArrays=r.commonArrays,$.create=// Create new Task
function(){//            console.log(this.newTask);
// Create new Task object
var S=new c({description:$.newTask.description,link:{linked:$.newTask.link.linked,type:!1===$.newTask.link.linked?'':'Watch'===$.newTask.category?'anime':'manga',anime:$.newTask.link.anime===void 0?void 0:$.newTask.link.anime._id,manga:$.newTask.link.manga===void 0?void 0:$.newTask.link.manga._id},day:!0===$.newTask.daily?'Any':$.newTask.day,date:''===$.newTask.date?new Date:$.newTask.date,repeat:!1===$.newTask.link.linked?$.newTask.repeat:'Watch'===$.newTask.category?$.newTask.link.anime.finalEpisode:1,completeTimes:!1===$.newTask.link.linked?0:'Watch'===$.newTask.category?$.newTask.link.anime.episodes:0,updateCheck:!(1!==new Date().getDay()),complete:!1,category:''===$.newTask.category?'Other':$.newTask.category,daily:$.newTask.daily,checklist:$.newTask.checklist,checklistItems:$.newTask.checklistItems});//			// Redirect after save
S.$save(function(){m.path('tasks'),p.success('Saved!','New Task was successfully saved!')},function(I){$.error=I.data.message,console.log(I),p.error('Error!','New Task failed to save!')})},$.dropChecklistItem=function(S){var I=$.newTask.checklistItems;$.newTask.checklistItems=[],angular.forEach(I,function(A){A.text!==S&&$.newTask.checklistItems.push(A)})},$.stepConfig={currentStep:1,stepCount:2},$.submit=function(){$.create(),y.close()},$.takeStep=function(S){var I=C(S);I.valid?$.stepConfig.currentStep+=1:p.popup('Attention!',I.message,'warning')},function(){$.newTask={description:'',link:{linked:!1,type:'',anime:void 0,manga:void 0},day:'',date:new Date,repeat:0,category:'',daily:!1,checklist:!1,checklistItems:[],isAddTask:!1}}(),angular.copy($.newTask,{})}angular.module('tasks').controller('CreateTaskController',t),t.$inject=['$scope','data','$stateParams','$location','Authentication','Tasks','ListService','NotificationFactory','TaskFactory','spinnerService','$uibModalInstance','Animeitems','Mangaitems']}(),function(){'use strict';function t(s,r,l,m,d,c){var u=this,p=!1,g=Math.abs(new Date(m.date).getTime()-new Date().getTime());u.cancel=function(){r.close(p)},u.date=new Date(m.date),u.day=0<u.date.getDay()?u.date.getDay()-1:6,u.days=m.days,u.daysFromToday=Math.ceil(g/86400000),u.events=[],u.init=function(){var y=new Date(d.weekEndingForDate(u.date));angular.forEach(m.events,function(v){new Date(v.date)<y&&(v.day.substring(0,3)===u.days[u.day].text||'Any'===v.day)&&(v.daily?v.daily&&(v.completeTimes+u.daysFromToday<=v.repeat||0===v.repeat)&&u.events.push(v):(v.completeTimes+Math.floor(u.daysFromToday/7)<=v.repeat||0===v.repeat)&&u.events.push(v))}),u.events.sort(function(v,w){var C=v.date,$=w.date;return C<$?1:C>$?-1:0})},u.insertChecklistItem=//Add new checklist item.
function(y,v){c.insertChecklistItem(y,v)}//Tick off a task.
,u.removeTask=function(y){c.removeTask(y,u.events,!0)}//Update task.
,u.tickOff=function(y){c.tickOff(y).then(function(v){p=v.refresh})}//Tick of a checklist item.
,u.tickOffChecklist=function(y,v){c.tickOffChecklist(y,v).then(function(w){p=w.refresh})},u.today=new Date,u.updateTask=function(y){c.updateTask(y)},console.log('data: ',m,'days: ',u.days,u.day,u.date),u.init()}angular.module('tasks').controller('ScheduleCalendarTaskController',t),t.$inject=['$scope','$uibModalInstance','moment','data','ListService','TaskFactory']}(),function(){'use strict';// Tasks controller
function t(s,r,l,m,d,c,u,p,g,h,y){//check things
function v(){1===T?(console.log('monday',T),angular.forEach(C.tasks,function(S){//has it been updated today?
if(!1===S.updateCheck){console.log('updating - ',S.description);var I=S.link.type;if(!1===S.link.linked||'manga'===I)S.completeTimes===S.repeat?S.completeTimes===S.repeat&&(console.log('complete - delete',S.description),g.removeTask(S,C.tasks)):(console.log('not complete',S.description),S.complete=!1,S.updateCheck=!0,g.updateTask(S));else if('anime'===S.link.type){console.log('linked');var A={single:'episodes',all:'finalEpisode'};S.link[I][A.single]===S.link[I][A.all]?S.link[I][A.single]===S.link[I][A.all]&&(console.log('linked complete - delete',S.description),g.removeTask(S,C.tasks)):(console.log('linked not complete',S.description),S.complete=!1,S.updateCheck=!0,g.updateTask(S))}}})):(console.log('not monday',T),angular.forEach(C.tasks,function(S){var I=!1!==S.updateCheck;//is it a daily task?
if(S.updateCheck=!1,!0!==S.daily)!1===S.daily&&I&&(console.log('weekly update: ',S.description),g.updateTask(S));else//has it reached the necessary number of repeats?
if(console.log('daily',S.description),S.completeTimes!==S.repeat){console.log('not complete',S.description);var A=$.toISOString().slice(0,10);//has it been refreshed today?
S.dailyRefresh.slice(0,10)!==A&&(console.log('not complete - update',S.description),S.complete=!1,S.dailyRefresh=A,g.updateTask(S))}else S.completeTimes===S.repeat&&(console.log('complete - delete',S.description),g.removeTask(S,C.tasks))})),w()}// Find a list of Tasks
function w(S){r(function(){h.loading('tasks',c.query().$promise.then(function(I){console.log('found! : ',I),C.tasks=I,!0===S&&v()}))},250)}var C=this,$=new Date,T=$.getDay();C.authentication=d,C.commonArrays=u.getCommonArrays(),C.createTask=function(){y.open({animation:!0,templateUrl:'/modules/tasks/views/create-task.client.view.html',controller:'CreateTaskController as taskCreate',size:'lg',resolve:{data:function(){return{commonArrays:C.commonArrays}}}}).result.then(function(I){console.log('closed create task: ',I),w()})}// Remove existing Task
,C.dateOptions={dateDisabled:!1,formatYear:'yy',maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},C.filterConfig={view:'list',showingCount:0,sortType:'',sortReverse:!0,search:{description:'',day:''},datesSelected:!1},C.insertChecklistItem=//Add new checklist item.
function(I,A){g.insertChecklistItem(I,A)}//Tick off a task.
,C.pageConfig={currentPage:0,pageSize:10},C.refreshItems=function(){w(),p.warning('Refreshed!','Task list refreshed!')},C.removeTask=function(I){g.removeTask(I,C.tasks,!0)}//Update task.
,C.setTabFilterDay=//Defaults the tab filter to the current day of the week.
function(I){var A=0===I?7:I;//Adjust for Sunday.
C.filterConfig.search.day=C.commonArrays.days[A].name,console.log(I,C.filterConfig.search.day)},C.tabFilter=function(I){C.filterConfig.search.day=I},C.tickOff=function(I){g.tickOff(I).then(function(A){A.refresh&&w()})}//Tick of a checklist item.
,C.tickOffChecklist=function(I,A){g.tickOffChecklist(I,A).then(function(x){x.refresh&&w()})},C.updateTask=function(I){g.updateTask(I)},C.weekBeginning=function(){return g.getWeekBeginning()},C.whichController='task',C.setTabFilterDay(T),w(!0)}angular.module('tasks').controller('TasksController',t),t.$inject=['$scope','$timeout','$stateParams','$location','Authentication','Tasks','ListService','NotificationFactory','TaskFactory','spinnerService','$uibModal','moment']}(),function(){'use strict';function t(s,r,l,m){var d=this;d.cancel=function(){r.dismiss('cancel')},d.episodeCompleted=l.item.link.anime.episodes+1,d.episodeNumber=m.pad(d.episodeCompleted,3),d.episodeRating=0,d.item=l.item,d.isComplete=d.episodeCompleted===d.item.link.anime.finalEpisode&&0!==d.item.link.anime.finalEpisode,d.ratingLimit=10,d.stepConfig={currentStep:1,stepCount:1},d.submit=function(){r.close({task:d.item,episodeRating:d.episodeRating})}}angular.module('tasks').controller('UpdateAnimeTaskController',t),t.$inject=['$scope','$uibModalInstance','data','FunctionService']}(),function(){'use strict';function t(s,r,l){var m=this;m.cancel=function(){r.dismiss('cancel')},m.item=l.item,m.stepConfig={currentStep:1,stepCount:1},m.submit=function(){r.close(m.item)},console.log('update linked manga item: ',m.item)}angular.module('tasks').controller('UpdateMangaTaskController',t),t.$inject=['$scope','$uibModalInstance','data']}(),function(){'use strict';function t(s){return{restrict:'A',link:function(r,l){l.data('interesting',!0),angular.element(s[0].body).on('click',function(m){var d=angular.element(m.target).inheritedData('interesting'),c=angular.element(m.target)[0].tagName;//console.log(elm);
d||'A'===c||'I'===c||r.$apply(function(){r.collapseFilters()})})}}}t.$inject=['$document','$window'],angular.module('tasks').directive('loseInterest',t)}(),function(){'use strict';function t(s,r,l){function m(p){return p.day(1).hour(12).minute(0).second(0).millisecond(0)}function d(p,g,h){p.weeks=[];for(var y=!1,v=r(g),w=v.month(),C=0;!y;){var $=c(r(v),h);-1<l.findWithAttr($,'isCurrentMonth',!0)&&p.weeks.push({days:$}),v.add(1,'w'),y=2<C++&&w!==v.month(),w=v.month()}}function c(p,g){var h=[];for(var y=0;7>y;y++)h.push({name:p.format('dd').substring(0,1),number:p.date(),isCurrentMonth:p.month()===g.month(),isToday:p.isSame(new Date,'day'),date:p}),p=r(p),p.add(1,'d');return h}function u(p,g,h){s.open({animation:!0,templateUrl:'/modules/tasks/views/schedule-calendar-task.client.view.html',controller:'ScheduleCalendarTaskController as ctrl',size:'lg',resolve:{data:function(){return{events:p,date:g,days:h}}}}).result.then(function(y){console.log('closed - require refresh: ',y)})}return{restrict:'A',templateUrl:'modules/tasks/templates/schedule-calendar.html',scope:{events:'='},link:function(p){p.days=[{text:'Mon'},{text:'Tue'},{text:'Wed'},{text:'Thu'},{text:'Fri'},{text:'Sat'},{text:'Sun'}],p.selected=r(new Date),p.month=r(p.selected);var g=r(m(angular.copy(p.selected)));g.date(-6),m(g.day(0)),d(p,g,p.month),p.select=function(h){p.selected===h.date&&u(p.events,h.date,p.days),p.selected=h.date},p.next=function(){var h=r(p.month);m(h.month(h.month()+1).date(0)),p.month.month(p.month.month()+1),d(p,h,p.month)},p.previous=function(){var h=r(p.month);m(h.month(h.month()-1).date(0)),p.month.month(p.month.month()-1),d(p,h,p.month)}}}}angular.module('tasks').directive('scheduleCalendar',t),t.$inject=['$uibModal','moment','ListService']}(),function(){'use strict';angular.module('tasks').directive('shadowModel',function(){return{scope:!0,link:function(s,r,l){console.log('shadow: ',s),s[l.shadow]=angular.copy(s[l.shadow])}}})}(),function(){'use strict';angular.module('tasks').directive('taskItemModel',function(){return{restrict:'A',replace:!0,templateUrl:'modules/tasks/templates/task-item.html'}})}(),function(){'use strict';angular.module('tasks').directive('passClick',function(){return{restrict:'A',link:function(s,r,l){r.bind('click',function(){var m=document.getElementById(l.passClick);m.focus(),m.click()})}}})}(),function(){'use strict';function t(s,r,l,m,d,c,u,p){function g(w,C){if(w){for(var $ in w.$remove(),C)C[$]===w&&C.splice($,1);c.warning('Deleted!','Task was successfully deleted.')}}//Linked manga need special options dialog.
function h(w){var C=p.open({animation:!0,templateUrl:'/modules/tasks/views/update-manga-task.client.view.html',controller:'UpdateMangaTaskController as ctrl',size:'md',resolve:{data:function(){return{item:angular.copy(w),itemOriginal:w}}}});return C}//Linked anime need special options dialog.
function y(w){var C=p.open({animation:!0,templateUrl:'/modules/tasks/views/update-anime-task.client.view.html',controller:'UpdateAnimeTaskController as ctrl',size:'md',resolve:{data:function(){return{item:angular.copy(w),itemOriginal:w}}}});return C}//Completes a task.
//Completes a checklist item.
//Add additional items to a checklist.
var v={getWeekBeginning:function(){var C=new Date,$=C.getDay(),T=C.getDate()-$+(0===$?-6:1),S=new Date;// adjust when day is sunday
return new Date(S.setDate(T))},insertChecklistItem:function(C,$){if(''!==$&&$!==void 0){var T=!1;//find the item and insert the option.
angular.forEach(C.checklistItems,function(S){S===$&&(T=!0)}),!1==T?C.checklistItems.push({text:$,complete:!1}):!0==T&&c.popup('Option already exists.','Please re-name and try again.','error')}v.updateTask(C)},removeTask://Remove a task.
function(C,$,T){T?c.confirmation(function(){g(C,$)}):g(C,$)},updateAnimeitem:function(C,$){return s(function(T){var S=r.get({animeitemId:C.link.anime._id});S.$promise.then(function(I){console.log('update animeitem for ',C,I),I.episodes+=1,I.rating=C.link.anime.rating||I.rating,I.latest=new Date,m.update(I,void 0,!0,void 0,$),T(I)})})},updateMangaitem:function(C,$,T){return s(function(S){var I=l.get({mangaitemId:C.link.manga._id});I.$promise.then(function(A){A.chapters=$,A.volumes=T,A.latest=new Date,d.update(A,void 0,!0,void 0),S(A)})})}/** Task Update,Edit,Delete and other functions below here.
  				 */// Update existing Task
,updateTask:function(C,$){return s(function(T,S){C.link.anime?C.link.anime=C.link.anime._id:C.link.manga&&(C.link.manga=C.link.manga._id),C.$update(function(){c.success('Saved!','Task was successfully updated!'),console.log('update, refresh items ? ',$),T({refresh:$})},function(I){var A=I.data.message;S(A),c.error('Error!','Task failed to save!')})})},tickOff:function(C){return s(function($){var T=C.link.linked;//Is it linked?
if(!T)C.completeTimes+=1;else if(T)/** Anime or manga?
  				         *   Update the item value AND the complete/repeat values.
  				         */if('anime'===C.link.type){C.complete=!1;var S=y(C);S.result.then(function(A){console.log('update anime task result: ',A),C=A.task,C.completeTimes=C.link.anime.episodes+1,C.complete=!0,C.repeat=C.link.anime.finalEpisode,v.updateAnimeitem(C,A.episodeRating).then(function(){return v.updateTask(C,!0)}).then(function(x){console.log('update anime into update task: ',x),$(x)})})}else if('manga'===C.link.type){C.complete=!1;var I=h(C);I.result.then(function(A){C=A,C.completeTimes+=1,C.complete=!0,v.updateMangaitem(C,C.link.manga.chapters,C.link.manga.volumes).then(function(x){return console.log('updated manga: ',x),v.updateTask(C,!0)}).then(function(x){console.log('update manga into update task: ',x),$(x)})})}T||v.updateTask(C,T).then(function(A){console.log('update task resolve: ',A),$(A)})})},tickOffChecklist:function(C,$){return s(function(T){//update the option for the task.
var S=C.link.linked;if(S&&'manga'===C.link.type){C.checklistItems[$].complete=!1;var I=h(C,$);I.result.then(function(A){C=A,C.checklistItems[$].complete=!0,-1===u.findWithAttr(C.checklistItems,'complete',!1)&&(C.completeTimes+=1,C.complete=!0),v.updateMangaitem(C,C.link.manga.chapters,C.link.manga.volumes).then(function(x){return console.log('updated manga: ',x),v.updateTask(C,!0)}).then(function(x){console.log('update manga into update task: ',x),T(x)})})}else S||(-1===u.findWithAttr(C.checklistItems,'complete',!1)&&(C.completeTimes+=1,C.complete=!0),v.updateTask(C,S).then(function(A){console.log('update task resolve: ',A),T(A)}))})}};return v}angular.module('tasks').factory('TaskFactory',t),t.$inject=['$q','Animeitems','Mangaitems','AnimeFactory','MangaFactory','NotificationFactory','ListService','$uibModal']}(),function(){'use strict';//Tasks service used to communicate Tasks REST endpoints
function t(s){return s('tasks/:taskId',{taskId:'@_id'},{update:{method:'PUT'}})}angular.module('tasks').factory('Tasks',t),t.$inject=['$resource']}(),angular.module('toptens').run(['Menus',function(t){t.addMenuItem('topbar','Toptens','toptens','dropdown','/toptens(/create)?'),t.addSubMenuItem('topbar','toptens','List Toptens','toptens'),t.addSubMenuItem('topbar','toptens','New Topten','toptens/create')}]),angular.module('toptens').config(['$stateProvider',function(t){t.state('listToptens',{url:'/toptens',templateUrl:'modules/toptens/views/list-toptens.client.view.html'}).state('createTopten',{url:'/toptens/create',templateUrl:'modules/toptens/views/create-topten.client.view.html'}).state('viewTopten',{url:'/toptens/:toptenId',templateUrl:'modules/toptens/views/view-topten.client.view.html'}).state('editTopten',{url:'/toptens/:toptenId/edit',templateUrl:'modules/toptens/views/create-topten.client.view.html'})}]),function(){'use strict';function t(s,r,l,m,d,c,u,p,g,h,y,v,w){function C(){var I=c.manipulateString(T.topten.type,'upper',!0);'Anime'===I?u.query().$promise.then(function(A){T.stepConfig.listGen.items=A,T.stepConfig.listGen.typeDisplay='title',T.stepConfig.listGen.tags=y.buildCharacterTags(A),T.years=v.endingYears(A)}):'Manga'===I?p.query().$promise.then(function(A){T.stepConfig.listGen.items=A,T.stepConfig.listGen.typeDisplay='title',T.stepConfig.listGen.tags=y.buildCharacterTags(A)}):'Character'===I?g.query().$promise.then(function(A){T.stepConfig.listGen.items=A,T.stepConfig.listGen.typeDisplay='name',T.stepConfig.listGen.tags=y.buildCharacterTags(A),T.stepConfig.listGen.series=y.buildSeriesList(A);var x=[];angular.forEach(A,function(M){M.anime&&x.push(M.anime)}),T.years=v.endingYears(x)}):void 0;// console.log('type set: ', ctrl.stepConfig.listGen);
}//Processing on step submits.
function $(I,A,x){// console.log(number, direction);
switch(I){case 1:''!==T.topten.type&&T.isCreate?(C(),x()):''===T.topten.type||T.isCreate?''===T.topten.type&&h.popup('Invalid form','You MUST select a type to continue.','error'):(1>T.stepConfig.listGen.displayList.length&&(angular.forEach(T.topten[T.topten.type+'List'],function(R){var W=c.findWithAttr(T.stepConfig.listGen.items,'_id',R._id);T.stepConfig.listGen.displayList.push(T.stepConfig.listGen.items[W])}),T.stepConfig.limitMin=T.stepConfig.listGen.displayList.length),x());break;case 2:if(A){var O,M=0,F=0;// console.log('pre conditions: ', ctrl.stepConfig.listGen.items.length, ctrl.stepConfig.listGen.itemsCached.length);
if(angular.copy(T.stepConfig.listGen.items,T.stepConfig.listGen.itemsCached),'anime'===T.topten.type){if(!T.topten.conditions.season)T.topten.conditions.year&&(T.stepConfig.listGen.items=w('filter')(T.stepConfig.listGen.items,{season:{year:T.topten.conditions.year}}));else if(T.topten.conditions.year)T.stepConfig.listGen.items=w('season')(T.stepConfig.listGen.items,T.topten.conditions.year,T.topten.conditions.season);else{h.popup('Invalid form','A year MUST be selected when selecting a season.','error');break}}else if('character'===T.topten.type)if(!T.topten.conditions.season)T.topten.conditions.year&&(T.stepConfig.listGen.items=w('filter')(T.stepConfig.listGen.items,{anime:{season:{year:T.topten.conditions.year}}}));else if(T.topten.conditions.year)T.stepConfig.listGen.items=w('seasonForCharacterAnime')(T.stepConfig.listGen.items,T.topten.conditions.year,T.topten.conditions.season);else{h.popup('Invalid form','A year MUST be selected when selecting a season.','error');break}if(0<T.topten.conditions.series.length)for(M=T.stepConfig.listGen.items.length;M--;){var L=!0,P=null===T.stepConfig.listGen.items[M].anime?null===T.stepConfig.listGen.items[M].anime?null:'manga':'anime';//  console.log('tag while: ', i, length, attr);
if(O=T.topten.conditions.series.length,null!==P){// console.log('tag item: ', ctrl.stepConfig.listGen.items[i]);
for(F=0;F<O;F++){var E=T.topten.conditions.series[F];// console.log(ctrl.stepConfig.listGen.items[i][attr].title, series.name, ctrl.stepConfig.listGen.items[i][attr].title.indexOf(series.name));
-1<T.stepConfig.listGen.items[M][P].title.indexOf(E.name)&&(L=!1)}L&&T.stepConfig.listGen.items.splice(M,1)}else T.stepConfig.listGen.items.splice(M,1)}if(0<T.topten.conditions.tags.length)for(M=T.stepConfig.listGen.items.length;M--;){var U=0;// console.log('tag while: ', i, length);
if(O=T.topten.conditions.tags.length,0<T.stepConfig.listGen.items[M].tags.length){// console.log('tag item: ', ctrl.stepConfig.listGen.items[i].tags);
for(F=0;F<O;F++){var D=T.topten.conditions.tags[F];// console.log('tag round: ' + i + '-' + j, ctrl.stepConfig.listGen.items[i].tags, tag.tag, ListService.findWithAttr(ctrl.stepConfig.listGen.items[i].tags, 'text', tag.tag));
-1<c.findWithAttr(T.stepConfig.listGen.items[M].tags,'text',D.tag)&&U++}U!==O&&T.stepConfig.listGen.items.splice(M,1)}else T.stepConfig.listGen.items.splice(M,1)}// console.log('post conditions: ', ctrl.stepConfig.listGen.items.length, ctrl.stepConfig.listGen.itemsCached.length);
}x();break;case 3:A||(T.stepConfig.listGen.items=angular.copy(T.stepConfig.listGen.itemsCached)),x();}}//Step related functions:
var T=this,S={name:'',description:'',type:'',isFavourite:!1,isRanked:!1,animeList:[],mangaList:[],characterList:[],conditions:{limit:null,series:[],tags:[],season:null,year:null}};T.authentication=m,T.cancel=function(){l.path('toptens')},T.create=// Create new Topten
function(){// console.log(ctrl.topten, ctrl.topten);
// Create new Topten object
var A=new d;A=new d({name:T.topten.name,description:T.topten.description,type:T.topten.type,isFavourite:T.topten.isFavourite,isRanked:T.topten.isRanked,animeList:0<T.topten.animeList.length?T.topten.animeList:null,characterList:0<T.topten.characterList.length?T.topten.characterList:null,mangaList:0<T.topten.mangaList.length?T.topten.mangaList:null,conditions:{limit:T.topten.conditions.limit,series:T.topten.conditions.series,tags:T.topten.conditions.tags,season:T.topten.conditions.season,year:T.topten.conditions.year}}),A.$save(function(x){l.path('toptens/'+x._id),h.success('Saved!','New List was successfully saved!'),angular.copy(S,T.topten)},function(x){T.error=x.data.message,h.error('Error!','Something went wrong!')})}// Update existing Topten
,T.commonArrays=c.getCommonArrays(),T.imgSize={height:'50px',width:'100px'},T.isCreate=!0,T.pushCondition=function(A,x){var M;'series'===A?(M=c.findWithAttr(T.topten.conditions.series,'name',x.name),-1===M?T.topten.conditions.series.push(x):h.warning('Duplicate!','Series has already been added to list.'),T.stepConfig.listGen.seriesLimit=''):'tag'===A?(M=c.findWithAttr(T.topten.conditions.tags,'tag',x.tag),-1===M?T.topten.conditions.tags.push(x):h.warning('Duplicate!','Tag has already been added to list.'),T.stepConfig.listGen.tagLimit=''):void 0},T.pushItem=function(A){if(null===T.topten.conditions.limit||0===T.topten.conditions.limit||T.topten.conditions.limit>T.stepConfig.listGen.displayList.length){var x=T.topten[T.topten.type+'List'].indexOf(A._id);T.isCreate||-1!==x||(x=c.findWithAttr(T.topten[T.topten.type+'List'],'_id',A._id)),-1===x?(T.topten[T.topten.type+'List'].push(A._id),T.stepConfig.listGen.displayList.push(A)):h.warning('Duplicate!','Item has already been added to list.')}else h.error('Full!','Item list has reached the defined capacity.');T.stepConfig.listGen.toptenItem=''},T.removeCondition=function(A,x){var M;'series'===A?(M=c.findWithAttr(T.topten.conditions.series,'name',x.name),T.topten.conditions.series.splice(M,1),h.warning('Removed!','Series has been removed from list.')):'tag'===A?(M=T.topten.conditions.tags.indexOf(x),T.topten.conditions.tags.splice(M,1),h.warning('Removed!','Tag has been removed from list.')):void 0},T.removeItem=function(A){//For display array.
var x=T.stepConfig.listGen.displayList.indexOf(A);T.stepConfig.listGen.displayList.splice(x,1),x=T.topten[T.topten.type+'List'].indexOf(A._id),T.isCreate||-1!==x||(x=c.findWithAttr(T.topten[T.topten.type+'List'],'_id',A._id)),T.topten[T.topten.type+'List'].splice(x,1),h.warning('Removed!','Item has been removed from list.')},T.stepConfig={steps:[1,2,3,4,5,6,7,8,9,10],stepHeaders:[{text:'Select attributes'},{text:'Set conditions'},{text:'Populate list'}],currentStep:1,stepCount:3,listGen:{itemsCached:[],items:[],displayList:[],seriesList:[],typeDisplay:'',toptenItem:'',seriesLimit:'',tagLimit:'',series:[],tags:[]},limitMin:0,swapping:{one:'',two:''}},T.swappingItems=function(A){// console.log('item selected: ', index);
if(''===T.stepConfig.swapping.one)T.stepConfig.swapping.one=A;else if(T.stepConfig.swapping.one===A)T.stepConfig.swapping.one='';else{T.stepConfig.swapping.two=A;//Re-order display list.
var x=T.stepConfig.listGen.displayList[T.stepConfig.swapping.one];T.stepConfig.listGen.displayList[T.stepConfig.swapping.one]=T.stepConfig.listGen.displayList[T.stepConfig.swapping.two],T.stepConfig.listGen.displayList[T.stepConfig.swapping.two]=x,x=T.topten[T.topten.type+'List'][T.stepConfig.swapping.one],T.topten[T.topten.type+'List'][T.stepConfig.swapping.one]=T.topten[T.topten.type+'List'][T.stepConfig.swapping.two],T.topten[T.topten.type+'List'][T.stepConfig.swapping.two]=x,T.stepConfig.swapping.one='',T.stepConfig.swapping.two=''}},T.takeStep=function(A,x){$(A,x,function(){T.stepConfig.currentStep=x?A+1:A-1})},T.topten={},angular.copy(S,T.topten),T.update=function(){var A=T.topten;A.$update(function(){l.path('toptens/'+A._id),h.success('Updated!','List update was successful!')},function(x){T.error=x.data.message,h.error('Error!','Something went wrong!')})},T.years=[],function(){r.toptenId!==void 0&&(T.isCreate=!1,d.get({toptenId:r.toptenId}).$promise.then(function(A){T.topten=A,C()}))}()}angular.module('toptens').controller('CreateToptenController',t),t.$inject=['$scope','$stateParams','$location','Authentication','Toptens','ListService','Animeitems','Mangaitems','Characters','NotificationFactory','CharacterService','ItemService','$filter']}(),function(){'use strict';function t(s,r,l,m){var d=this;d.cancel=function(){r.dismiss('cancel')},d.list=l,d.toptenInfo={tags:[],series:[]},function(){var u=d.list.type+'List';d.toptenInfo.tags=m.buildCharacterTags(d.list[u]),'character'===d.list.type&&(d.toptenInfo.series=m.buildSeriesList(d.list[u]))}()}angular.module('toptens').controller('StatisticsTopten',t),t.$inject=['$scope','$uibModalInstance','list','CharacterService']}(),function(){'use strict';function t(s,r,l,m,d,c,u,p,g){var h=this;h.authentication=m,h.filterConfig={showingCount:0,expandFilters:!1,sortType:'',sortReverse:!1,ratingLevel:void 0,search:{},searchTags:'',tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:{},commonArrays:p.getCommonArrays()},h.find=// Find a list of Toptens
function(){h.filterConfig.selectListOptions=p.getSelectListOptions(h.whichController),g.loading('topten',c.query().$promise.then(function(v){h.toptens=v})),console.log(h.toptens)}// Find existing Topten
,h.findOne=function(){c.get({toptenId:r.toptenId}).$promise.then(function(v){h.topten=v,h.viewConfig.displayType='character'===h.topten.type?'name':'title',h.viewConfig.linkSuffix='character'===h.topten.type?'s':'items'})},h.openListStats=function(){d.open({animation:!0,templateUrl:'/modules/toptens/views/statistics-topten.client.view.html',controller:'StatisticsTopten as ctrl',size:'lg',resolve:{list:function(){return h.topten}}})},h.pageConfig={currentPage:0,pageSize:10},h.remove=// Remove existing Topten
function(v){u.confirmation(function(){if(v)for(var w in v.$remove(),h.toptens)h.toptens[w]===v&&h.toptens.splice(w,1);else h.topten.$remove(function(){l.path('toptens')});u.warning('Deleted!','Anime was successfully deleted.')})},h.viewConfig={displayType:'',linkSuffix:'',tags:[],series:[]},h.whichController='topten'}angular.module('toptens').controller('ToptensController',t),t.$inject=['$scope','$stateParams','$location','Authentication','$uibModal','Toptens','NotificationFactory','ListService','spinnerService']}(),function(){'use strict';angular.module('toptens').directive('horizontalListItem',function(){return{restrict:'A',replace:!0,transclude:!0,scope:{},templateUrl:'/modules/toptens/templates/horizontal-list-item.html',require:'^horizontalList',link:function(s,r,l,m){s.isVisible=!1,s.itemWidth=m.itemWidth,s.position=r.index(),m.register(s)}}})}(),function(){'use strict';angular.module('toptens').directive('horizontalList',function(){return{restrict:'A',transclude:!0,require:'horizontalList',scope:{},templateUrl:'/modules/toptens/templates/horizontal-list.html',bindToController:!0,controllerAs:'horizontalList',controller:['$scope',function(){function s(){var l=[],m=3*r.clicks;for(var d=0;3>d;d++)l.push(m+d);angular.forEach(r.items,function(c){c.isVisible=-1<l.indexOf(c.position)})}var r=this;r.clicks=0,r.items=[],r.moveItems=function(m){'left'===m?(0>r.clicks-1?r.clicks=0:r.clicks-=1,s()):'right'==m&&(r.clicks+1<Math.ceil(r.items.length/3)&&(r.clicks+=1),s())},r.register=function(m){r.items.push(m),-1<[0,1,2].indexOf(m.position)&&(m.isVisible=!0)},r.shift=0}],link:function(s,r,l,m){function d(){m.shift=-c.offsetWidth,m.itemWidth=c.offsetWidth/3,angular.forEach(m.items,function(p){p.itemWidth=m.itemWidth})}var c=r[0],u=c.children[0];s.settings={child:u,style:u.style,value:0},d(),window.addEventListener('resize',function(){c.offsetWidth!==Math.abs(m.shift)&&(d(),s.$apply())})}}})}(),function(){'use strict';angular.module('toptens').directive('ngMax',function(){return{restrict:'A',require:'ngModel',link:function(s,r,l,m){s.$watch(l.ngMax,function(){m.$isDirty&&m.$setViewValue(m.$viewValue)});var d=function(u){return angular.isUndefined(u)||''===u||null===u},c=function(u){var p=s.$eval(l.ngMax)||1/0;return!d(u)&&u>p?(m.$setValidity('ngMax',!1),void 0):(m.$setValidity('ngMax',!0),u)};m.$parsers.push(c),m.$formatters.push(c)}}})}(),function(){'use strict';angular.module('toptens').directive('ngMin',function(){return{restrict:'A',require:'ngModel',link:function(s,r,l,m){s.$watch(l.ngMin,function(){m.$isDirty&&m.$setViewValue(m.$viewValue)});var d=function(u){return angular.isUndefined(u)||''===u||null===u},c=function(u){var p=s.$eval(l.ngMin)||0;return!d(u)&&u<p?(m.$setValidity('ngMin',!1),void 0):(m.$setValidity('ngMin',!0),u)};m.$parsers.push(c),m.$formatters.push(c)}}})}(),function(){'use strict';angular.module('toptens').directive('oneStep',function(){return{restrict:'A',replace:!0,transclude:!0,scope:{},require:'^steps',templateUrl:'/modules/toptens/templates/step.html',link:function(s,r,l,m){s.active=!1,s.stepNumber=r.index()+1,m.register(s)}}})}(),function(){'use strict';angular.module('toptens').directive('stepControls',function(){return{restrict:'A',replace:!0,transclude:!0,template:'<div class="step-controls step-button-group padding-5" ng-transclude></div>'}})}(),function(){'use strict';angular.module('toptens').directive('steps',function(){return{restrict:'A',transclude:!0,scope:{stepConfig:'='},template:'<div class="steps" ng-transclude></div>',bindToController:!0,controllerAs:'steps',controller:['$scope',function(){var s=this;s.register=function(l){s.steps.push(l),1===l.stepNumber&&(l.active=!0)},s.steps=[]}],link:function(s,r,l,m){s.$watch('steps.stepConfig.currentStep',function(d){d!==void 0&&(console.log('steps: ',d),angular.forEach(m.steps,function(c){c.active=!(c.stepNumber!==d)}))})}}})}(),function(){'use strict';angular.module('toptens').directive('sticky',function(){return{restrict:'A',scope:{},link:function(s,r){window.addEventListener('scroll',function(){var l='sticky-scroll-top',m='sticky-inner-container',d=document.body.scrollTop,c=r[0],u=c.children[0],p=c.getBoundingClientRect(),g=p.top;// This value is your scroll distance from the top
// The element has scrolled to the top of the page. Set appropriate style.
56>g&&(c.classList.add(l),u.classList.add(m)),(55<g||10>d)&&(c.classList.remove(l),u.classList.remove(m))})}}})}(),function(){'use strict';angular.module('toptens').filter('toptenFilter',function(){return function(s,r,l){if(s!==void 0)return s.filter(function(m){if(-1<m[r].toLowerCase().indexOf(l.toLowerCase()))return m})}})}(),function(){'use strict';//Toptens service used to communicate Toptens REST endpoints
function t(s){return s('toptens/:toptenId',{toptenId:'@_id'},{update:{method:'PUT'}})}angular.module('toptens').factory('Toptens',t),t.$inject=['$resource']}(),angular.module('users').config(['$httpProvider',function(t){t.interceptors.push(['$q','$location','Authentication',function(s,r,l){return{responseError:function(m){switch(m.status){case 401:l.user=null,r.path('signin');break;case 403:}return s.reject(m)}}}])}]),angular.module('users').config(['$stateProvider',function(t){t.state('profile',{url:'/settings/profile',templateUrl:'modules/users/views/settings/edit-profile.client.view.html'}).state('password',{url:'/settings/password',templateUrl:'modules/users/views/settings/change-password.client.view.html'}).state('accounts',{url:'/settings/accounts',templateUrl:'modules/users/views/settings/social-accounts.client.view.html'}).//		state('signup', {
//			url: '/signup',
//			templateUrl: 'modules/users/views/authentication/signup.client.view.html'
//		}).
state('signin',{url:'/signin',templateUrl:'modules/users/views/authentication/signin.client.view.html'}).state('forgot',{url:'/password/forgot',templateUrl:'modules/users/views/password/forgot-password.client.view.html'}).state('reset-invalid',{url:'/password/reset/invalid',templateUrl:'modules/users/views/password/reset-password-invalid.client.view.html'}).state('reset-success',{url:'/password/reset/success',templateUrl:'modules/users/views/password/reset-password-success.client.view.html'}).state('reset',{url:'/password/reset/:token',templateUrl:'modules/users/views/password/reset-password.client.view.html'})}]),function(){'use strict';function t(s,r,l,m){var d=this;d.authentication=m,d.signin=function(){d.credentials.username='username',r.post('/auth/signin',d.credentials).success(function(u){d.authentication.user=u,d.loginBody=!0,l.path('/tasks')}).error(function(u){d.error=u.message})},d.signup=function(){r.post('/auth/signup',d.credentials).success(function(u){d.authentication.user=u,l.path('/signin')}).error(function(u){d.error=u.message})}}angular.module('users').controller('AuthenticationController',t),t.$inject=['$scope','$http','$location','Authentication']}(),angular.module('users').controller('PasswordController',['$scope','$stateParams','$http','$location','Authentication',function(t,s,r,l,m){t.authentication=m,t.authentication.user&&l.path('/'),t.askForPasswordReset=function(){t.success=t.error=null,r.post('/auth/forgot',t.credentials).success(function(d){t.credentials=null,t.success=d.message}).error(function(d){t.credentials=null,t.error=d.message})},t.resetUserPassword=function(){t.success=t.error=null,r.post('/auth/reset/'+s.token,t.passwordDetails).success(function(d){t.passwordDetails=null,m.user=d,l.path('/password/reset/success')}).error(function(d){t.error=d.message})}}]),angular.module('users').controller('SettingsController',['$scope','$http','$location','Users','Authentication',function(t,s,r,l,m){t.user=m.user,t.user||r.path('/'),t.hasConnectedAdditionalSocialAccounts=function(){for(var d in t.user.additionalProvidersData)return!0;return!1},t.isConnectedSocialAccount=function(d){return t.user.provider===d||t.user.additionalProvidersData&&t.user.additionalProvidersData[d]},t.removeUserSocialAccount=function(d){t.success=t.error=null,s.delete('/users/accounts',{params:{provider:d}}).success(function(c){t.success=!0,t.user=m.user=c}).error(function(c){t.error=c.message})},t.updateUserProfile=function(d){if(d){t.success=t.error=null;var c=new l(t.user);c.$update(function(u){t.success=!0,m.user=u},function(u){t.error=u.data.message})}else t.submitted=!0},t.changeUserPassword=function(){t.success=t.error=null,s.post('/users/password',t.passwordDetails).success(function(){t.success=!0,t.passwordDetails=null}).error(function(d){t.error=d.message})}}]),function(){'use strict';// Authentication service for user variables
angular.module('users').factory('Authentication',function(){var s=this;return s._data={user:window.user},s._data})}(),function(){'use strict';// Users service used for communicating with the users REST endpoint
function t(s){return s('users',{},{update:{method:'PUT'}})}angular.module('users').factory('Users',t),t.$inject=['$resource']}();
//# sourceMappingURL=application.min.js.map
