"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mylist",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload","angularMoment"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){$rootScope.$on("$stateChangeStart",function(event,toState){"signin"!==toState.name&&(Authentication.user||(event.preventDefault(),$state.go("signin")))})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("animeitems"),ApplicationConfiguration.registerModule("characters"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("favourites"),ApplicationConfiguration.registerModule("history"),ApplicationConfiguration.registerModule("mangaitems"),ApplicationConfiguration.registerModule("orders"),ApplicationConfiguration.registerModule("ratings"),ApplicationConfiguration.registerModule("statistics"),ApplicationConfiguration.registerModule("tasks"),ApplicationConfiguration.registerModule("toptens"),ApplicationConfiguration.registerModule("users"),angular.module("animeitems").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Animeitems","animeitems","dropdown","/animeitems(/create)?"),Menus.addSubMenuItem("topbar","animeitems","List Animeitems","animeitems"),Menus.addSubMenuItem("topbar","animeitems","New Animeitem","animeitems/create")}]),angular.module("animeitems").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAnimeitems",{url:"/animeitems",templateUrl:"modules/animeitems/views/list-animeitems.client.view.html"}).state("createAnimeitem",{url:"/animeitems/create",templateUrl:"modules/animeitems/views/create-animeitem.client.view.html"}).state("viewAnimeitem",{url:"/animeitems/:animeitemId",templateUrl:"modules/animeitems/views/view-animeitem.client.view.html"}).state("editAnimeitem",{url:"/animeitems/:animeitemId/edit",templateUrl:"modules/animeitems/views/edit-animeitem.client.view.html"}).state("watchAnimeitem",{url:"/animeitems/watch/:animeitemId",templateUrl:"modules/animeitems/views/watch-animeitem.client.view.html"})}]),angular.module("animeitems").controller("AnimeitemsController",["$scope","$stateParams","$location","Authentication","Animeitems","Mangaitems","fileUpload","$sce","$window","ItemService","ListService","NotificationFactory","AnimeFactory","spinnerService","TagService",function($scope,$stateParams,$location,Authentication,Animeitems,Mangaitems,fileUpload,$sce,$window,ItemService,ListService,NotificationFactory,AnimeFactory,spinnerService,TagService){function getAnime(value){spinnerService.loading("anime",Animeitems.query({status:value}).$promise.then(function(result){ctrl.animeitems=result,ctrl.filterConfig.areTagless=ListService.checkForTagless(result),ctrl.filterConfig.statTags=ItemService.buildStatTags(result,0)}))}var ctrl=this;ctrl.authentication=Authentication,ctrl.whichController="animeitem",ctrl.pageConfig={currentPage:0,pageSize:10},ctrl.filterConfig={ongoingList:!0,showingCount:0,expandFilters:!1,sortType:"",sortReverse:!0,ratingLevel:void 0,ratingActions:{maxRating:10,percent:void 0,overStar:null},search:{},searchTags:"",tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:ListService.getSelectListOptions(ctrl.whichController),statTags:[],commonArrays:ListService.getCommonArrays()},ctrl.itemUpdate=new Date,ctrl.start=ctrl.itemUpdate,ctrl.latest=ctrl.itemUpdate,ctrl.episodes=0,ctrl.viewItemHistory=!1,ctrl.finalNumbers=!1,ctrl.imgPath="",ctrl.tagArray=[],ctrl.tagArrayRemove=[],ctrl.usedTags=[],ctrl.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},ctrl.addTag=function(){TagService.addTag(ctrl.tagArray,ctrl.newTag),ctrl.newTag=""},ctrl.dropTag=function(text){TagService.dropTag(ctrl.tagArray,text)},ctrl.removeTag=function(text){TagService.dropTag(ctrl.animeitem.tags,text)},ctrl.create=function(){var animeitem=new Animeitems;animeitem=new Animeitems({title:this.title,episodes:this.episodes,start:this.start,latest:this.latest,finalEpisode:this.finalEpisode,season:this.season===!0?ItemService.convertDateToSeason(new Date(this.start)):"",disc:this.disc,manga:void 0!==this.manga&&null!==this.manga?this.manga._id:this.manga,tags:ctrl.tagArray,user:this.user}),animeitem.$save(function(response){$location.path("/animeitems/"+response._id),NotificationFactory.success("Saved!","Anime was saved successfully")},function(errorResponse){ctrl.error=errorResponse.data.message,NotificationFactory.error("Error!",errorResponse.data.message)})},ctrl.remove=function(animeitem){NotificationFactory.confirmation(function(){if(animeitem){animeitem.$remove();for(var i in ctrl.animeitems)ctrl.animeitems[i]===animeitem&&ctrl.animeitems.splice(i,1)}else ctrl.animeitem.$remove(function(){$location.path("animeitems")});NotificationFactory.warning("Deleted!","Anime was successfully deleted.")})},ctrl.update=function(){var animeitem=ctrl.animeitem;ctrl.animeitem=void 0,AnimeFactory.update(animeitem,ctrl.tagArray,ctrl.updateHistory,ctrl.imgPath)},ctrl.tickOff=function(item){item.episodes+=1,item.latest=new Date,ctrl.updateHistory=!0,ctrl.animeitem=item,ctrl.update()},ctrl.find=function(){Animeitems.query().$promise.then(function(result){ctrl.animeitems=result,ctrl.filterConfig.statTags=ItemService.buildStatTags(result,0)})},ctrl.findOne=function(){Animeitems.get({animeitemId:$stateParams.animeitemId}).$promise.then(function(result){ctrl.animeitem=result,console.log(ctrl.animeitem)})},ctrl.findManga=function(){ctrl.mangaitems=Mangaitems.query()},ctrl.uploadFile=function(){ctrl.imgPath="/modules/animeitems/img/"+ctrl.myFile.name,fileUpload.uploadFileToUrl(ctrl.myFile,"/fileUploadAnime")},ctrl.latestDate=function(latest,updated){return ItemService.latestDate(latest,updated)},ctrl.deleteHistory=function(item,history){NotificationFactory.confirmation(function(){ctrl.animeitem=ItemService.deleteHistory(item,history),ctrl.update()})},ctrl.filterConfig.getItemsAvailable=function(){ctrl.animeitems=void 0,ctrl.filterConfig.ongoingList===!0?(ctrl.filterConfig.search.onHold=!1,ctrl.filterConfig.search.status="",getAnime(0)):(ctrl.filterConfig.search.onHold="",ctrl.filterConfig.search.status=!1,getAnime(1))}}]),angular.module("animeitems").controller("WatchAnimeController",["$scope","Authentication","$stateParams","$timeout","Animeitems","$sce","ListService",function($scope,Authentication,$stateParams,$timeout,Animeitems,$sce,ListService){var ctrl=this,saved=localStorage.getItem("watched");ctrl.authentication=Authentication,ctrl.watchedList=null!==localStorage.getItem("watched")?JSON.parse(saved):{},ctrl.videoFile={processed:"",file:"",number:"",message:"Please select an episode."},ctrl.playVideo=function(){ctrl.watchedList[ctrl.videoFile.file]=!0,localStorage.setItem("watched",JSON.stringify(ctrl.watchedList)),ctrl.watchedList=JSON.parse(localStorage.getItem("watched"))},$scope.$watch("fileGrab",function(nVal,oVal){nVal&&(ctrl.videoFile.message="",ctrl.videoFile.file=nVal.name,ctrl.videoFile.number=ctrl.animeitem.video.files[ListService.findWithAttr(ctrl.animeitem.video.files,"file",nVal.name)].number,ctrl.videoFile.processed=$sce.trustAsResourceUrl(window.URL.createObjectURL(nVal)))}),ctrl.findOne=function(){Animeitems.get({animeitemId:$stateParams.animeitemId}).$promise.then(function(result){ctrl.animeitem=result,console.log(ctrl.animeitem)})},ctrl.findOne()}]),angular.module("animeitems").directive("fileModel",["$parse",function($parse){return{restrict:"A",link:function(scope,element,attrs){var model=$parse(attrs.fileModel),modelSetter=model.assign;element.bind("change",function(){scope.$apply(function(){modelSetter(scope,element[0].files[0])})})}}}]).directive("listBack",function(){return function(scope,element,attrs){var url=attrs.listBack;element.css({"background-image":"url("+url+")","background-size":"50%","background-repeat":"no-repeat","background-position":"right"})}}).directive("keycuts",function(){return{restrict:"A",link:function(scope,element,attrs){scope.$on("my:keydown",function(event,e){e.altKey&&86===e.keyCode&&("list"===scope.isList?scope.isList="slider":"slider"===scope.isList?scope.isList="list":"Anime"===scope.view?scope.view="Manga":"Manga"===scope.view?scope.view="Character":"Character"===scope.view&&(scope.view="Anime"))})}}}).directive("pageControls",function(){return{restrict:"EA",replace:!0,scope:{pageConfig:"=",showingCount:"="},templateUrl:"/modules/animeitems/templates/page-controls.html",link:function(scope,elem,attrs){scope.$watch("showingCount",function(){scope.pageCount=Math.ceil(scope.showingCount/scope.pageConfig.pageSize),scope.pageConfig.currentPage>scope.pageCount-1?scope.last():scope.pageConfig.currentPage<0&&scope.first()}),scope.first=function(){scope.pageConfig.currentPage=0},scope.last=function(){scope.pageConfig.currentPage=scope.pageCount-1},scope.next=function(){scope.pageConfig.currentPage+=1},scope.prev=function(){scope.pageConfig.currentPage-=1},scope.$on("my:keydown",function(event,e){e.ctrlKey&&39===e.keyCode&&scope.pageConfig.currentPage<scope.pageCount-1?scope.next():e.ctrlKey&&37===e.keyCode&&scope.pageConfig.currentPage>0&&scope.prev()})}}}).directive("listFilters",function(){return{restrict:"EA",replace:!0,scope:{filterConfig:"=",items:"=",page:"="},templateUrl:"/modules/animeitems/templates/list-filters.html",link:function(scope,elem,attrs){scope.filterConfig.searchTags="",scope.passTag=function(tag){-1===scope.filterConfig.searchTags.indexOf(tag)&&(scope.filterConfig.searchTags+=tag+",",scope.filterConfig.tagsForFilter=scope.filterConfig.searchTags.substring(0,scope.filterConfig.searchTags.length-1).split(","))},scope.hoveringOver=function(value){scope.filterConfig.ratingActions.overStar=value,scope.filterConfig.ratingActions.percent=100*(value/scope.filterConfig.ratingActions.maxRating)},scope.itemsAvailable=function(){scope.filterConfig.getItemsAvailable()},scope.collapseFilters=function(){scope.filterConfig.expandFilters=!1}}}}).directive("swOnplay",function(){return{restrict:"A",link:function(scope,element,attrs){var el=element[0];el.addEventListener("play",function(){scope.$apply(attrs.swOnplay)})}}}),angular.module("animeitems").filter("startFrom",function(){return function(input,start){return void 0!==input?(start=+start,input.slice(start)):void 0}}).filter("ratingFilter",function(){return function(array,rating){return void 0!==array?array.filter(function(item){return item.rating===rating?item:void 0===rating?item:void 0}):void 0}}).filter("endedMonth",function(){return function(array,year,month){return array.filter(function(item){return void 0!==item.end&&null!==item.end&&item.end.substring(0,4)===year&&item.end.substr(5,2)===month?item:void 0})}}).filter("endedSeason",["moment",function(moment){return function(array,year,month){return array.filter(function(item){var num,startMonth,startYear,diff,weeks,start=moment(item.start),end=moment(item.end),pad="00";if(void 0!==item.end&&null!==item.end)if(9<item.finalEpisode&&item.finalEpisode<14){if(startMonth=(pad+(month-2)).slice(-pad.length),(item.end.substring(0,4)===year&&item.end.substr(5,2)===month||item.start.substring(0,4)===year&&item.start.substr(5,2)===startMonth)&&(diff=end.diff(start,"days"),weeks=Math.ceil(diff/7)+1,weeks>=item.episodes))return item}else if(13<item.finalEpisode&&item.finalEpisode<26&&(num=month-5>0?month-5:10,startYear=month-5>0?year:year-1,startMonth=(pad+num).slice(-pad.length),(item.end.substring(0,4)===year&&item.end.substr(5,2)===month||item.start.substring(0,4)===startYear&&item.start.substr(5,2)===startMonth)&&(diff=end.diff(start,"days"),weeks=Math.ceil(diff/7)+1,weeks>=item.episodes)))return item})}}]).filter("season",function(){return function(array,year,month){return array.filter(function(item){return void 0!==item.season&&null!==item.season&&item.season.year===year&&item.season.season===month?item:void 0})}}).filter("seasonForCharacterAnime",function(){return function(array,year,month){return array.filter(function(item){return item.anime&&void 0!==item.anime.season&&null!==item.anime.season&&item.anime.season.year===year&&item.anime.season.season===month?item:void 0})}}).filter("summaryYear",function(){return function(array,year,type){return void 0!==array?array.filter(function(item){if("months"===type&&void 0!==item.end&&null!==item.end){if(item.end.substring(0,4)===year)return item}else if("seasons"===type&&item.season.year===year)return item}):void 0}}).filter("statisticsDetailFilter",["$filter",function($filter){return function(array,type,year,division){var filter=""===division?"summaryYear":"months"===type?"endedMonth":"season",filterPart=""===division?type:division;return $filter(filter)(array,year,filterPart)}}]),angular.module("animeitems").factory("Animeitems",["$resource",function($resource){return $resource("animeitems/:animeitemId",{animeitemId:"@_id"},{update:{method:"PUT"}})}]).factory("AnimeFactory",["Animeitems","ListService","ItemService","NotificationFactory","$location",function(Animeitems,ListService,ItemService,NotificationFactory,$location){return{update:function(item,tagArray,updateHistory,imgPath){var animeitem=item;console.log(animeitem),null!==item.manga&&void 0!==item.manga&&(animeitem.manga=item.manga._id),void 0!==tagArray&&(animeitem.tags=ListService.concatenateTagArrays(animeitem.tags,tagArray)),animeitem=ItemService.itemHistory(animeitem,updateHistory,"anime"),void 0!==imgPath&&null!==imgPath&&""!==imgPath&&(animeitem.image=imgPath),animeitem.episodes===animeitem.finalEpisode&&0!==animeitem.finalEpisode?(void 0===animeitem.end||null===animeitem.end)&&(animeitem.end=animeitem.latest):animeitem.reWatching===!1&&(animeitem.end=null),void 0!==animeitem.end&&null!==animeitem.end?(animeitem.status=!0,animeitem.onHold=!1):animeitem.status=!1,animeitem.reWatching===!0&&animeitem.episodes===animeitem.finalEpisode&&(animeitem.reWatchCount+=1,animeitem.reWatching=!1),animeitem.$update(function(){-1===window.location.href.indexOf("tasks")&&$location.path("animeitems"),NotificationFactory.success("Saved!","Anime was saved successfully")},function(errorResponse){errorResponse.data.message;NotificationFactory.error("Error!",errorResponse.data.message)})}}}]).service("fileUpload",["$http","NotificationFactory",function($http,NotificationFactory){this.uploadFileToUrl=function(file,uploadUrl){var fd=new FormData;fd.append("file",file),$http.post(uploadUrl,fd,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(function(response){NotificationFactory.success("Uploaded!","Image was saved successfully")}).error(function(err){NotificationFactory.popup("Woops!","Something went wrong! \n"+err,"error")})}}]).service("ListService",["moment","$q",function(moment,$q){function getGroupProperties(item,groups){var array=[];return angular.forEach(groups,function(group){array.push(item[group])}),array}function groupBy(array,f){var groups={};return array.forEach(function(o){var group=JSON.stringify(f(o));groups[group]=groups[group]||[],groups[group].push(o)}),Object.keys(groups).map(function(group){return groups[group]})}this.loader=function(value){return value?!1:!0},this.stringReverse=function(string){return string.split("").reverse().join("")},this.numberOfPages=function(showingCount,pageSize,currentPage){var pageCount=Math.ceil(showingCount/pageSize);currentPage+1>=pageCount&&0!==pageCount&&(currentPage=pageCount-1),0!==pageCount&&0>currentPage&&(currentPage=0);var pagingDetails={currentPage:currentPage,pageCount:pageCount};return pagingDetails},this.findWithAttr=function(array,attr,value){if(void 0!==array)for(var i=0;i<array.length;i+=1)if(array[i][attr]===value)return i;return-1},this.groupItemsByProperties=function(array,groupProperties){return $q(function(resolve,reject){var groupedArrays=groupBy(array,function(item){return getGroupProperties(item,groupProperties)});resolve(groupedArrays)})},this.manipulateString=function(string,transform,onlyFirst){switch(transform.toLowerCase()){case"lower":if(onlyFirst)return string.charAt(0).toLowerCase()+string.slice(1);if(!onlyFirst)return string.toLowerCase();break;case"upper":if(onlyFirst)return string.charAt(0).toUpperCase()+string.slice(1);if(!onlyFirst)return string.toUpperCase();break;default:return string.toLowerCase()}},this.weekEndingForDate=function(convertToSunday){var date=new Date(convertToSunday),day=date.getDay(),diff=date.getDate()-day+(0===day?0:7),temp=new Date(convertToSunday),wkEnd=new Date(temp.setDate(diff));return moment(wkEnd.toISOString()).endOf("day")},this.getSelectListOptions=function(controller){var self=this,selectListOptions=[];return"character"!==controller&&"topten"!==controller?(selectListOptions.status=[{v:"",n:"All"},{v:!1,n:"Ongoing"},{v:!0,n:"Completed"}],selectListOptions.searchName="title","animeitem"===controller?(selectListOptions.onHold=[{v:"",n:"All"},{v:!1,n:"Ongoing"},{v:!0,n:"On Hold"}],selectListOptions.sortOptions=[{v:"title",n:"Title"},{v:"episodes",n:"Episodes"},{v:"start",n:"Start date"},{v:"end",n:"End date"},{v:["latest","meta.updated"],n:"Latest"},{v:"rating",n:"Rating"}],selectListOptions.sortOption=self.findWithAttr(selectListOptions.sortOptions,"n","Latest"),selectListOptions.media=[{v:"",n:"All"},{v:!1,n:"Online"},{v:!0,n:"Disc"}],selectListOptions.mediaType="disc",selectListOptions.repeating=[{v:"",n:"All"},{v:!1,n:"Not Re-watching"},{v:!0,n:"Re-watching"}],selectListOptions.repeatType="reWatching"):"mangaitem"===controller&&(selectListOptions.sortOptions=[{v:"title",n:"Title"},{v:"chapters",n:"Chapters"},{v:"volumes",n:"Volumes"},{v:"start",n:"Start date"},{v:"end",n:"End date"},{v:["latest","meta.updated"],n:"Latest"},{v:"rating",n:"Rating"}],selectListOptions.sortOption=self.findWithAttr(selectListOptions.sortOptions,"n","Latest"),selectListOptions.media=[{v:"",n:"All"},{v:!1,n:"Online"},{v:!0,n:"Hardcopy"}],selectListOptions.mediaType="hardcopy",selectListOptions.repeating=[{v:"",n:"All"},{v:!1,n:"Not Re-reading"},{v:!0,n:"Re-reading"}],selectListOptions.repeatType="reReading")):("character"===controller?(selectListOptions.sortOptions=[{v:"name",n:"Name"},{v:"anime.title",n:"Anime"},{v:"manga.title",n:"Manga"},{v:"voice",n:"Voice"}],selectListOptions.media=[{v:"",n:"-- choose media type --"},{v:"none",n:"None"},{v:"anime",n:"Anime-only"},{v:"manga",n:"Manga-only"},{v:"both",n:"Both"}]):"topten"===controller&&(selectListOptions.sortOptions=[{v:"name",n:"Name"}],selectListOptions.media=[{v:"",n:"All"},{v:"anime",n:"Anime"},{v:"manga",n:"Manga"},{v:"character",n:"Character"}],selectListOptions.mediaType="type"),selectListOptions.searchName="name",selectListOptions.sortOption=self.findWithAttr(selectListOptions.sortOptions,"n","Name")),selectListOptions},this.concatenateTagArrays=function(itemTags,tagArray){if(itemTags.length>0){for(var i=0,alreadyAdded=!1;i<tagArray.length;){for(var j=0;j<itemTags.length;j++)itemTags[j].text===tagArray[i].text&&(alreadyAdded=!0);alreadyAdded===!1&&itemTags.push(tagArray[i]),i++,alreadyAdded=!1}return itemTags}return tagArray},this.checkForTagless=function(items){var areTagless=!1;return angular.forEach(items,function(item){0===item.tags.length&&(areTagless=!0)}),areTagless},this.getCommonArrays=function(controller){var commonArrays={},itemTypes=[{name:"anime"},{name:"manga"},{name:"character"}],seasons=[{number:"03",text:"Winter"},{number:"06",text:"Spring"},{number:"09",text:"Summer"},{number:"12",text:"Fall"}],months=[{number:"01",text:"January"},{number:"02",text:"February"},{number:"03",text:"March"},{number:"04",text:"April"},{number:"05",text:"May"},{number:"06",text:"June"},{number:"07",text:"July"},{number:"08",text:"August"},{number:"09",text:"September"},{number:"10",text:"October"},{number:"11",text:"November"},{number:"12",text:"December"}],categories=[{name:"Watch"},{name:"Read"},{name:"Play"},{name:"Other"}],days=[{name:"Any"},{name:"Monday"},{name:"Tuesday"},{name:"Wednesday"},{name:"Thursday"},{name:"Friday"},{name:"Saturday"},{name:"Sunday"}],summaryFunctions=[{name:"Average"},{name:"Highest"},{name:"Lowest"},{name:"Mode"}];return commonArrays={months:months,seasons:seasons,categories:categories,days:days,summaryFunctions:summaryFunctions,itemTypes:itemTypes}}}]).service("ItemService",["moment","$filter","ListService",function(moment,$filter,ListService){this.convertDateToSeason=function(date){for(var season="",year=date.getFullYear(),month=date.getMonth()+1,commonArrays=ListService.getCommonArrays(),i=commonArrays.seasons.length;i--;)month>Number(commonArrays.seasons[i].number)&&""===season&&(season={season:commonArrays.seasons[i+1].text,year:year}),0===i&&""===season&&(season={season:commonArrays.seasons[i].text,year:year});return season},this.itemHistory=function(item,updateHistory,type){if(0!==item.meta.history.length){var latestHistory=item.meta.history[item.meta.history.length-1].value,length="anime"===type?item.episodes-latestHistory:item.chapters-latestHistory;if(length>0&&("anime"===type?item.reWatching===!1:item.reReading===!1))for(var i=1;length>=i;i++)item.meta.history.push({date:Date.now(),value:latestHistory+i,rating:0,title:item.title,id:item._id})}else updateHistory&&("anime"===type?item.reWatching===!1:item.reReading===!1)&&item.meta.history.push({date:Date.now(),value:"anime"===type?item.episodes:item.chapters,rating:0,title:item.title,id:item._id});return item},this.deleteHistory=function(item,history){var temp=[];return angular.forEach(item.meta.history,function(past){past.value!==history.value&&temp.push(past)}),item.meta.history=temp,item},this.latestDate=function(latest,updated){var latestDate,diff,today=moment(new Date);return moment(latest).toISOString().substring(0,10)===moment(updated).toISOString().substring(0,10)?(latestDate=moment(updated),diff=latestDate.fromNow(),"a day ago"===diff?"Yesterday at "+latestDate.format("HH:mm"):diff.indexOf("days")>-1?diff+" at "+latestDate.format("HH:mm"):diff+"."):(latestDate=moment(latest),diff=today.diff(latestDate,"days"),0===diff?"Today":1===diff?"Yesterday":diff+" days ago.")},this.buildOverview=function(items){var overview={ongoing:$filter("filter")(items,{status:!1}).length,completed:$filter("filter")(items,{status:!0}).length};return overview},this.maxCompleteMonth=function(items){for(var modeMap={},maxCount=0,i=0;i<items.length;i++)if(void 0!==items[i].end&&null!==items[i].end){var end=items[i].end.substring(0,7);null===modeMap[end]||void 0===modeMap[end]?modeMap[end]=1:modeMap[end]++,modeMap[end]>maxCount&&(maxCount=modeMap[end])}return maxCount},this.getRatingValues=function(items){var tempRating=0,maxRatedCount=0,averageRating=0;angular.forEach(items,function(item){0!==item.rating&&(tempRating+=item.rating,maxRatedCount++)}),averageRating=tempRating/maxRatedCount;var values={maxRatedCount:maxRatedCount,averageRating:averageRating};return values},this.maxTagCount=function(items){var modeMap={},maxCount=0;return angular.forEach(items,function(item){angular.forEach(item.tags,function(tag){var text=tag.text;null===modeMap[text]||void 0===modeMap[text]?modeMap[text]=1:modeMap[text]++,modeMap[text]>maxCount&&(maxCount=modeMap[text])})}),maxCount},this.buildStatTags=function(items,averageItemRating){{var checkedRating,self=this,add=!0,statTags=[];self.maxTagCount(items),items.length}return angular.forEach(items,function(item){angular.forEach(item.tags,function(tag){for(var i=0,len=statTags.length;len>i;i++)statTags[i].tag===tag.text&&(add=!1,statTags[i].count+=1,statTags[i].ratedCount+=0===item.rating?0:1,statTags[i].ratings.push(item.rating),statTags[i].ratingAdded+=item.rating,statTags[i].ratingAvg=0===statTags[i].ratingAdded?0:statTags[i].ratingAdded/statTags[i].ratedCount,statTags[i].ratingWeighted=self.ratingsWeighted(statTags[i].ratings));add===!0&&(checkedRating=0===item.rating?0:1,statTags.push({tag:tag.text,count:1,ratedCount:checkedRating,ratings:[item.rating],ratingAdded:item.rating,ratingAvg:item.rating,ratingWeighted:0})),add=!0})}),statTags},this.ratingsWeighted=function(ratings){for(var values=[],weights=[],unratedCount=0,total=0,count=0,i=0,len=ratings.length;len>i;i++)ratings[i]in values?weights[ratings[i]]++:(values.push(ratings[i]),weights[ratings[i]]=1);for(var k in weights)"function"!=typeof weights[k]&&(isNaN(weights[k])||(total+=k*weights[k],count+=weights[k])),0===k&&(unratedCount=weights[k]);return total/count},this.buildRatingsDistribution=function(items){for(var maxCount=items.length,possibleValues=[10,9,8,7,6,5,4,3,2,1,0],ratingsDistribution=[],i=possibleValues.length;i--;){var count=$filter("filter")(items,{rating:i},!0).length;ratingsDistribution.push({number:0===i?"-":i,text:0===i?count+" entries unrated.":count+" entries rated "+i,colour:i>6?"#449d44":7>i&&i>3?"#31b0d5":0!==i?"#c9302c":"#000000",count:count,percentage:(count/maxCount*100).toFixed(2)})}return ratingsDistribution},this.endingYears=function(items){var years=[],itemYears=$filter("unique")(items,"end.substring(0,4)");return itemYears=$filter("orderBy")(itemYears,"-end.substring(0,4)"),angular.forEach(itemYears,function(item){void 0!==item.end&&null!==item.end&&years.push({year:item.end.substring(0,4)})}),years},this.completeByMonth=function(items){for(var self=this,monthDetails={},completeByMonth=[],maxCompleteMonth=0,itemYears=self.endingYears(items),i=itemYears.length;i--;)void 0!==itemYears[i].year&&null!==itemYears[i].year&&completeByMonth.push({year:itemYears[i].year,months:[{number:"01",text:"January",count:$filter("endedMonth")(items,itemYears[i].year,"01").length},{number:"02",text:"February",count:$filter("endedMonth")(items,itemYears[i].year,"02").length},{number:"03",text:"March",count:$filter("endedMonth")(items,itemYears[i].year,"03").length},{number:"04",text:"April",count:$filter("endedMonth")(items,itemYears[i].year,"04").length},{number:"05",text:"May",count:$filter("endedMonth")(items,itemYears[i].year,"05").length},{number:"06",text:"June",count:$filter("endedMonth")(items,itemYears[i].year,"06").length},{number:"07",text:"July",count:$filter("endedMonth")(items,itemYears[i].year,"07").length},{number:"08",text:"August",count:$filter("endedMonth")(items,itemYears[i].year,"08").length},{number:"09",text:"September",count:$filter("endedMonth")(items,itemYears[i].year,"09").length},{number:"10",text:"October",count:$filter("endedMonth")(items,itemYears[i].year,"10").length},{number:"11",text:"November",count:$filter("endedMonth")(items,itemYears[i].year,"11").length},{number:"12",text:"December",count:$filter("endedMonth")(items,itemYears[i].year,"12").length}]});return maxCompleteMonth=self.maxCompleteMonth(items),monthDetails={months:completeByMonth,max:maxCompleteMonth}},this.completeBySeason=function(items){for(var self=this,seasonDetails={},completeBySeason=[],maxCompleteSeason=0,itemYears=self.endingYears(items),i=itemYears.length;i--;)void 0!==itemYears[i].year&&null!==itemYears[i].year&&completeBySeason.push({year:itemYears[i].year,seasons:[{number:"03",text:"Winter",count:$filter("season")(items,itemYears[i].year,"Winter").length},{number:"06",text:"Spring",count:$filter("season")(items,itemYears[i].year,"Spring").length},{number:"09",text:"Summer",count:$filter("season")(items,itemYears[i].year,"Summer").length},{number:"12",text:"Fall",count:$filter("season")(items,itemYears[i].year,"Fall").length}]});return angular.forEach(completeBySeason,function(item){for(var i=item.seasons.length;i--;)item.seasons[i].count>maxCompleteSeason&&(maxCompleteSeason=item.seasons[i].count)}),seasonDetails={seasons:completeBySeason,max:maxCompleteSeason}},this.setSeason=function(items,year,season){var self=this,array=$filter("endedSeason")(items,year,season);return angular.forEach(array,function(item){console.log(item.title),item.season=self.convertDateToSeason(new Date(item.start))}),array}}]),angular.module("characters").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Characters","characters","dropdown","/characters(/create)?"),Menus.addSubMenuItem("topbar","characters","List Characters","characters"),Menus.addSubMenuItem("topbar","characters","New Character","characters/create")}]),angular.module("characters").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCharacters",{url:"/characters",templateUrl:"modules/characters/views/list-characters.client.view.html"}).state("createCharacter",{url:"/characters/create",templateUrl:"modules/characters/views/create-character.client.view.html"}).state("viewCharacter",{url:"/characters/:characterId",templateUrl:"modules/characters/views/view-character.client.view.html"}).state("editCharacter",{url:"/characters/:characterId/edit",templateUrl:"modules/characters/views/edit-character.client.view.html"})}]),angular.module("characters").controller("CharactersController",["$scope","$stateParams","$location","Authentication","Characters","Animeitems","Mangaitems","fileUpload","$sce","$window","ListService","CharacterService","NotificationFactory","spinnerService","TagService",function($scope,$stateParams,$location,Authentication,Characters,Animeitems,Mangaitems,fileUpload,$sce,$window,ListService,CharacterService,NotificationFactory,spinnerService,TagService){var ctrl=this;ctrl.authentication=Authentication,ctrl.whichController="character",ctrl.pageConfig={currentPage:0,pageSize:10},ctrl.filterConfig={isList:"list",showingCount:0,sortType:"",sortReverse:!1,searchTags:"",media:"",seriesFilter:"",tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:ListService.getSelectListOptions(ctrl.whichController),statTags:[],voiceActors:[],series:[]},ctrl.maxItemCount=0,ctrl.imgPath="",ctrl.tagArray=[],ctrl.tagArrayRemove=[],ctrl.usedTags=[],ctrl.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},ctrl.addTag=function(){TagService.addTag(ctrl.tagArray,ctrl.newTag),ctrl.newTag=""},ctrl.dropTag=function(text){TagService.dropTag(ctrl.tagArray,text)},ctrl.removeTag=function(text){TagService.dropTag(ctrl.mangaitem.tags,text)},ctrl.create=function(){var character=new Characters;character=new Characters({name:this.name,image:ctrl.imgPath,anime:void 0!==this.anime&&null!==this.anime?this.anime._id:this.anime,manga:void 0!==this.manga&&null!==this.manga?this.manga._id:this.manga,voice:this.voice,tags:ctrl.tagArray,user:this.user}),character.$save(function(response){$location.path("characters/"+response._id),NotificationFactory.success("Saved!","Character was saved successfully")},function(errorResponse){ctrl.error=errorResponse.data.message,NotificationFactory.error("Error!",errorResponse.data.message)})},ctrl.remove=function(character){NotificationFactory.confirmation(function(){if(character){character.$remove();for(var i in ctrl.characters)ctrl.characters[i]===character&&ctrl.characters.splice(i,1)}else ctrl.character.$remove(function(){$location.path("characters")});NotificationFactory.warning("Deleted!","Character was successfully deleted.")})},ctrl.update=function(){var character=ctrl.character;null!==ctrl.character.manga&&void 0!==ctrl.character.manga&&(character.manga=ctrl.character.manga._id),null!==ctrl.character.anime&&void 0!==ctrl.character.anime&&(character.anime=ctrl.character.anime._id),void 0!==ctrl.tagArray&&(character.tags=ListService.concatenateTagArrays(character.tags,ctrl.tagArray)),
void 0!==ctrl.imgPath&&null!==ctrl.imgPath&&""!==ctrl.imgPath&&(character.image=ctrl.imgPath),character.$update(function(){$location.path("characters"),NotificationFactory.success("Saved!","Character was saved successfully")},function(errorResponse){ctrl.error=errorResponse.data.message,NotificationFactory.error("Error!",errorResponse.data.message)})},ctrl.find=function(){spinnerService.loading("characters",Characters.query().$promise.then(function(result){ctrl.characters=result,ctrl.filterConfig.areTagless=ListService.checkForTagless(result),ctrl.filterConfig.statTags=CharacterService.buildCharacterTags(result),ctrl.filterConfig.voiceActors=CharacterService.buildVoiceActors(result),ctrl.filterConfig.series=CharacterService.buildSeriesList(result),console.log("find characters: ",ctrl.characters,ctrl.filterConfig)}))},ctrl.findOne=function(){ctrl.character=Characters.get({characterId:$stateParams.characterId})},ctrl.findAnime=function(){ctrl.animeitems=Animeitems.query()},ctrl.findOneAnime=function(anime){ctrl.animeitem=Animeitems.get({animeitemId:anime})},ctrl.findManga=function(){ctrl.mangaitems=Mangaitems.query()},ctrl.findOneManga=function(manga){ctrl.mangaitem=Mangaitems.get({mangaitemId:manga})},ctrl.uploadFile=function(){ctrl.imgPath="/modules/characters/img/"+ctrl.myFile.name,fileUpload.uploadFileToUrl(ctrl.myFile,"/fileUploadCharacter")}}]),angular.module("characters").directive("characterBack",function(){return function(scope,element,attrs){var url=attrs.characterBack;element.css({"background-image":"url("+url+")","background-size":"cover","background-repeat":"no-repeat","background-position":"center"})}}).directive("disableNgAnimate",["$animate",function($animate){return{restrict:"A",link:function(scope,element){$animate.enabled(!1,element)}}}]).directive("slider",["$timeout","$sce",function($timeout,$sce){return{restrict:"AE",replace:!0,scope:{slides:"=?",interval:"=?",filterConfig:"=?"},templateUrl:"/modules/characters/templates/slider.html",link:function(scope,elem,attrs){var timer,autoSlide,length=elem[0].childElementCount-1;if(scope.currentIndex=-1,scope.repeater=void 0===scope.slides?!1:!0,scope.interval=void 0===scope.interval?3e3:scope.interval,scope.isFullscreen=!1,scope.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},!scope.repeater){scope.slides=[];for(var i=0;length>i;i++)scope.slides.push({index:i})}scope.goToSlide=function(slide){scope.currentIndex!==slide?slide!==scope.filteredSlides.length?scope.currentIndex=slide:scope.currentIndex=0:scope.filteredSlides[scope.currentIndex].locked?(scope.filteredSlides[scope.currentIndex].locked=!1,autoSlide()):(scope.filteredSlides[scope.currentIndex].locked=!0,$timeout.cancel(timer))},scope.next=function(){scope.currentIndex<scope.filteredSlides.length-1?scope.currentIndex+=1:scope.currentIndex=0},scope.prev=function(){scope.currentIndex>0?scope.currentIndex-=1:scope.currentIndex=scope.filteredSlides.length-1},scope.$watch("currentIndex",function(){scope.currentIndex>-1&&scope.filteredSlides.length>0&&(scope.filteredSlides.forEach(function(slide){slide.visible=!1,slide.locked=!1}),scope.filteredSlides[scope.currentIndex].visible=!0)}),autoSlide=function(){timer=$timeout(function(){scope.next(),timer=$timeout(autoSlide,scope.interval)},scope.interval)},autoSlide(),scope.$on("$destroy",function(){$timeout.cancel(timer)}),scope.enter=function(){scope.filteredSlides[scope.currentIndex].locked!==!0&&$timeout.cancel(timer)},scope.leave=function(){scope.filteredSlides[scope.currentIndex].locked!==!0&&(timer=$timeout(autoSlide,scope.interval))},scope.toggleFullscreen=function(){scope.isFullscreen=!scope.isFullscreen},scope.$watch("filterConfig.search",function(newValue){if(void 0!==scope.filterConfig.search){var temp=scope.interval;scope.interval=null,scope.search=newValue,scope.interval=temp}}),scope.$watch("filterConfig.media",function(newValue){if(void 0!==scope.filterConfig.media){var temp=scope.interval;scope.interval=null,scope.media=newValue,scope.interval=temp}}),scope.$watch("filterConfig.seriesFilter",function(newValue){if(void 0!==scope.filterConfig.seriesFilter){var temp=scope.interval;scope.interval=null,scope.seriesFilter=newValue,scope.interval=temp}}),scope.$watch("filterConfig.searchTags",function(newValue){if(void 0!==scope.filterConfig.media){var temp=scope.interval;scope.interval=null,scope.searchTags=newValue,scope.interval=temp}})}}}]).directive("enterTag",function(){return{restrict:"A",link:function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.enterTag)}),event.preventDefault())})}}}).directive("clearTagValues",function(){return function(scope,element,attrs){element.bind("click",function(event){scope.$apply(function(){scope.filterConfig.searchTags="",scope.filterConfig.characterTags="",scope.filterConfig.tagsForFilter=[]})})}}).directive("deleteSearchTag",function(){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(event){scope.$apply(function(){var tag=attrs.deleteSearchTag,index=scope.filterConfig.tagsForFilter.indexOf(tag);scope.filterConfig.searchTags=scope.filterConfig.searchTags.replace(tag+",",""),scope.filterConfig.tagsForFilter.splice(index,1)})})}}}).directive("dropTag",["NotificationFactory",function(NotificationFactory){return function(scope,element,attrs){element.bind("click",function(event){var text=attrs.dropTag;NotificationFactory.confirmation(function(){scope.$apply(function(){var deletingItem=scope.tagArray;scope.$parent.tagArray=[],angular.forEach(deletingItem,function(tag){tag.text!==text&&scope.$parent.tagArray.push(tag)})}),NotificationFactory.warning("Dropped!","Tag was successfully dropped")})})}}]).directive("removeTag",["NotificationFactory",function(NotificationFactory){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(event){var i,tag=attrs.removeTag,entry_type=scope.whichController;NotificationFactory.confirmation(function(){scope.$apply(function(){var index;if("character"===entry_type){for(i=0;i<scope.character.tags.length;i++)scope.character.tags[i].text===tag&&(index=i);scope.$parent.character.tags.splice(index,1)}else if("animeitem"===entry_type){for(i=0;i<scope.animeitem.tags.length;i++)scope.animeitem.tags[i].text===tag&&(index=i);scope.$parent.animeitem.tags.splice(index,1)}else if("mangaitem"===entry_type){for(i=0;i<scope.mangaitem.tags.length;i++)scope.mangaitem.tags[i].text===tag&&(index=i);scope.$parent.mangaitem.tags.splice(index,1)}}),NotificationFactory.warning("Deleted!","Tag was successfully deleted")})})}}}]),angular.module("characters").filter("seriesDetailFilter",function(){return function(array,detailSeriesName){return void 0!==array?array.filter(function(item){if(""===detailSeriesName)return item;if(null!==item.anime&&void 0!==item.anime){if(item.anime.title===detailSeriesName)return item}else if(null!==item.manga&&void 0!==item.manga&&item.manga.title===detailSeriesName)return item}):void 0}}).filter("seriesFilter",function(){return function(array,series){return void 0!==array?array.filter(function(item){return""===series||void 0===series?item:null!==item.anime&&void 0!==item.anime?item.anime.title.toLowerCase().indexOf(series.toLowerCase())>-1:null!==item.manga&&void 0!==item.manga?item.manga.title.toLowerCase().indexOf(series.toLowerCase())>-1:void 0}):void 0}}).filter("mediaFilter",function(){return function(array,media){return void 0!==array?array.filter(function(item){return"anime"===media?null!==item.anime&&null===item.manga?!0:!1:"manga"===media?null!==item.manga&&null===item.anime?!0:!1:"both"===media?null!==item.anime&&null!==item.manga?!0:!1:"none"!==media?!0:null===item.anime&&null===item.manga?!0:void 0}):void 0}}).filter("tagFilter",function(){return function(array,searchTags,taglessItem){return void 0!==array?array.filter(function(item){var tagsForFilter,found=!1,i=0,tagsToSearch=[];if(taglessItem!==!0){if(void 0===searchTags||""===searchTags)return!0;for(tagsForFilter=searchTags.substring(0,searchTags.length-1).split(","),angular.forEach(item.tags,function(tag){tagsToSearch.push(tag.text)}),i=0;i<tagsForFilter.length;i++){if(-1===tagsToSearch.indexOf(tagsForFilter[i]))return!1;found=!0}return found}return 0===item.tags.length?item:void 0}):void 0}}),angular.module("characters").factory("Characters",["$resource",function($resource){return $resource("characters/:characterId",{characterId:"@_id"},{update:{method:"PUT"}})}]).service("TagService",["$rootScope","NotificationFactory",function($rootScope,NotificationFactory){var service={};return service.addTag=function(tagArray,newTag){if(""!==newTag&&void 0!==newTag){var i=0,alreadyAdded=!1;if(tagArray.length>0){for(;i<tagArray.length;)tagArray[i].text===newTag&&(alreadyAdded=!0),i++;alreadyAdded===!1&&tagArray.push({text:newTag})}else tagArray.push({text:newTag})}},service.dropTag=function(tagArray,text){NotificationFactory.confirmation(function(){$rootScope.$apply(function(){for(var i=tagArray.length;i--;)if(tagArray[i].text===text){tagArray.splice(i,1),NotificationFactory.warning("Dropped!","Tag was successfully dropped");break}})})},service}]).service("CharacterService",["$q",function($q){this.buildGenderDistribution=function(items,maxCount){return $q(function(resolve,reject){var check,gender=[];angular.forEach(items,function(item){"male"===item.tag?gender.push({type:"male",count:item.count,percentage:Number((item.count/maxCount*100).toFixed(2)),text:"% male."}):"female"===item.tag&&gender.push({type:"female",count:item.count,percentage:Number((item.count/maxCount*100).toFixed(2)),text:"% female."})}),gender.push({type:"unassigned",count:maxCount-gender[0].count-gender[1].count,percentage:Number((100*(maxCount-gender[0].count-gender[1].count/maxCount)).toFixed(2)),text:"% unassigned."}),check=gender[0].percentage+gender[1].percentage+gender[2].percentage,check>100?gender[2].percentage-=(check-100).toFixed(2):100>check&&(gender[2].percentage+=(100-check).toFixed(2)),resolve(gender)})},this.buildCharacterTags=function(items){var add=!0,statTags=[];return angular.forEach(items,function(item){angular.forEach(item.tags,function(tag){for(var i=0;i<statTags.length;i++)statTags[i].tag===tag.text&&(add=!1,statTags[i].count+=1);add===!0&&statTags.push({tag:tag.text,count:1}),add=!0})}),statTags},this.buildRelatedCharacterTags=function(items,name){var add=!0,tagDetailCollection=[],tagDetailResult=[];return angular.forEach(items,function(item){for(var i=0;i<item.tags.length;i++)item.tags[i].text===name&&tagDetailCollection.push(item.tags)}),angular.forEach(tagDetailCollection,function(item){angular.forEach(item,function(bit){for(var i=0;i<tagDetailResult.length;i++)tagDetailResult[i].name===bit.text&&bit.text!==name&&(add=!1,tagDetailResult[i].count+=1);add===!0&&bit.text!==name&&tagDetailResult.push({name:bit.text,count:1}),add=!0})}),tagDetailResult},this.buildVoiceActors=function(items){var add=!0,voiceActors=[];return angular.forEach(items,function(item){for(var i=0;i<voiceActors.length;i++)voiceActors[i].name===item.voice&&(add=!1,voiceActors[i].count+=1);add===!0&&voiceActors.push({name:item.voice,count:1}),add=!0}),voiceActors},this.buildSeriesList=function(items){var add=!0,statSeries=[];return angular.forEach(items,function(item){for(var i=0;i<statSeries.length;i++)item.anime?statSeries[i].name===item.anime.title&&(add=!1,statSeries[i].count+=1):item.manga&&statSeries[i].name===item.manga.title&&(add=!1,statSeries[i].count+=1);add===!0&&("object"==typeof item.anime&&null!==item.anime?statSeries.push({_id:item.anime._id,name:item.anime.title,count:1}):"object"==typeof item.manga&&null!==item.manga&&statSeries.push({_id:item.manga._id,name:item.manga.title,count:1})),add=!0}),statSeries}}]),function(){function HeaderController($scope,Authentication,Menus,$location){function toggleCollapsibleMenu(){ctrl.isCollapsed=!ctrl.isCollapsed}function isActive(viewLocation){return viewLocation===$location.path()}function changeTheme(){localStorage.setItem("timedTheme",JSON.stringify(ctrl.timedTheme));var timeOfDayTheme=localStorage.getItem("timedTheme");if("false"===timeOfDayTheme)localStorage.setItem("theme",JSON.stringify(ctrl.theme));else{var time=(new Date).getHours();time>20||8>time?localStorage.setItem("theme",JSON.stringify("dist/main-night.min.css")):time>8&&localStorage.setItem("theme",JSON.stringify("dist/main-day.min.css"))}var storedValue=localStorage.getItem("theme"),link=document.getElementById("app-theme");link.href=storedValue.substr(1,storedValue.lastIndexOf('"')-1),ctrl.theme=storedValue.substr(1,storedValue.lastIndexOf('"')-1)}var ctrl=this;ctrl.authentication=Authentication,ctrl.changeTheme=changeTheme,ctrl.isActive=isActive,ctrl.isCollapsed=!1,ctrl.isTimedTheme=localStorage.getItem("timedTheme"),ctrl.menu=Menus.getMenu("topbar"),ctrl.saved=localStorage.getItem("theme"),ctrl.styles=[{name:"Day",url:"dist/main-day.min.css"},{name:"Night",url:"dist/main-night.min.css"}],ctrl.theme=null!==localStorage.getItem("theme")?JSON.parse(ctrl.saved):"dist/main-night.min.css",ctrl.timedTheme=null!==localStorage.getItem("timedTheme")?JSON.parse(ctrl.isTimedTheme):!1,ctrl.toggleCollapsibleMenu=toggleCollapsibleMenu,localStorage.setItem("theme",JSON.stringify(ctrl.theme)),localStorage.setItem("timedTheme",JSON.stringify(ctrl.timedTheme)),$scope.$on("$stateChangeSuccess",function(){ctrl.isCollapsed=!1})}angular.module("core").controller("HeaderController",HeaderController),HeaderController.$inject=["$scope","Authentication","Menus","$location"]}(),angular.module("core").directive("myProgress",function(){return function(scope,element,attrs){scope.$watch(attrs.myProgress,function(val){var type="checklist-progress";element.html('<div class="'+type+'" style="width: '+val+'%;height: 100%"></div>')})}}).directive("anywhereButHere",function($document,$window){return{restrict:"A",link:function(scope,element,attrs){element.data("thing",!0),angular.element($document[0].body).on("click",function(e){var inThing=angular.element(e.target).inheritedData("thing"),ignore=angular.element(e.target).attr("ignore-here");inThing||ignore||scope.$apply(function(){scope[attrs.ngShow]=!1})})}}}).directive("formatDate",function(){return{require:"ngModel",link:function(scope,elem,attr,modelCtrl){modelCtrl.$formatters.push(function(modelValue){return null===modelValue?null:new Date(modelValue)})}}}).directive("loadingSpinner",["$http","spinnerService",function($http,spinnerService){return{restrict:"A",transclude:!0,replace:!0,templateUrl:"/modules/core/templates/loading-spinner.html",scope:{name:"@",size:"@?"},bindToController:"loadingSpinner",controller:function($scope){$scope.active=!1;var api={name:$scope.name,show:function(){$scope.active=!0},hide:function(){$scope.active=!1},toggle:function(){$scope.active=!$scope.active}};spinnerService._register(api),$scope.$on("$destroy",function(){spinnerService._unregister($scope.name)})}}}]).directive("clickPass",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(event){$timeout(function(){event.stopPropagation(),document.getElementById(attrs.clickPass).click()},0)})}}}]),angular.module("core").filter("dayFilter",function(){return function(array,daySelected){return array.filter(function(item){var ds=daySelected;return"1"===ds&&"Monday"===item.day?item:"2"===ds&&"Tuesday"===item.day?item:"3"===ds&&"Wednesday"===item.day?item:"4"===ds&&"Thursday"===item.day?item:"5"===ds&&"Friday"===item.day?item:"6"===ds&&"Saturday"===item.day?item:"0"===ds&&"Sunday"===item.day?item:""===ds||null===ds||void 0===ds?item:"Any"===ds&&"Any"===item.day?item:void 0})}}).filter("calendarFilter",function(){return function(array,datesSelected){return array?array.filter(function(item){if(null===item.date||void 0===item.date)return datesSelected===!1?item:!1;var day=(new Date).getDay(),diff=(new Date).getDate()-day+(0===day?0:7),temp=new Date,wkEnd=new Date(temp.setDate(diff)),currentWkEnd=wkEnd.toISOString().substring(0,10),iDate=new Date(item.date).toISOString(),itemDate={year:iDate.substr(0,4),month:iDate.substr(5,2),day:iDate.substr(8,2)},currentDate={year:currentWkEnd.substr(0,4),month:currentWkEnd.substr(5,2),day:currentWkEnd.substr(8,2)};if(datesSelected===!1){if(itemDate.year<currentDate.year)return item;if(itemDate.year===currentDate.year){if(itemDate.month<currentDate.month)return item;if(itemDate.month===currentDate.month&&itemDate.day<=currentDate.day)return item}}else if(datesSelected===!0){if(itemDate.year>currentDate.year)return item;if(itemDate.year===currentDate.year){if(itemDate.month>currentDate.month)return item;if(itemDate.month===currentDate.month&&itemDate.day>currentDate.day)return item}}}):void 0}}).filter("dateSuffix",function($filter){var suffixes=["th","st","nd","rd"];return function(input){if(void 0!==input){var dtfilter=$filter("date")(input,"MMMM d"),day=parseInt(dtfilter.slice(-2)),relevantDigits=30>day?day%20:day%30,suffix=3>=relevantDigits?suffixes[relevantDigits]:suffixes[0],dateArray=dtfilter.split(" "),month=dateArray[0];return dateArray[1]+suffix+" "+month+" "+$filter("date")(input,"yyyy")}}}).filter("numberFixedLen",function(){return function(n,len){var num=parseInt(n,10);if(len=parseInt(len,10),isNaN(num)||isNaN(len))return n;for(num=""+num;num.length<len;)num="0"+num;return num}}),angular.module("core").factory("NotificationFactory",function(){return toastr.options={closeButton:!1,debug:!1,newestOnTop:!1,progressBar:!1,positionClass:"toast-bottom-right",preventDuplicates:!1,onclick:null,showDuration:"300",hideDuration:"1000",timeOut:"5000",extendedTimeOut:"1000",showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut"},{success:function(title,text){toastr.success(text,title,"Success")},warning:function(title,text){toastr.warning(text,title,"Warning")},error:function(title,text){toastr.error(text,title,"Error")},popup:function(title,text,type){swal({title:title,text:text,type:type})},confirmation:function(thenDo){swal({title:"Are you sure?",text:"Are you sure that you want to delete this?",type:"warning",showCancelButton:!0,closeOnConfirm:!0,confirmButtonText:"Yes, delete it!",confirmButtonColor:"#ec6c62"},thenDo)}}}).factory("spinnerService",["$q",function($q){var spinners={},queue={},loads={};return{spinners:spinners,_register:function(data){if(!data.hasOwnProperty("name"))throw new Error("Spinner must specify a name when registering with the spinner service.");if(spinners.hasOwnProperty(data.name))throw new Error("A spinner with the name '"+data.name+"' has already been registered.");spinners[data.name]=data,this.count++,queue[data.name]&&(loads[data.name]?(this[queue[data.name]](data.name,loads[data.name]),delete loads[data.name],delete queue[data.name]):(this[queue[data.name]](data.name),delete queue[data.name]))},_unregister:function(name){spinners.hasOwnProperty(name)&&delete spinners[name]},loading:function(name,optionsOrPromise){if(!this.spinners[name])return queue[name]="loading",void(loads[name]=optionsOrPromise);var spinner=spinners[name];spinner.show(name),optionsOrPromise=optionsOrPromise||{},(optionsOrPromise.always||optionsOrPromise["finally"])&&(optionsOrPromise={promise:optionsOrPromise});var options=angular.extend({},optionsOrPromise);options.promise&&(options.promise.always?options.promise.always(function(){spinner.hide(name)}):options.promise["finally"]&&options.promise["finally"](function(){spinner.hide(name)}))},show:function(name){if(!this.spinners[name])return void(queue[name]="show");var spinner=spinners[name];if(!spinner)throw new Error("No spinner named '"+name+"' is registered.");spinner.show()},hide:function(name){if(!this.spinners[name])return void(queue[name]="hide");var spinner=spinners[name];if(!spinner)throw new Error("No spinner named '"+name+"' is registered.");spinner.hide()},toggle:function(name){if(!this.spinners[name])return void(queue[name]="toggle");var spinner=spinners[name];if(!spinner)throw new Error("No spinner named '"+name+"' is registered.");spinner.toggle()},count:0}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("favourites").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/signin"),$stateProvider.state("favourites",{url:"/favourites",templateUrl:"modules/favourites/views/favourites.client.view.html"}).state("animeFavourites",{url:"/animefavourites",templateUrl:"modules/favourites/views/anime-favourites.client.view.html"}).state("mangaFavourites",{url:"/mangafavourites",templateUrl:"modules/favourites/views/manga-favourites.client.view.html"}).state("characterFavourites",{url:"/characterfavourites",templateUrl:"modules/favourites/views/character-favourites.client.view.html"})}]),angular.module("favourites").controller("FavouritesController",["$scope","Authentication","$window","$sce","Animeitems","Mangaitems","$location","NotificationFactory",function($scope,Authentication,$window,$sce,Animeitems,Mangaitems,$location,NotificationFactory){function favouriteLimitReached(){NotificationFactory.popup("Favourite limit reached!","Only allowed 5 favourites. \nPlease remove one if you wish to add another.","error")}$scope.authentication=Authentication,$scope.authentication.user||$location.path("/signin"),$scope.today=(new Date).toISOString(),$scope.saved=localStorage.getItem("favouriteAnimeitems"),$scope.favouriteAnimeitem=null!==localStorage.getItem("favouriteAnimeitems")?JSON.parse($scope.saved):[{rank:"1",date:$scope.today,anime:{title:"Favourite Anime 1"}},{rank:"2",date:$scope.today,anime:{title:"Favourite Anime 2"}},{rank:"3",date:$scope.today,anime:{title:"Favourite Anime 3"}},{rank:"4",date:$scope.today,anime:{title:"Favourite Anime 4"}},{rank:"5",date:$scope.today,anime:{title:"Favourite Anime 5"}}],localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.saved=localStorage.getItem("favouriteMangaitems"),$scope.favouriteMangaitem=null!==localStorage.getItem("favouriteMangaitems")?JSON.parse($scope.saved):[{rank:"1",date:$scope.today,manga:{title:"Favourite Manga 1"}},{rank:"2",date:$scope.today,manga:{title:"Favourite Manga 2"}},{rank:"3",date:$scope.today,manga:{title:"Favourite Manga 3"}},{rank:"4",date:$scope.today,manga:{title:"Favourite Manga 4"}},{rank:"5",date:$scope.today,manga:{title:"Favourite Manga 5"}}],localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},$scope.findAnime=function(){$scope.animeitems=Animeitems.query()},$scope.findManga=function(){$scope.mangaitems=Mangaitems.query()},$scope.addFavourite=function(type){"anime"===type?$scope.favouriteAnimeitem.length<5?($scope.favouriteAnimeitem.push({date:$scope.today,anime:$scope.favourite}),localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.favourite=""):favouriteLimitReached():"manga"===type&&($scope.favouriteMangaitem.length<5?($scope.favouriteMangaitem.push({date:$scope.today,manga:$scope.favourite}),localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.favourite=""):favouriteLimitReached())},$scope.removeFavourite=function(kill){NotificationFactory.confirmation(function(){var deletingItem;void 0!==kill.anime?(deletingItem=$scope.favouriteAnimeitem,$scope.favouriteAnimeitem=[],angular.forEach(deletingItem,function(item){item!==kill&&$scope.favouriteAnimeitem.push(item)}),localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),$scope.$apply(),NotificationFactory.warning("Deleted!","Favourite was successfully deleted")):void 0!==kill.manga&&(deletingItem=$scope.favouriteMangaitem,$scope.favouriteMangaitem=[],angular.forEach(deletingItem,function(item){item!==kill&&$scope.favouriteMangaitem.push(item)}),localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),$scope.$apply(),NotificationFactory.warning("Deleted!","Favourite was successfully deleted"))})},$scope.reorderFavourites=function(favourite){if($scope.selectedFavourite===favourite)$scope.selectedFavourite=void 0,$scope.selectedFavouriteTwo=void 0;else if(void 0===$scope.selectedFavourite)$scope.selectedFavourite=favourite;else{$scope.selectedFavouriteTwo=favourite;var ind1,ind2,hold;void 0!==$scope.selectedFavourite.anime?(ind1=$scope.favouriteAnimeitem.indexOf($scope.selectedFavourite),ind2=$scope.favouriteAnimeitem.indexOf($scope.selectedFavouriteTwo),hold=$scope.favouriteAnimeitem[ind1],$scope.favouriteAnimeitem[ind1]=$scope.favouriteAnimeitem[ind2],$scope.favouriteAnimeitem[ind2]=hold,localStorage.setItem("favouriteAnimeitems",JSON.stringify($scope.favouriteAnimeitem)),NotificationFactory.success("Moved!","Favourite was successfully moved"),$scope.selectedFavourite=void 0,$scope.selectedFavouriteTwo=void 0):void 0!==$scope.selectedFavourite.manga&&(ind1=$scope.favouriteMangaitem.indexOf($scope.selectedFavourite),ind2=$scope.favouriteMangaitem.indexOf($scope.selectedFavouriteTwo),hold=$scope.favouriteMangaitem[ind1],$scope.favouriteMangaitem[ind1]=$scope.favouriteMangaitem[ind2],$scope.favouriteMangaitem[ind2]=hold,localStorage.setItem("favouriteMangaitems",JSON.stringify($scope.favouriteMangaitem)),NotificationFactory.success("Moved!","Favourite was successfully moved"),$scope.selectedFavourite=void 0,$scope.selectedFavouriteTwo=void 0)}}}]),angular.module("favourites").directive("favouriteBack",function(){return function(scope,element,attrs){var url=attrs.favouriteBack;element.css({"background-image":"url("+url+")","background-size":"100%","background-repeat":"no-repeat","background-position":"right"})}}),angular.module("history").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/signin"),$stateProvider.state("history",{url:"/history",templateUrl:"modules/history/views/history.client.view.html"})}]),angular.module("history").controller("HistoryController",["$scope","$stateParams","$location","Authentication","AnimeHistory","MangaHistory","HistoryService","ListService","spinnerService",function($scope,$stateParams,$location,Authentication,AnimeHistory,MangaHistory,HistoryService,ListService,spinnerService){var ctrl=this,latestDate=(new Date).setDate((new Date).getDate()-29);ctrl.authentication=Authentication,ctrl.view="Anime",ctrl.filterConfig={historyFilter:"Today"},ctrl.historyGroups=[{name:"Today"},{name:"Yesterday"},{name:"This week"},{name:"Last week"},{name:"Two weeks ago"},{name:"Three weeks ago"},{name:"Four weeks ago"}],ctrl.buildHistory=function(){spinnerService.loading("history",AnimeHistory.query({latest:latestDate}).$promise.then(function(result){return HistoryService.buildHistoryList(result)}).then(function(result){return ctrl.animeHistory=result,MangaHistory.query({latest:latestDate}).$promise}).then(function(result){return HistoryService.buildHistoryList(result)}).then(function(result){ctrl.mangaHistory=result}))},$scope.$watch("view",function(newValue){void 0!==ctrl.view&&"Anime"!==newValue&&"Manga"!==newValue&&(ctrl.view="Anime")}),ctrl.happenedWhen=function(when){return HistoryService.happenedWhen(when)}}]),angular.module("history").filter("historySeparator",["HistoryService","moment",function(HistoryService,moment){return function(array,level,timeframe){var itemDate,attr="group"===level?"latest":"date";return void 0!==array?array.filter(function(item){return itemDate=moment(item[attr]).startOf("day"),HistoryService.filterItemHistory(timeframe.toLowerCase(),itemDate)?item:!1}):void 0}}]),angular.module("history").factory("AnimeHistory",["$resource",function($resource){return $resource("history/anime/:latest",{latest:"@_latest"},{update:{method:"PUT"}})}]).factory("MangaHistory",["$resource",function($resource){return $resource("history/manga/:latest",{latest:"@_latest"},{update:{method:"PUT"}})}]).service("HistoryService",["moment","$q",function(moment,$q){this.getEndsOfWeek=function(){var self=this,endsOfWeek=[],thisMonday=self.weekBeginning(),thisSunday=self.weekEnding();return endsOfWeek={mondays:[thisMonday,self.getSetDaysAgo(thisMonday,7),self.getSetDaysAgo(thisMonday,14),self.getSetDaysAgo(thisMonday,21),self.getSetDaysAgo(thisMonday,28)],sundays:[thisSunday,self.getSetDaysAgo(thisSunday,7),self.getSetDaysAgo(thisSunday,14),self.getSetDaysAgo(thisSunday,21),self.getSetDaysAgo(thisSunday,28)]}},this.getSetDaysAgo=function(thisEnd,daysAgo){var newDate=moment(thisEnd).subtract(daysAgo,"days");return newDate},this.weekBeginning=function(){var date=new Date,day=date.getDay(),diff=date.getDate()-day+(0===day?-6:1),temp=new Date,wkBeg=new Date(temp.setDate(diff));return moment(wkBeg.toISOString()).startOf("day")},this.weekEnding=function(){var date=new Date,day=date.getDay(),diff=date.getDate()-day+(0===day?0:7),temp=new Date,wkEnd=new Date(temp.setDate(diff));return moment(wkEnd.toISOString()).endOf("day")},this.today=moment(new Date).startOf("day"),this.endsOfWeek=this.getEndsOfWeek(),this.mondays=this.endsOfWeek.mondays,this.sundays=this.endsOfWeek.sundays,this.buildHistoryList=function(items){{var deferred=$q.defer(),self=this;self.extractHistory(items).then(function(result){return result.sort(function(a,b){
var dateA=a.date,dateB=b.date;return dateA>dateB?-1:dateB>dateA?1:dateA===dateB?0:void 0}),self.groupItemHistory(result)}).then(function(result){deferred.resolve(result)})}return deferred.promise},this.extractHistory=function(items){var deferred=$q.defer(),itemHistory=[],today=moment(new Date).startOf("day");return angular.forEach(items,function(item){angular.forEach(item.meta.history,function(history){var cutoff=moment(history.date).startOf("day"),diff=today.diff(cutoff,"days");29>diff&&itemHistory.push({date:history.date,value:history.value,title:item.title,id:item._id})})}),deferred.resolve(itemHistory),deferred.promise},this.groupItemHistory=function(itemHistory){for(var index,prevItem,item,group,deferred=$q.defer(),length=itemHistory.length,groupedHistory=[],i=0;length>i;i++)item=itemHistory[i],0===i?(groupedHistory.push({title:item.title,items:[],count:1,latest:item.date,oldest:item.date}),groupedHistory[0].items.push(item)):0!==i&&(prevItem=itemHistory[i-1],index=groupedHistory.length-1,prevItem.title===item.title?(groupedHistory[index].items.push(item),groupedHistory[index].count++,groupedHistory[index].oldest=item.date):prevItem.title!==item.title&&(group={title:item.title,items:[],count:1,latest:item.date,oldest:item.date},group.items.push(item),groupedHistory.push(group)));return deferred.resolve(groupedHistory),deferred.promise},this.filterItemHistory=function(timeframe,itemDate){var self=this,diff=self.today.diff(itemDate,"days");switch(timeframe){case"today":return 0===diff;case"yesterday":return 1===diff;case"this week":return self.mondays[0]<=itemDate&&itemDate<=self.sundays[0];case"last week":return self.mondays[1]<=itemDate&&itemDate<=self.sundays[1];case"two weeks ago":return self.mondays[2]<=itemDate&&itemDate<=self.sundays[2];case"three weeks ago":return self.mondays[3]<=itemDate&&itemDate<=self.sundays[3];case"four weeks ago":return self.mondays[4]<=itemDate&&itemDate<=self.sundays[4]}},this.happenedWhen=function(when){var today=moment(new Date).startOf("day"),thisDate=moment(when).startOf("day"),diff=today.diff(thisDate,"days");return 0===diff?"Today at "+moment(when).format("HH:mm"):1===diff?"Yesterday at "+moment(when).format("HH:mm"):diff+" days ago at "+moment(when).format("HH:mm")}}]),angular.module("mangaitems").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Mangaitems","mangaitems","dropdown","/mangaitems(/create)?"),Menus.addSubMenuItem("topbar","mangaitems","List Mangaitems","mangaitems"),Menus.addSubMenuItem("topbar","mangaitems","New Mangaitem","mangaitems/create")}]),angular.module("mangaitems").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMangaitems",{url:"/mangaitems",templateUrl:"modules/mangaitems/views/list-mangaitems.client.view.html"}).state("createMangaitem",{url:"/mangaitems/create",templateUrl:"modules/mangaitems/views/create-mangaitem.client.view.html"}).state("viewMangaitem",{url:"/mangaitems/:mangaitemId",templateUrl:"modules/mangaitems/views/view-mangaitem.client.view.html"}).state("editMangaitem",{url:"/mangaitems/:mangaitemId/edit",templateUrl:"modules/mangaitems/views/edit-mangaitem.client.view.html"})}]),angular.module("mangaitems").controller("MangaitemsController",["$scope","$stateParams","$location","Authentication","Mangaitems","Animeitems","fileUpload","$sce","$window","ItemService","ListService","NotificationFactory","MangaFactory","spinnerService","TagService",function($scope,$stateParams,$location,Authentication,Mangaitems,Animeitems,fileUpload,$sce,$window,ItemService,ListService,NotificationFactory,MangaFactory,spinnerService,TagService){var ctrl=this;ctrl.authentication=Authentication,ctrl.whichController="mangaitem",ctrl.pageConfig={currentPage:0,pageSize:10},ctrl.filterConfig={showingCount:0,sortType:"",sortReverse:!0,ratingLevel:void 0,ratingActions:{maxRating:10,percent:void 0,overStar:null},searchTags:"",tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:ListService.getSelectListOptions(ctrl.whichController),statTags:[]},ctrl.itemUpdate=new Date,ctrl.start=ctrl.itemUpdate,ctrl.latest=ctrl.itemUpdate,ctrl.chapters=0,ctrl.volumes=0,ctrl.finalNumbers=!1,ctrl.imgPath="",ctrl.tagArray=[],ctrl.tagArrayRemove=[],ctrl.usedTags=[],ctrl.trustAsResourceUrl=function(url){return $sce.trustAsResourceUrl(url)},ctrl.addTag=function(){TagService.addTag(ctrl.tagArray,ctrl.newTag),ctrl.newTag=""},ctrl.dropTag=function(text){TagService.dropTag(ctrl.tagArray,text)},ctrl.removeTag=function(text){TagService.dropTag(ctrl.mangaitem.tags,text)},ctrl.create=function(){var mangaitem=new Mangaitems;mangaitem=new Mangaitems({title:this.title,chapters:this.chapters,volumes:this.volumes,start:this.start,latest:this.latest,finalChapter:this.finalChapter,finalVolume:this.finalVolume,hardcopy:this.hardcopy,anime:void 0!==this.anime&&null!==this.anime?this.anime._id:this.anime,tags:ctrl.tagArray,user:this.user}),mangaitem.$save(function(response){$location.path("/mangaitems/"+response._id),NotificationFactory.success("Saved!","Manga was saved successfully")},function(errorResponse){ctrl.error=errorResponse.data.message,NotificationFactory.error("Error!",errorResponse.data.message)})},ctrl.remove=function(mangaitem){NotificationFactory.confirmation(function(){if(mangaitem){mangaitem.$remove();for(var i in ctrl.mangaitems)ctrl.mangaitems[i]===mangaitem&&ctrl.mangaitems.splice(i,1)}else ctrl.mangaitem.$remove(function(){$location.path("/mangaitems")});NotificationFactory.warning("Deleted!","Manga was successfully deleted.")})},ctrl.update=function(){var mangaitem=ctrl.mangaitem;ctrl.mangaitem=void 0,MangaFactory.update(mangaitem,ctrl.tagArray,ctrl.updateHistory,ctrl.imgPath)},ctrl.tickOff=function(item){item.chapters+=1,item.latest=new Date,ctrl.updateHistory=!0,ctrl.mangaitem=item,ctrl.update()},ctrl.find=function(){spinnerService.loading("manga",Mangaitems.query().$promise.then(function(result){ctrl.mangaitems=result,ctrl.filterConfig.areTagless=ListService.checkForTagless(result),ctrl.filterConfig.statTags=ItemService.buildStatTags(result,0)}))},ctrl.findOne=function(){Mangaitems.get({mangaitemId:$stateParams.mangaitemId}).$promise.then(function(result){ctrl.mangaitem=result})},ctrl.findAnime=function(){ctrl.animeitems=Animeitems.query()},ctrl.uploadFile=function(){ctrl.imgPath="/modules/mangaitems/img/"+ctrl.myFile.name,fileUpload.uploadFileToUrl(ctrl.myFile,"/fileUpload")},ctrl.latestDate=function(latest,updated){return ItemService.latestDate(latest,updated)},ctrl.deleteHistory=function(item,history){NotificationFactory.confirmation(function(){ctrl.mangaitem=ItemService.deleteHistory(item,history),ctrl.update()})}}]),angular.module("mangaitems").factory("Mangaitems",["$resource",function($resource){return $resource("mangaitems/:mangaitemId",{mangaitemId:"@_id"},{update:{method:"PUT"}})}]).factory("MangaFactory",["Mangaitems","ListService","ItemService","NotificationFactory","$location",function(Mangaitems,ListService,ItemService,NotificationFactory,$location){return{update:function(item,tagArray,updateHistory,imgPath){var mangaitem=item;console.log(mangaitem),null!==item.anime&&void 0!==item.anime&&(mangaitem.anime=item.anime._id),void 0!==tagArray&&(mangaitem.tags=ListService.concatenateTagArrays(mangaitem.tags,tagArray)),mangaitem=ItemService.itemHistory(mangaitem,updateHistory,"manga"),void 0!==imgPath&&null!==imgPath&&""!==imgPath&&(mangaitem.image=imgPath),mangaitem.chapters===mangaitem.finalChapter&&0!==mangaitem.finalChapter?(void 0===mangaitem.end||null===mangaitem.end)&&(mangaitem.volumes=mangaitem.finalVolume,mangaitem.end=mangaitem.latest):mangaitem.reReading===!1&&(mangaitem.end=null),void 0!==mangaitem.end&&null!==mangaitem.end?mangaitem.status=!0:mangaitem.status=!1,mangaitem.reReading===!0&&mangaitem.chapters===mangaitem.finalChapter&&(mangaitem.volumes=mangaitem.finalVolume,mangaitem.reReadCount+=1,mangaitem.reReading=!1),mangaitem.$update(function(){-1===window.location.href.indexOf("tasks")&&$location.path("/mangaitems"),NotificationFactory.success("Saved!","Manga was saved successfully")},function(errorResponse){errorResponse.data.message;NotificationFactory.error("Error!",errorResponse.data.message)})}}}]),angular.module("orders").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Orders","orders","dropdown","/orders(/create)?"),Menus.addSubMenuItem("topbar","orders","List Orders","orders"),Menus.addSubMenuItem("topbar","orders","New Order","orders/create")}]),angular.module("orders").config(["$stateProvider",function($stateProvider){$stateProvider.state("listOrders",{url:"/orders",templateUrl:"modules/orders/views/list-orders.client.view.html"}).state("createOrder",{url:"/orders/create",templateUrl:"modules/orders/views/create-order.client.view.html"}).state("viewOrder",{url:"/orders/:orderId",templateUrl:"modules/orders/views/view-order.client.view.html"}).state("editOrder",{url:"/orders/:orderId/edit",templateUrl:"modules/orders/views/create-order.client.view.html"})}]);var CompleteOrdersController=function(){function CompleteOrdersController($scope,$uibModalInstance,order){this.$scope=$scope,this.$uibModalInstance=$uibModalInstance,this.order=order,this.newPrice={company:"",price:null}}return CompleteOrdersController.prototype.editOrder=function(index){var item=this.order.nextVolume.prices[index];this.newPrice.company=item.company,this.newPrice.price=item.price,this.order.nextVolume.prices.splice(index,1)},CompleteOrdersController.prototype.completeOrder=function(){this.order.nextVolume.prices.push({company:this.newPrice.company,date:this.newPrice.date,price:this.newPrice.price,rrp:this.order.rrp,paid:!0}),this.$uibModalInstance.close(this.order)},CompleteOrdersController.prototype.cancel=function(){this.$uibModalInstance.dismiss("cancel")},CompleteOrdersController.controllerId="CompleteOrdersController",CompleteOrdersController.$inject=["$scope","$uibModalInstance","order"],CompleteOrdersController}();angular.module("orders").controller(CompleteOrdersController.controllerId,CompleteOrdersController);var CreateOrdersController=function(){function CreateOrdersController($scope,$stateParams,$location,Authentication,$q,Orders,Mangaitems,$uibModal,NotificationFactory){this.$scope=$scope,this.$stateParams=$stateParams,this.$location=$location,this.Authentication=Authentication,this.$q=$q,this.Orders=Orders,this.Mangaitems=Mangaitems,this.$uibModal=$uibModal,this.NotificationFactory=NotificationFactory,this.isCreateMode=void 0===this.$stateParams.orderId,this.order={},this.orderCopy={series:"",nextVolume:{volume:1,date:Date.now(),rrp:0,prices:[]},rrp:0,orderHistory:[]},this.authentication=this.Authentication,this.stepConfig={stepHeaders:[{text:"Set next order"},{text:"Set prices"}],currentStep:1,stepCount:2,items:[]},this.init()}return CreateOrdersController.prototype.init=function(){var _this=this;angular.copy(this.orderCopy,this.order),this.isCreateMode?(console.log("create mode"),this.Mangaitems.query().$promise.then(function(result){_this.stepConfig.items=result,console.log("items: ",result)})):(console.log("edit mode"),this.findOne()),console.log("init done: ")},CreateOrdersController.prototype.takeStep=function(step,direction){console.log("stepping: ",step,direction),this.stepConfig.currentStep=direction?step+1:step-1},CreateOrdersController.prototype.processOrder=function(){if(this.order.nextVolume.volume>0){var temp=angular.copy(this.order.nextVolume);this.order.orderHistory.push(this.order.nextVolume),this.order.nextVolume={volume:temp.volume+1,date:null,rrp:this.order.rrp,prices:[]},this.update()}},CreateOrdersController.prototype.cancel=function(){this.$location.path("orders")},CreateOrdersController.prototype.create=function(){var _this=this,order=new this.Orders({series:this.order.series._id,nextVolume:{date:this.order.nextVolume.date,volume:this.order.nextVolume.volume,rrp:this.order.nextVolume.rrp,prices:this.order.nextVolume.prices},rrp:this.order.rrp,orderHistory:this.order.orderHistory});order.$save(function(response){_this.$location.path("orders/"+response._id),_this.NotificationFactory.success("Saved!","New Order was successfully saved!"),angular.copy(_this.orderCopy,_this.order)},function(errorResponse){this.error=errorResponse.data.message,this.NotificationFactory.error("Error!","Order failed to save!")})},CreateOrdersController.prototype.update=function(){var _this=this,order=this.order;order.$update(function(){_this.$location.path("orders/"+order._id),_this.NotificationFactory.success("Saved!","Order was successfully saved!")},function(errorResponse){this.error=errorResponse.data.message,this.NotificationFactory.error("Error!","Order failed to save!")})},CreateOrdersController.prototype.openBoughtDialog=function(){var _this=this,modalInstance=this.$uibModal.open({animation:!0,templateUrl:"/modules/orders/views/complete-order.client.view.html",controller:"CompleteOrdersController as modal",size:"md",resolve:{order:function(){return _this.order}}});modalInstance.result.then(function(result){console.log(result),_this.order=result,_this.processOrder()})},CreateOrdersController.prototype.findOne=function(){this.order=this.Orders.get({orderId:this.$stateParams.orderId}),console.log("found one: ",this.order)},CreateOrdersController.controllerId="CreateOrdersController",CreateOrdersController.$inject=["$scope","$stateParams","$location","Authentication","$q","Orders","Mangaitems","$uibModal","NotificationFactory"],CreateOrdersController}();angular.module("orders").controller(CreateOrdersController.controllerId,CreateOrdersController);var OrderHistoryController=function(){function OrderHistoryController($scope,$uibModalInstance,order,$filter){this.$scope=$scope,this.$uibModalInstance=$uibModalInstance,this.order=order,this.$filter=$filter,this.processHistory()}return OrderHistoryController.prototype.processHistory=function(){var _this=this;angular.forEach(this.order.orderHistory,function(item){console.log("order history: ",item);for(var len=item.prices.length,i=0;len>i;i++)if(item.prices[i].paid){var cost=_this.$filter("number")(item.prices[i].price,2),rrp=_this.$filter("number")(item.prices[i].rrp,2);item.purchaseDate=item.prices[i].date,item.paid=cost,item.rrpInstance=rrp,item.saving=(cost/rrp*100).toFixed(2)}})},OrderHistoryController.prototype.cancel=function(){this.$uibModalInstance.dismiss("cancel")},OrderHistoryController.controllerId="OrderHistoryController",OrderHistoryController.$inject=["$scope","$uibModalInstance","order","$filter"],OrderHistoryController}();angular.module("orders").controller(OrderHistoryController.controllerId,OrderHistoryController);var OrdersController=function(){function OrdersController($scope,$stateParams,$location,Authentication,Orders,spinnerService,$uibModal){this.$scope=$scope,this.$stateParams=$stateParams,this.$location=$location,this.Authentication=Authentication,this.Orders=Orders,this.spinnerService=spinnerService,this.$uibModal=$uibModal,this.authentication=this.Authentication,this.order=void 0,this.orders=[],this.pageConfig={currentPage:0,pageSize:10},this.init()}return OrdersController.prototype.init=function(){console.log("init: ",this.$stateParams),this.$stateParams.orderId?(console.log("find one"),this.findOne()):(console.log("find all"),this.find())},OrdersController.prototype.remove=function(order){if(order){order.$remove();for(var i=0,length=this.order.length;length>i;i++)if(this.orders[i]===order)return void this.orders.splice(i,1)}else this.order.$remove(function(){this.$location.path("orders")})},OrdersController.prototype.find=function(){var _this=this;this.spinnerService.loading("orders",this.Orders.query().$promise.then(function(result){_this.orders=result}))},OrdersController.prototype.findOne=function(){var _this=this;this.spinnerService.loading("orders",this.Orders.get({orderId:this.$stateParams.orderId}).$promise.then(function(result){_this.order=result}))},OrdersController.prototype.openOrderHistoryDialog=function(){{var _this=this;this.$uibModal.open({animation:!0,templateUrl:"/modules/orders/views/order-history.client.view.html",controller:"OrderHistoryController as modal",size:"md",resolve:{order:function(){return _this.order}}})}},OrdersController.controllerId="OrdersController",OrdersController.$inject=["$scope","$stateParams","$location","Authentication","Orders","spinnerService","$uibModal"],OrdersController}();angular.module("orders").controller(OrdersController.controllerId,OrdersController),angular.module("orders").factory("Orders",["$resource",function($resource){return $resource("orders/:orderId",{orderId:"@_id"},{update:{method:"PUT"}})}]),angular.module("ratings").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/signin"),$stateProvider.state("ratings",{url:"/ratings",templateUrl:"modules/ratings/views/ratings.client.view.html"})}]),angular.module("ratings").controller("RatingsController",["$scope","$stateParams","$location","Authentication","Animeitems","Mangaitems","ListService","NotificationFactory","StatisticsService","spinnerService",function($scope,$stateParams,$location,Authentication,Animeitems,Mangaitems,ListService,NotificationFactory,StatisticsService,spinnerService){function getItems(view){"Anime"===view?spinnerService.loading("rating",Animeitems.query().$promise.then(function(result){ctrl.items=result})):"Manga"===view&&spinnerService.loading("rating",Mangaitems.query().$promise.then(function(result){ctrl.items=result})),ctrl.viewItem=void 0}var ctrl=this;ctrl.authentication=Authentication,ctrl.view="Anime",ctrl.pageConfig={currentPage:0,pageSize:20},ctrl.modelOptions={debounce:700},ctrl.sortType="rating",ctrl.sortReverse=!0,ctrl.viewItem=void 0,ctrl.ratingLevel=void 0,ctrl.maxRating=10,ctrl.hoveringOver=function(value){ctrl.overStar=value,ctrl.percent=100*(value/ctrl.maxRating)},ctrl.go=function(id){$location.path("/mangaitems/"+id)},ctrl.find=function(view){"Anime"===view||"Manga"===view?getItems(view):(ctrl.view="Anime",getItems(ctrl.view))},ctrl.itemScore=function(item,score){return item.rating!==score&&(item.rating=score,item.$update(function(){$location.path("ratings"),NotificationFactory.success("Saved!","New rating was saved successfully")},function(errorResponse){ctrl.error=errorResponse.data.message,NotificationFactory.error("Error!","Your change failed!")})),!1},ctrl.viewEpisodeRatings=function(item){ctrl.viewItem=ctrl.viewItem!==item?item:void 0,ctrl.isEqual=ctrl.viewItem===item?!0:!1,ctrl.search=ctrl.viewItem===item?item.title:"",void 0!==ctrl.viewItem&&spinnerService.loading("summary",StatisticsService.buildSummaryFunctions(ctrl.viewItem.meta.history).then(function(result){ctrl.summaryFunctions=result}))},ctrl.episodeScore=function(finished){if(finished){var item=ctrl.viewItem;item.$update(function(){$location.path("ratings"),NotificationFactory.success("Saved!","New episode rating was saved successfully"),spinnerService.loading("summary",StatisticsService.buildSummaryFunctions(ctrl.viewItem.meta.history).then(function(result){ctrl.summaryFunctions=result}))},function(errorResponse){ctrl.error=errorResponse.data.message,NotificationFactory.error("Error!","Your change failed!")})}}}]),angular.module("ratings").directive("focusOnShow",function($timeout){return function(scope,element,attrs){scope.$watch(attrs.focusOnShow,function(newValue){$timeout(function(){var myValue=newValue&&element[0].focus();return myValue})},!0)}}),angular.module("statistics").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/signin"),$stateProvider.state("statistics",{url:"/statistics",templateUrl:"modules/statistics/views/statistics.client.view.html"})}]),function(){function StatisticsController($scope,$stateParams,$location,Authentication,Animeitems,Mangaitems,Characters,Toptens,ListService,ItemService,CharacterService,StatisticsService,$filter,spinnerService){function getItemStatistics(view,items){"Anime"===view||"Manga"===view?(ctrl.overview=ItemService.buildOverview(items),ctrl.historyDetails.months=ItemService.completeByMonth(items),"Anime"===view&&(ctrl.historyDetails.seasons=ItemService.completeBySeason(items)),ctrl.ratingValues=ItemService.getRatingValues(items),ctrl.ratingsDistribution=ItemService.buildRatingsDistribution(items),ctrl.statTags=ItemService.buildStatTags(items,ctrl.ratingValues.averageRating)):"Character"===view?(ctrl.statTags=CharacterService.buildCharacterTags(items),ctrl.statSeries=CharacterService.buildSeriesList(items),ctrl.voiceActors=CharacterService.buildVoiceActors(items),CharacterService.buildGenderDistribution(ctrl.statTags,items.length).then(function(result){ctrl.gender=result,ctrl.gender[0].colour=ctrl.colours.red,ctrl.gender[1].colour=ctrl.colours.green,ctrl.gender[2].colour=ctrl.colours.blue})):"Topten"===view&&(StatisticsService.buildToptenModeList(items,ctrl.toptens.type).then(function(result){ctrl.toptens.detail.items=result.sort(function(a,b){return a.count<b.count?1:a.count>b.count?-1:0})}),console.log("topten stat process: ",items,ctrl.toptens))}function getItems(view){ctrl.detail.history="months",ctrl.filterConfig.search.tag="",ctrl.detail.isVisible=!1,ctrl.detail.isEpisodeRatings=!1,ctrl.statTags=[],ctrl.ratingsDistribution=[],"Anime"===view?(ctrl.filterConfig.sort.tag.type="ratingWeighted",0===ctrl.dataStore.anime.length?spinnerService.loading("items",Animeitems.query().$promise.then(function(result){ctrl.dataStore.anime=result,ctrl.items=result,getItemStatistics(view,result)})):(ctrl.items=ctrl.dataStore.anime,getItemStatistics(view,ctrl.dataStore.anime),console.log("from cache - anime"))):"Manga"===view?(ctrl.filterConfig.sort.tag.type="ratingWeighted",0===ctrl.dataStore.manga.length?spinnerService.loading("items",Mangaitems.query().$promise.then(function(result){ctrl.dataStore.manga=result,ctrl.items=result,getItemStatistics(view,result)})):(ctrl.items=ctrl.dataStore.manga,getItemStatistics(view,ctrl.dataStore.manga),console.log("from cache - anime"))):"Character"===view?(ctrl.filterConfig.sort.tag.type="count",0===ctrl.dataStore.character.length?spinnerService.loading("character",Characters.query().$promise.then(function(result){ctrl.dataStore.character=result,ctrl.items=result,getItemStatistics(view,result)})):(ctrl.items=ctrl.dataStore.character,getItemStatistics(view,ctrl.dataStore.character),console.log("from cache - character"))):"Topten"===view&&(void 0===ctrl.dataStore.toptens.anime.totalListCount?spinnerService.loading("topten",Toptens.query().$promise.then(function(result){return ListService.groupItemsByProperties(result,["type"])}).then(function(result){for(var i=0,type="";3>i;i++)type=result[i][0].type,ctrl.dataStore.toptens[type].items=result[i],ctrl.dataStore.toptens[type].totalListCount=result[i].length;return StatisticsService.buildToptenDataStructure(ctrl.toptens,result)}).then(function(result){ctrl.toptens=result,getItemStatistics(view,result[ctrl.toptens.type].items),console.log("topten arrays: ",ctrl.toptens)})):(getItemStatistics(view,ctrl.toptens[ctrl.toptens.type].items),console.log("from cache - topten"))),console.log("dataStore check: ",ctrl.dataStore)}function find(view){getItems(view)}function getToptenItemStatistics(view,toptenType){console.log("get topten stats: ",toptenType);var filteredItems=ctrl.dataStore.toptens[toptenType].items;ctrl.filterConfig.topten.isRanked&&(filteredItems=filter(filteredItems,{isRanked:!0})),ctrl.filterConfig.topten.isFavourite&&(filteredItems=filter(filteredItems,{isFavourite:!0})),console.log("post filtering: ",filteredItems),filteredItems.length>0?(ctrl.toptens[toptenType].items=[],StatisticsService.buildToptenDataStructure(ctrl.toptens,[filteredItems]).then(function(result){ctrl.toptens=result,console.log("topten data structure - result: ",result,ctrl.toptens),getItemStatistics(view,result[toptenType].items)})):(ctrl.toptens[toptenType].listCount=0,ctrl.toptens.detail.items=filteredItems)}function getSummaryFunctions(array){spinnerService.loading("detail",StatisticsService.buildSummaryFunctions(array).then(function(result){ctrl.historyDetails.summaryFunctions=result,console.log("got summary functions: ",ctrl.detail,ctrl.historyDetails)})),ctrl.detail.summary.isVisible===!0&&spinnerService.loading("detail",StatisticsService.buildYearSummary(array,ctrl.detail.year,ctrl.detail.summary.type).then(function(result){ctrl.historyDetails.yearSummary=result,console.log("got year summary: ",ctrl.detail,ctrl.historyDetails)})),ctrl.detail.isEpisodeRatings&&void 0===array[0].meta.episodeSummaryFunctions&&spinnerService.loading("detail",StatisticsService.buildEpisodeSummaries(array).then(function(result){console.log(array)}))}function historyDetail(year,division,divisionText,summaryType){ctrl.detail.isVisible=!0,ctrl.detail.year=year,ctrl.detail.division=division,ctrl.detail.divisionText=divisionText,ctrl.detail.summary.type=summaryType,ctrl.detail.summary.isVisible=void 0===summaryType?!1:!0,ctrl.getFilteredItems()}function tableDetail(type,name){ctrl.tableDetails[type]===name?(ctrl.filterConfig.search[type]="",ctrl.filterConfig.show[type]=!1,ctrl.tableDetails[type]="","tag"===type&&(ctrl.tableDetails.isEqual=!1)):(ctrl.filterConfig.search[type]=name,ctrl.tableDetails[type]=name,ctrl.filterConfig.show[type]=!0,"tag"===type&&(ctrl.tagDetailResult=CharacterService.buildRelatedCharacterTags(ctrl.items,name),ctrl.tableDetails.isEqual=!0))}function getFilteredItems(historyChange){historyChange&&(ctrl.detail.isVisible=!1,ctrl.detail.summary.isVisible=!1,"months"===ctrl.detail.history&&(ctrl.detail.isEpisodeRatings=!1));var filtered=$filter("statisticsDetailFilter")(ctrl.items,ctrl.detail.history,ctrl.detail.year,ctrl.detail.division);getSummaryFunctions(filtered)}function generateSeasons(){if("Anime"===ctrl.view){var array=ItemService.setSeason(ctrl.items,ctrl.detailSeasonYear,ctrl.detailSeason);angular.forEach(array,function(item){item.$update(function(){console.log(item)},function(errorResponse){ctrl.error=errorResponse.data.message})})}}var ctrl=this,filter=$filter("filter");ctrl.authentication=Authentication,ctrl.colours={red:"#c9302c",green:"#449d44",blue:"#31b0d5"},ctrl.commonArrays=ListService.getCommonArrays("statistics"),ctrl.dataStore={anime:[],manga:[],character:[],toptens:{anime:{},manga:{},character:{}}},ctrl.detail={isVisible:!1,year:"",division:"",divisionText:"",history:"months",summary:{type:"",isVisible:!1},isEpisodeRatings:!1},ctrl.filterConfig={show:{tag:!1,series:!1,voice:!1},sort:{episodeRating:{type:"title",reverse:!1},tag:{type:"ratingWeighted",reverse:!0},tagDetail:{type:"count",reverse:!0},series:{type:"count",reverse:!0},voice:{type:"count",reverse:!0},topten:{type:"count",reverse:!0}},search:{tag:"",tagDetail:"",series:"",voice:"",topten:""},topten:{isRanked:!1,isFavourite:!1}},ctrl.find=find,ctrl.gender={},ctrl.generateSeasons=generateSeasons,ctrl.getFilteredItems=getFilteredItems,ctrl.getToptenItemStatistics=getToptenItemStatistics,ctrl.historyDetail=historyDetail,ctrl.historyDetails={},ctrl.overview={},ctrl.ratingsDistribution=[],ctrl.statSeries=[],ctrl.statTags=[],ctrl.tableDetail=tableDetail,ctrl.tableDetails={},ctrl.taglessItem=!1,ctrl.toptens={type:"anime",anime:{listCount:0,items:[]},manga:{listCount:0,items:[]},character:{listCount:0,items:[]},detail:{items:[]}},ctrl.view="Anime",ctrl.voiceActors=[]}angular.module("statistics").controller("StatisticsController",StatisticsController),StatisticsController.$inject=["$scope","$stateParams","$location","Authentication","Animeitems","Mangaitems","Characters","Toptens","ListService","ItemService","CharacterService","StatisticsService","$filter","spinnerService"]}(),angular.module("statistics").directive("tabContainer",function(){return{restrict:"A",transclude:!0,replace:!0,scope:{model:"=ngModel"},templateUrl:"/modules/statistics/templates/tab-container.html",require:"?ngModel",bindToController:!0,controllerAs:"tabContainer",controller:function($scope){var self=this;self.tabs=[],self.currentTab=void 0,self.listShift=0,self.addTab=function(tab){self.tabs.push(tab),1===self.tabs.length&&(tab.active=!0)},self.disable=function(disabledTab){disabledTab.active&&angular.forEach(self.tabs,function(tab){return tab.disabled?void 0:void self.select(tab)})},self.select=function(selectedTab){selectedTab.disabled||(angular.forEach(self.tabs,function(tab){tab.active&&tab!==selectedTab&&(tab.active=!1)}),selectedTab.active=!0,self.currentTab=void 0===$scope.tabContainer.model?void 0:selectedTab.heading)},self.shiftTabs=function(direction){switch(direction){case"origin":self.listShift+100>0?self.listShift=0:self.listShift+=100;break;case"offset":self.listShift-100<$scope.elWidth-$scope.ulWidth?self.listShift=$scope.elWidth-$scope.ulWidth:self.listShift-=100}}},link:function(scope,element,attrs,model){var el=element[0],ul=el.children[0].children[0];scope.elWidth=el.offsetWidth,scope.ulWidth=ul.offsetWidth,scope.$watch("tabContainer.currentTab",function(newValue){void 0!==newValue&&void 0!==model.$viewValue&&model.$setViewValue(newValue)}),scope.$watch(function(){return{width:el.offsetWidth}},function(){scope.elWidth=el.offsetWidth},!0),scope.$watch(function(){return{width:ul.offsetWidth}},function(){scope.ulWidth=ul.offsetWidth},!0),scope.$watch("tabContainer.listShift",function(newValue){if(void 0!==newValue){var shift=0===newValue?"":"px";ul.style.left=newValue+shift}})}}}).directive("tabView",function(){return{restrict:"A",transclude:!0,replace:!0,template:'<div class="tab-view" role="tabpanel" ng-show="active" ng-transclude></div>',require:"^tabContainer",scope:{heading:"@",disabled:"="},link:function(scope,element,attrs,tabContainerCtrl){scope.active=!1,tabContainerCtrl.addTab(scope),scope.$watch("disabled",function(newValue){void 0!==newValue&&newValue&&(console.log(scope.heading,newValue),tabContainerCtrl.disable(scope))})}}}).directive("detectFlood",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attrs){function overflowCheck(){el.scrollWidth>el.offsetWidth?el.classList.add("flooded"):el.classList.remove("flooded")}var el=element[0];overflowCheck(),scope.$watch(function(){return{width:el.offsetWidth}},function(){overflowCheck()},!0)}}}]).directive("percentageBarContainer",function(){return{restrict:"A",replace:!0,scope:{border:"@?"},transclude:!0,bindToController:!0,template:'<div class="relative {{percentageBarContainer.border}}" style="height: 20px;" ng-transclude></div>',controllerAs:"percentageBarContainer",controller:function($scope){}}}).directive("percentageBar",function(){return{restrict:"A",replace:!0,scope:{type:"@?",percentage:"@",colour:"@?",display:"@?"},require:"^percentageBarContainer",templateUrl:"/modules/statistics/templates/percentage-bar.html",link:function(scope,element,attrs,percentageBarContainerCtrl){}}}),angular.module("statistics").service("StatisticsService",["$filter","ListService","$q",function($filter,ListService,$q){function processYearSummary(summary,array){var i=array.length;if(summary.length<1){for(;i--;)summary.push({metric:array[i].metric,values:[]});summary.reverse()}i=array.length;for(var j=0;i>j;j++)summary[j].values.push({value:array[j].value});return summary}var self=this;this.buildSummaryFunctions=function(array){return $q(function(resolve,reject){if(void 0!==array){for(var i=array.length,highestRating=0,lowestRating=10,averageRating=0,modeRating={},ratings={count:0,sum:0};i--;)highestRating=array[i].rating>highestRating?array[i].rating:highestRating,lowestRating=0<array[i].rating&&array[i].rating<lowestRating?array[i].rating:lowestRating,ratings.count+=array[i].rating>0?1:0,ratings.sum+=array[i].rating,averageRating=(ratings.sum/ratings.count).toFixed(2),modeRating=self.getModeMap(array,"rating",0);resolve([{metric:"Average rating",value:averageRating},{metric:"Highest rating",value:highestRating},{metric:"Lowest rating",value:10===lowestRating?0:lowestRating},{metric:"Mode rating",value:void 0===modeRating.value?0:modeRating.value}])}})},this.buildYearSummary=function(array,year,type){return $q(function(resolve,reject){
for(var filter="months"===type?"endedMonth":"season",attr="months"===type?"number":"text",commonArrays=ListService.getCommonArrays(),i=commonArrays[type].length,yearSummary=[],results=[],j=0;i>j;j++){var filteredArray=$filter(filter)(array,year,commonArrays[type][j][attr]),promise=self.buildSummaryFunctions(filteredArray);results.push(promise)}angular.forEach(results,function(promise){promise.then(function(result){yearSummary=processYearSummary(yearSummary,result)})}),resolve(yearSummary)})},this.buildEpisodeSummaries=function(array){return $q(function(resolve,reject){angular.forEach(array,function(item){self.buildSummaryFunctions(item.meta.history).then(function(result){item.meta.episodeSummaryFunctions=result})}),resolve(array)})},this.getModeMap=function(array,attr,ignore){for(var modeMap={},max={count:0,value:""},i=0;i<array.length;i++){var value=array[i][attr];null===modeMap[value]||void 0===modeMap[value]?modeMap[value]=1:modeMap[value]++,modeMap[value]>max.count&&ignore!==value&&(max.count=modeMap[value],max.value=value)}return max},this.occuranceCounter=function(array,attr){return $q(function(resolve,reject){var occuranceCounter=[];ListService.groupItemsByProperties(array,[attr]).then(function(result){for(var i=0,len=result.length;len>i;i++)occuranceCounter.push({value:result[i][0][attr],count:result[i].length})}),resolve(occuranceCounter)})},this.buildToptenDataStructure=function(obj,arrayOfArrays){return $q(function(resolve,reject){angular.forEach(arrayOfArrays,function(array){var type=array[0].type,listType=type+"List",len=array.length;obj[type].listCount=len;for(var i=0;len>i;i++)for(var itemLen=array[i][listType].length,j=0;itemLen>j;j++)obj[type].items.push(array[i][listType][j])}),resolve(obj)})},this.buildToptenModeList=function(array,type){var attr="character"===type?"name":"title";return self.occuranceCounter(array,attr)}}]),angular.module("tasks").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTasks",{url:"/tasks",templateUrl:"modules/tasks/views/list-tasks.client.view.html"}).state("createTask",{url:"/tasks/create",templateUrl:"modules/tasks/views/create-task.client.view.html"}).state("viewTask",{url:"/tasks/:taskId",templateUrl:"modules/tasks/views/view-task.client.view.html"}).state("editTask",{url:"/tasks/:taskId/edit",templateUrl:"modules/tasks/views/edit-task.client.view.html"})}]),function(){function CreateTaskController($scope,data,$stateParams,$location,Authentication,Tasks,ListService,NotificationFactory,TaskFactory,spinnerService,$uibModalInstance,Animeitems,Mangaitems){function setNewTask(){ctrl.newTask={description:"",link:{linked:!1,type:"",anime:void 0,manga:void 0},day:"",date:new Date,repeat:0,category:"",daily:!1,checklist:!1,checklistItems:[],isAddTask:!1}}function addChecklistItem(){if(""!==ctrl.newTask.checklistItem&&void 0!==ctrl.newTask.checklistItem){var i=0,alreadyAdded=!1;if(ctrl.newTask.checklistItems.length>0){for(;i<ctrl.newTask.checklistItems.length;)ctrl.newTask.checklistItems[i].text===ctrl.newTask.checklistItem&&(alreadyAdded=!0),i++;alreadyAdded===!1&&ctrl.newTask.checklistItems.push({text:ctrl.newTask.checklistItem,complete:!1})}else ctrl.newTask.checklistItems.push({text:ctrl.newTask.checklistItem,complete:!1})}ctrl.newTask.checklistItem=""}function dropChecklistItem(text){var deletingItem=ctrl.newTask.checklistItems;ctrl.newTask.checklistItems=[],angular.forEach(deletingItem,function(item){item.text!==text&&ctrl.newTask.checklistItems.push(item)})}function create(){var task=new Tasks({description:ctrl.newTask.description,link:{linked:ctrl.newTask.link.linked,type:ctrl.newTask.link.linked===!1?"":"Watch"===ctrl.newTask.category?"anime":"manga",anime:void 0===ctrl.newTask.link.anime?void 0:ctrl.newTask.link.anime._id,manga:void 0===ctrl.newTask.link.manga?void 0:ctrl.newTask.link.manga._id},day:ctrl.newTask.daily===!0?"Any":ctrl.newTask.day,date:""===ctrl.newTask.date?new Date:ctrl.newTask.date,repeat:ctrl.newTask.link.linked===!1?ctrl.newTask.repeat:"Watch"===ctrl.newTask.category?ctrl.newTask.link.anime.finalEpisode:1,completeTimes:ctrl.newTask.link.linked===!1?0:"Watch"===ctrl.newTask.category?ctrl.newTask.link.anime.episodes:0,updateCheck:1===(new Date).getDay()?!0:!1,complete:!1,category:""===ctrl.newTask.category?"Other":ctrl.newTask.category,daily:ctrl.newTask.daily,checklist:ctrl.newTask.checklist,checklistItems:ctrl.newTask.checklistItems});task.$save(function(response){$location.path("tasks"),NotificationFactory.success("Saved!","New Task was successfully saved!")},function(errorResponse){ctrl.error=errorResponse.data.message,console.log(errorResponse),NotificationFactory.error("Error!","New Task failed to save!")})}function backStep(step){ctrl.stepConfig.currentStep-=1}function takeStep(step){var check=process(step);check.valid?ctrl.stepConfig.currentStep+=1:NotificationFactory.popup("Attention!",check.message,"warning")}function submit(){ctrl.create(),$uibModalInstance.close()}function cancel(){$uibModalInstance.dismiss()}function process(step){switch(step){case 1:if(ctrl.newTask.link.linked===!0){var category=ctrl.newTask.category;if("Watch"===category)ctrl.linkItems=Animeitems.query({status:0}),ctrl.linkType="anime",ctrl.newTask.checklistItems=[],ctrl.newTask.checklist=!1;else{if("Read"!==category)return{valid:!1,message:"Category must be either Watch or Read for linked items!"};ctrl.linkItems=Mangaitems.query({status:0}),ctrl.linkType="manga"}}else ctrl.linkType="",ctrl.newTask.link.anime=void 0,ctrl.newTask.link.manga=void 0;return{valid:!0}}}var ctrl=this,newTaskModel={};ctrl.addChecklistItem=addChecklistItem,ctrl.backStep=backStep,ctrl.cancel=cancel,ctrl.commonArrays=data.commonArrays,ctrl.create=create,ctrl.dropChecklistItem=dropChecklistItem,ctrl.stepConfig={currentStep:1,stepCount:2},ctrl.submit=submit,ctrl.takeStep=takeStep,setNewTask(),angular.copy(ctrl.newTask,newTaskModel)}angular.module("tasks").controller("CreateTaskController",CreateTaskController),CreateTaskController.$inject=["$scope","data","$stateParams","$location","Authentication","Tasks","ListService","NotificationFactory","TaskFactory","spinnerService","$uibModalInstance","Animeitems","Mangaitems"]}(),function(){function ScheduleCalendarTaskController($scope,$uibModalInstance,moment,data,ListService,TaskFactory){function init(){var weekEnds=new Date(ListService.weekEndingForDate(ctrl.date));angular.forEach(data.events,function(event){new Date(event.date)<weekEnds&&(event.day.substring(0,3)===ctrl.days[ctrl.day].text||"Any"===event.day)&&(event.daily?event.daily&&(event.completeTimes+ctrl.daysFromToday<=event.repeat||0===event.repeat)&&ctrl.events.push(event):(event.completeTimes+Math.floor(ctrl.daysFromToday/7)<=event.repeat||0===event.repeat)&&ctrl.events.push(event))}),ctrl.events.sort(function(a,b){var aDate=a.date,bDate=b.date;return bDate>aDate?1:aDate>bDate?-1:0})}function removeTask(task){TaskFactory.removeTask(task,ctrl.events,!0)}function updateTask(task){TaskFactory.updateTask(task)}function insertChecklistItem(task,newChecklistItem){TaskFactory.insertChecklistItem(task,newChecklistItem)}function tickOff(task){TaskFactory.tickOff(task).then(function(result){refresh=result.refresh})}function tickOffChecklist(task,index){TaskFactory.tickOffChecklist(task,index).then(function(result){refresh=result.refresh})}function cancel(){$uibModalInstance.close(refresh)}var ctrl=this,refresh=!1,timeDiff=Math.abs(new Date(data.date).getTime()-(new Date).getTime());ctrl.cancel=cancel,ctrl.date=new Date(data.date),ctrl.day=ctrl.date.getDay()>0?ctrl.date.getDay()-1:6,ctrl.days=data.days,ctrl.daysFromToday=Math.ceil(timeDiff/864e5),ctrl.events=[],ctrl.init=init,ctrl.insertChecklistItem=insertChecklistItem,ctrl.removeTask=removeTask,ctrl.tickOff=tickOff,ctrl.tickOffChecklist=tickOffChecklist,ctrl.today=new Date,ctrl.updateTask=updateTask,console.log("data: ",data,"days: ",ctrl.days,ctrl.day,ctrl.date),ctrl.init()}angular.module("tasks").controller("ScheduleCalendarTaskController",ScheduleCalendarTaskController),ScheduleCalendarTaskController.$inject=["$scope","$uibModalInstance","moment","data","ListService","TaskFactory"]}(),function(){function TasksController($scope,$timeout,$stateParams,$location,Authentication,Tasks,ListService,NotificationFactory,TaskFactory,spinnerService,$uibModal,moment){function tabFilter(tabName){ctrl.filterConfig.search.day=tabName}function weekBeginning(){return TaskFactory.getWeekBeginning()}function createTask(){$uibModal.open({animation:!0,templateUrl:"/modules/tasks/views/create-task.client.view.html",controller:"CreateTaskController as taskCreate",size:"lg",resolve:{data:function(){return{commonArrays:ctrl.commonArrays}}}}).result.then(function(result){console.log("closed create task: ",result),find()})}function removeTask(task){TaskFactory.removeTask(task,ctrl.tasks,!0)}function updateTask(task){TaskFactory.updateTask(task)}function insertChecklistItem(task,newChecklistItem){TaskFactory.insertChecklistItem(task,newChecklistItem)}function tickOff(task){TaskFactory.tickOff(task).then(function(result){result.refresh&&find()})}function tickOffChecklist(task,index){TaskFactory.tickOffChecklist(task,index).then(function(result){result.refresh&&find()})}function setTabFilterDay(day){var index=0===day?7:day;ctrl.filterConfig.search.day=ctrl.commonArrays.days[index].name,console.log(day,ctrl.filterConfig.search.day)}function checkStatus(){1===day?(console.log("monday",day),angular.forEach(ctrl.tasks,function(task){if(task.updateCheck===!1){console.log("updating - ",task.description);var type=task.link.type;if(task.link.linked===!1||"manga"===type)task.completeTimes!==task.repeat?(console.log("not complete",task.description),task.complete=!1,task.updateCheck=!0,TaskFactory.updateTask(task)):task.completeTimes===task.repeat&&(console.log("complete - delete",task.description),TaskFactory.removeTask(task,ctrl.tasks));else if("anime"===task.link.type){console.log("linked");var parts={single:"episodes",all:"finalEpisode"};task.link[type][parts.single]!==task.link[type][parts.all]?(console.log("linked not complete",task.description),task.complete=!1,task.updateCheck=!0,TaskFactory.updateTask(task)):task.link[type][parts.single]===task.link[type][parts.all]&&(console.log("linked complete - delete",task.description),TaskFactory.removeTask(task,ctrl.tasks))}}})):(console.log("not monday",day),angular.forEach(ctrl.tasks,function(task){var change=task.updateCheck===!1?!1:!0;if(task.updateCheck=!1,task.daily===!0)if(console.log("daily",task.description),task.completeTimes!==task.repeat){console.log("not complete",task.description);var refresh=today.toISOString().slice(0,10);task.dailyRefresh.slice(0,10)!==refresh&&(console.log("not complete - update",task.description),task.complete=!1,task.dailyRefresh=refresh,TaskFactory.updateTask(task))}else task.completeTimes===task.repeat&&(console.log("complete - delete",task.description),TaskFactory.removeTask(task,ctrl.tasks));else task.daily===!1&&change&&(console.log("weekly update: ",task.description),TaskFactory.updateTask(task))})),find()}function find(check){$timeout(function(){spinnerService.loading("tasks",Tasks.query().$promise.then(function(result){console.log("found! : ",result),ctrl.tasks=result,check===!0&&checkStatus()}))},250)}function refreshItems(){find(),NotificationFactory.warning("Refreshed!","Task list refreshed!")}var ctrl=this,today=new Date,day=today.getDay();ctrl.authentication=Authentication,ctrl.commonArrays=ListService.getCommonArrays(),ctrl.createTask=createTask,ctrl.dateOptions={dateDisabled:!1,formatYear:"yy",maxDate:new Date(2020,5,22),minDate:new Date,startingDay:1},ctrl.filterConfig={view:"list",showingCount:0,sortType:"",sortReverse:!0,search:{description:"",day:""},datesSelected:!1},ctrl.insertChecklistItem=insertChecklistItem,ctrl.pageConfig={currentPage:0,pageSize:10},ctrl.refreshItems=refreshItems,ctrl.removeTask=removeTask,ctrl.setTabFilterDay=setTabFilterDay,ctrl.tabFilter=tabFilter,ctrl.tickOff=tickOff,ctrl.tickOffChecklist=tickOffChecklist,ctrl.updateTask=updateTask,ctrl.weekBeginning=weekBeginning,ctrl.whichController="task",ctrl.setTabFilterDay(day),find(!0)}angular.module("tasks").controller("TasksController",TasksController),TasksController.$inject=["$scope","$timeout","$stateParams","$location","Authentication","Tasks","ListService","NotificationFactory","TaskFactory","spinnerService","$uibModal","moment"]}(),function(){function UpdateMangaTaskController($scope,$uibModalInstance,data){function submit(){$uibModalInstance.close(ctrl.item)}function cancel(){$uibModalInstance.dismiss("cancel")}var ctrl=this;ctrl.cancel=cancel,ctrl.item=data.item,ctrl.stepConfig={currentStep:1,stepCount:1},ctrl.submit=submit,console.log("update linked manga item: ",ctrl.item)}angular.module("tasks").controller("UpdateMangaTaskController",UpdateMangaTaskController),UpdateMangaTaskController.$inject=["$scope","$uibModalInstance","data"]}(),function(){function loseInterest($document,$window){return{restrict:"A",link:function(scope,element,attrs){element.data("interesting",!0),angular.element($document[0].body).on("click",function(e){var interesting=angular.element(e.target).inheritedData("interesting"),elm=angular.element(e.target)[0].tagName,alsoInteresting="A"===elm||"I"===elm;interesting||alsoInteresting||scope.$apply(function(){scope.collapseFilters()})})}}}angular.module("tasks").directive("loseInterest",loseInterest)}(),function(){function scheduleCalendar($uibModal,moment,ListService){function _removeTime(date){return date.day(1).hour(12).minute(0).second(0).millisecond(0)}function _buildMonth(scope,start,month){scope.weeks=[];for(var done=!1,date=moment(start),monthIndex=date.month(),count=0;!done;){var days=_buildWeek(moment(date),month);ListService.findWithAttr(days,"isCurrentMonth",!0)>-1&&scope.weeks.push({days:days}),date.add(1,"w"),done=count++>2&&monthIndex!==date.month(),monthIndex=date.month()}}function _buildWeek(date,month){for(var days=[],i=0;7>i;i++)days.push({name:date.format("dd").substring(0,1),number:date.date(),isCurrentMonth:date.month()===month.month(),isToday:date.isSame(new Date,"day"),date:date}),date=moment(date),date.add(1,"d");return days}function _displayEvents(events,date,days){$uibModal.open({animation:!0,templateUrl:"/modules/tasks/views/schedule-calendar-task.client.view.html",controller:"ScheduleCalendarTaskController as ctrl",size:"lg",resolve:{data:function(){return{events:events,date:date,days:days}}}}).result.then(function(result){console.log("closed - require refresh: ",result)})}return{restrict:"A",templateUrl:"modules/tasks/templates/schedule-calendar.html",scope:{events:"="},link:function(scope){scope.days=[{text:"Mon"},{text:"Tue"},{text:"Wed"},{text:"Thu"},{text:"Fri"},{text:"Sat"},{text:"Sun"}],scope.selected=moment(new Date),scope.month=moment(scope.selected);var start=moment(_removeTime(angular.copy(scope.selected)));start.date(-6),_removeTime(start.day(0)),_buildMonth(scope,start,scope.month),scope.select=function(day){scope.selected===day.date&&_displayEvents(scope.events,day.date,scope.days),scope.selected=day.date},scope.next=function(){var next=moment(scope.month);_removeTime(next.month(next.month()+1).date(0)),scope.month.month(scope.month.month()+1),_buildMonth(scope,next,scope.month)},scope.previous=function(){var previous=moment(scope.month);_removeTime(previous.month(previous.month()-1).date(0)),scope.month.month(scope.month.month()-1),_buildMonth(scope,previous,scope.month)}}}}angular.module("tasks").directive("scheduleCalendar",scheduleCalendar),scheduleCalendar.$inject=["$uibModal","moment","ListService"]}(),function(){function shadowModel(){return{scope:!0,link:function(scope,el,att){console.log("shadow: ",scope),scope[att.shadow]=angular.copy(scope[att.shadow])}}}angular.module("tasks").directive("shadowModel",shadowModel)}(),function(){function taskItemModel(){return{restrict:"A",replace:!0,templateUrl:"modules/tasks/templates/task-item.html"}}angular.module("tasks").directive("taskItemModel",taskItemModel)}(),function(){function passClick(){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(event){var passTo=document.getElementById(attrs.passClick);passTo.focus(),passTo.click()})}}}angular.module("tasks").directive("passClick",passClick)}(),function(){function TaskFactory($q,Animeitems,Mangaitems,AnimeFactory,MangaFactory,NotificationFactory,ListService,$uibModal){function removeTaskProcess(task,tasks){if(task){task.$remove();for(var i in tasks)tasks[i]===task&&tasks.splice(i,1);NotificationFactory.warning("Deleted!","Task was successfully deleted.")}}function launchMangaUpdateDialog(task,checklistIndex){var modalInstance=$uibModal.open({animation:!0,templateUrl:"/modules/tasks/views/update-manga-task.client.view.html",controller:"UpdateMangaTaskController as ctrl",size:"lg",resolve:{data:function(){return{item:angular.copy(task),itemOriginal:task}}}});return modalInstance}var obj={};return obj.getWeekBeginning=function(){var newDate=new Date,day=newDate.getDay(),diff=newDate.getDate()-day+(0===day?-6:1),wkBeg=new Date;return new Date(wkBeg.setDate(diff))},obj.updateAnimeitem=function(task){var query=Animeitems.get({animeitemId:task.link.anime._id});query.$promise.then(function(data){data.episodes+=1,data.latest=new Date,AnimeFactory.update(data,void 0,!0,void 0)})},obj.updateMangaitem=function(task,chapters,volumes){return $q(function(resolve,reject){var query=Mangaitems.get({mangaitemId:task.link.manga._id});query.$promise.then(function(data){data.chapters=chapters,data.volumes=volumes,data.latest=new Date,MangaFactory.update(data,void 0,!0,void 0),resolve(data)})})},obj.updateTask=function(task,refresh){return $q(function(resolve,reject){task.link.anime?task.link.anime=task.link.anime._id:task.link.manga&&(task.link.manga=task.link.manga._id),task.$update(function(){NotificationFactory.success("Saved!","Task was successfully updated!"),console.log("update, refresh items ? ",refresh),resolve({refresh:refresh})},function(errorResponse){var errorMessage=errorResponse.data.message;reject(errorMessage),NotificationFactory.error("Error!","Task failed to save!")})})},obj.removeTask=function(task,tasks,userCheck){userCheck?NotificationFactory.confirmation(function(){removeTaskProcess(task,tasks)}):removeTaskProcess(task,tasks)},obj.tickOff=function(task){return $q(function(resolve,reject){var isLinked=task.link.linked;if(isLinked){if(isLinked)if("anime"===task.link.type)task.completeTimes=task.link.anime.episodes+1,task.repeat=task.link.anime.finalEpisode,obj.updateAnimeitem(task);else if("manga"===task.link.type){task.complete=!1;var dialog=launchMangaUpdateDialog(task);dialog.result.then(function(result){task=result,task.completeTimes+=1,task.complete=!0,obj.updateMangaitem(task,task.link.manga.chapters,task.link.manga.volumes).then(function(result){return console.log("updated manga: ",result),obj.updateTask(task,!0)}).then(function(result){console.log("update manga into update task: ",result),resolve(result)})})}}else task.completeTimes+=1;(!isLinked||isLinked&&"anime"===task.link.type)&&obj.updateTask(task,isLinked).then(function(result){console.log("update task resolve: ",result),resolve(result)})})},obj.tickOffChecklist=function(task,index){return $q(function(resolve,reject){var isLinked=task.link.linked;if(isLinked&&"manga"===task.link.type){task.checklistItems[index].complete=!1;var dialog=launchMangaUpdateDialog(task,index);dialog.result.then(function(result){task=result,task.checklistItems[index].complete=!0,-1===ListService.findWithAttr(task.checklistItems,"complete",!1)&&(task.completeTimes+=1,task.complete=!0),obj.updateMangaitem(task,task.link.manga.chapters,task.link.manga.volumes).then(function(result){return console.log("updated manga: ",result),obj.updateTask(task,!0)}).then(function(result){console.log("update manga into update task: ",result),resolve(result)})})}else isLinked||(-1===ListService.findWithAttr(task.checklistItems,"complete",!1)&&(task.completeTimes+=1,task.complete=!0),obj.updateTask(task,isLinked).then(function(result){console.log("update task resolve: ",result),resolve(result)}))})},obj.insertChecklistItem=function(task,newChecklistItem){if(""!==newChecklistItem&&void 0!==newChecklistItem){var alreadyAdded=!1;angular.forEach(task.checklistItems,function(item){item===newChecklistItem&&(alreadyAdded=!0)}),alreadyAdded===!1?task.checklistItems.push({text:newChecklistItem,complete:!1}):alreadyAdded===!0&&NotificationFactory.popup("Option already exists.","Please re-name and try again.","error")}this.updateTask(task)},obj}angular.module("tasks").factory("TaskFactory",TaskFactory),TaskFactory.$inject=["$q","Animeitems","Mangaitems","AnimeFactory","MangaFactory","NotificationFactory","ListService","$uibModal"]}(),function(){function Tasks($resource){return $resource("tasks/:taskId",{taskId:"@_id"},{update:{method:"PUT"}})}angular.module("tasks").factory("Tasks",Tasks),Tasks.$inject=["$resource"]}(),angular.module("toptens").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Toptens","toptens","dropdown","/toptens(/create)?"),Menus.addSubMenuItem("topbar","toptens","List Toptens","toptens"),Menus.addSubMenuItem("topbar","toptens","New Topten","toptens/create")}]),angular.module("toptens").config(["$stateProvider",function($stateProvider){$stateProvider.state("listToptens",{url:"/toptens",templateUrl:"modules/toptens/views/list-toptens.client.view.html"}).state("createTopten",{url:"/toptens/create",templateUrl:"modules/toptens/views/create-topten.client.view.html"}).state("viewTopten",{url:"/toptens/:toptenId",templateUrl:"modules/toptens/views/view-topten.client.view.html"}).state("editTopten",{url:"/toptens/:toptenId/edit",templateUrl:"modules/toptens/views/create-topten.client.view.html"})}]),function(){function CreateToptenController($scope,$stateParams,$location,Authentication,Toptens,ListService,Animeitems,Mangaitems,Characters,NotificationFactory,CharacterService,ItemService,$filter){function create(){var topten=new Toptens;topten=new Toptens({name:ctrl.topten.name,description:ctrl.topten.description,type:ctrl.topten.type,isFavourite:ctrl.topten.isFavourite,isRanked:ctrl.topten.isRanked,animeList:ctrl.topten.animeList.length>0?ctrl.topten.animeList:null,characterList:ctrl.topten.characterList.length>0?ctrl.topten.characterList:null,mangaList:ctrl.topten.mangaList.length>0?ctrl.topten.mangaList:null,conditions:{limit:ctrl.topten.conditions.limit,series:ctrl.topten.conditions.series,tags:ctrl.topten.conditions.tags,season:ctrl.topten.conditions.season,year:ctrl.topten.conditions.year}}),topten.$save(function(response){$location.path("toptens/"+response._id),NotificationFactory.success("Saved!","New List was successfully saved!"),angular.copy(toptenCopy,ctrl.topten)},function(errorResponse){ctrl.error=errorResponse.data.message,NotificationFactory.error("Error!","Something went wrong!")})}function update(){var topten=ctrl.topten;topten.$update(function(){$location.path("toptens/"+topten._id),NotificationFactory.success("Updated!","List update was successful!")},function(errorResponse){ctrl.error=errorResponse.data.message,NotificationFactory.error("Error!","Something went wrong!")})}function typeSetItemPopulate(){var type=ListService.manipulateString(ctrl.topten.type,"upper",!0);switch(type){case"Anime":Animeitems.query().$promise.then(function(result){ctrl.stepConfig.listGen.items=result,ctrl.stepConfig.listGen.typeDisplay="title",ctrl.stepConfig.listGen.tags=CharacterService.buildCharacterTags(result),ctrl.years=ItemService.endingYears(result)});break;case"Manga":Mangaitems.query().$promise.then(function(result){ctrl.stepConfig.listGen.items=result,ctrl.stepConfig.listGen.typeDisplay="title",ctrl.stepConfig.listGen.tags=CharacterService.buildCharacterTags(result)});break;case"Character":Characters.query().$promise.then(function(result){ctrl.stepConfig.listGen.items=result,ctrl.stepConfig.listGen.typeDisplay="name",ctrl.stepConfig.listGen.tags=CharacterService.buildCharacterTags(result),ctrl.stepConfig.listGen.series=CharacterService.buildSeriesList(result);var getYears=[];angular.forEach(result,function(item){item.anime&&getYears.push(item.anime)}),ctrl.years=ItemService.endingYears(getYears)})}}function process(number,direction,callback){switch(number){case 1:""!==ctrl.topten.type&&ctrl.isCreate?(typeSetItemPopulate(),callback()):""===ctrl.topten.type||ctrl.isCreate?""===ctrl.topten.type&&NotificationFactory.popup("Invalid form","You MUST select a type to continue.","error"):(ctrl.stepConfig.listGen.displayList.length<1&&(angular.forEach(ctrl.topten[ctrl.topten.type+"List"],function(item){var index=ListService.findWithAttr(ctrl.stepConfig.listGen.items,"_id",item._id);ctrl.stepConfig.listGen.displayList.push(ctrl.stepConfig.listGen.items[index])}),ctrl.stepConfig.limitMin=ctrl.stepConfig.listGen.displayList.length),callback());break;case 2:if(direction){var length,i=0,j=0;if(angular.copy(ctrl.stepConfig.listGen.items,ctrl.stepConfig.listGen.itemsCached),"anime"===ctrl.topten.type)if(ctrl.topten.conditions.season){if(!ctrl.topten.conditions.year){NotificationFactory.popup("Invalid form","A year MUST be selected when selecting a season.","error");break}ctrl.stepConfig.listGen.items=$filter("season")(ctrl.stepConfig.listGen.items,ctrl.topten.conditions.year,ctrl.topten.conditions.season)}else ctrl.topten.conditions.year&&(ctrl.stepConfig.listGen.items=$filter("filter")(ctrl.stepConfig.listGen.items,{season:{year:ctrl.topten.conditions.year}}));else if("character"===ctrl.topten.type)if(ctrl.topten.conditions.season){if(!ctrl.topten.conditions.year){NotificationFactory.popup("Invalid form","A year MUST be selected when selecting a season.","error");break}ctrl.stepConfig.listGen.items=$filter("seasonForCharacterAnime")(ctrl.stepConfig.listGen.items,ctrl.topten.conditions.year,ctrl.topten.conditions.season)}else ctrl.topten.conditions.year&&(ctrl.stepConfig.listGen.items=$filter("filter")(ctrl.stepConfig.listGen.items,{anime:{season:{year:ctrl.topten.conditions.year}}}));if(ctrl.topten.conditions.series.length>0)for(i=ctrl.stepConfig.listGen.items.length;i--;){var remove=!0,attr=null!==ctrl.stepConfig.listGen.items[i].anime?"anime":null!==ctrl.stepConfig.listGen.items[i].anime?"manga":null;if(length=ctrl.topten.conditions.series.length,null!==attr){for(j=0;length>j;j++){var series=ctrl.topten.conditions.series[j];ctrl.stepConfig.listGen.items[i][attr].title.indexOf(series.name)>-1&&(remove=!1)}remove&&ctrl.stepConfig.listGen.items.splice(i,1)}else ctrl.stepConfig.listGen.items.splice(i,1)}if(ctrl.topten.conditions.tags.length>0)for(i=ctrl.stepConfig.listGen.items.length;i--;){var count=0;if(length=ctrl.topten.conditions.tags.length,ctrl.stepConfig.listGen.items[i].tags.length>0){for(j=0;length>j;j++){var tag=ctrl.topten.conditions.tags[j];ListService.findWithAttr(ctrl.stepConfig.listGen.items[i].tags,"text",tag.tag)>-1&&count++}count!==length&&ctrl.stepConfig.listGen.items.splice(i,1)}else ctrl.stepConfig.listGen.items.splice(i,1)}}callback();break;case 3:direction||(ctrl.stepConfig.listGen.items=angular.copy(ctrl.stepConfig.listGen.itemsCached)),callback()}}function pushItem(item){if(null===ctrl.topten.conditions.limit||0===ctrl.topten.conditions.limit||ctrl.topten.conditions.limit>ctrl.stepConfig.listGen.displayList.length){var index=ctrl.topten[ctrl.topten.type+"List"].indexOf(item._id);ctrl.isCreate||-1!==index||(index=ListService.findWithAttr(ctrl.topten[ctrl.topten.type+"List"],"_id",item._id)),-1===index?(ctrl.topten[ctrl.topten.type+"List"].push(item._id),ctrl.stepConfig.listGen.displayList.push(item)):NotificationFactory.warning("Duplicate!","Item has already been added to list.")}else NotificationFactory.error("Full!","Item list has reached the defined capacity.");ctrl.stepConfig.listGen.toptenItem=""}function removeItem(item){var index=ctrl.stepConfig.listGen.displayList.indexOf(item);ctrl.stepConfig.listGen.displayList.splice(index,1),index=ctrl.topten[ctrl.topten.type+"List"].indexOf(item._id),ctrl.isCreate||-1!==index||(index=ListService.findWithAttr(ctrl.topten[ctrl.topten.type+"List"],"_id",item._id)),ctrl.topten[ctrl.topten.type+"List"].splice(index,1),NotificationFactory.warning("Removed!","Item has been removed from list.")}function pushCondition(type,item){var index;switch(type){case"series":index=ListService.findWithAttr(ctrl.topten.conditions.series,"name",item.name),-1===index?ctrl.topten.conditions.series.push(item):NotificationFactory.warning("Duplicate!","Series has already been added to list."),ctrl.stepConfig.listGen.seriesLimit="";break;case"tag":index=ListService.findWithAttr(ctrl.topten.conditions.tags,"tag",item.tag),-1===index?ctrl.topten.conditions.tags.push(item):NotificationFactory.warning("Duplicate!","Tag has already been added to list."),ctrl.stepConfig.listGen.tagLimit=""}}function removeCondition(type,item){var index;switch(type){case"series":index=ListService.findWithAttr(ctrl.topten.conditions.series,"name",item.name),ctrl.topten.conditions.series.splice(index,1),NotificationFactory.warning("Removed!","Series has been removed from list.");break;case"tag":index=ctrl.topten.conditions.tags.indexOf(item),ctrl.topten.conditions.tags.splice(index,1),NotificationFactory.warning("Removed!","Tag has been removed from list.")}}function takeStep(number,direction){process(number,direction,function(){ctrl.stepConfig.currentStep=direction?number+1:number-1})}function cancel(){$location.path("toptens")}function inital(){void 0!==$stateParams.toptenId&&(ctrl.isCreate=!1,Toptens.get({toptenId:$stateParams.toptenId}).$promise.then(function(result){ctrl.topten=result,typeSetItemPopulate()}))}function swappingItems(index){if(""===ctrl.stepConfig.swapping.one)ctrl.stepConfig.swapping.one=index;else if(ctrl.stepConfig.swapping.one===index)ctrl.stepConfig.swapping.one="";else{ctrl.stepConfig.swapping.two=index;var temp=ctrl.stepConfig.listGen.displayList[ctrl.stepConfig.swapping.one];ctrl.stepConfig.listGen.displayList[ctrl.stepConfig.swapping.one]=ctrl.stepConfig.listGen.displayList[ctrl.stepConfig.swapping.two],ctrl.stepConfig.listGen.displayList[ctrl.stepConfig.swapping.two]=temp,temp=ctrl.topten[ctrl.topten.type+"List"][ctrl.stepConfig.swapping.one],ctrl.topten[ctrl.topten.type+"List"][ctrl.stepConfig.swapping.one]=ctrl.topten[ctrl.topten.type+"List"][ctrl.stepConfig.swapping.two],ctrl.topten[ctrl.topten.type+"List"][ctrl.stepConfig.swapping.two]=temp,ctrl.stepConfig.swapping.one="",ctrl.stepConfig.swapping.two=""}}var ctrl=this,toptenCopy={name:"",description:"",type:"",isFavourite:!1,isRanked:!1,animeList:[],mangaList:[],characterList:[],conditions:{limit:null,series:[],tags:[],season:null,year:null}};ctrl.authentication=Authentication,ctrl.cancel=cancel,ctrl.create=create,ctrl.commonArrays=ListService.getCommonArrays(),ctrl.imgSize={height:"50px",width:"100px"},ctrl.isCreate=!0,ctrl.pushCondition=pushCondition,ctrl.pushItem=pushItem,ctrl.removeCondition=removeCondition,ctrl.removeItem=removeItem,ctrl.stepConfig={steps:[1,2,3,4,5,6,7,8,9,10],stepHeaders:[{text:"Select attributes"},{text:"Set conditions"},{text:"Populate list"}],currentStep:1,stepCount:3,listGen:{itemsCached:[],items:[],displayList:[],seriesList:[],typeDisplay:"",toptenItem:"",seriesLimit:"",tagLimit:"",series:[],tags:[]},limitMin:0,swapping:{one:"",two:""}},ctrl.swappingItems=swappingItems,ctrl.takeStep=takeStep,ctrl.topten={},angular.copy(toptenCopy,ctrl.topten),ctrl.update=update,ctrl.years=[],inital()}angular.module("toptens").controller("CreateToptenController",CreateToptenController),CreateToptenController.$inject=["$scope","$stateParams","$location","Authentication","Toptens","ListService","Animeitems","Mangaitems","Characters","NotificationFactory","CharacterService","ItemService","$filter"]}(),function(){function StatisticsTopten($scope,$uibModalInstance,list,CharacterService){function process(){var listType=ctrl.list.type+"List";ctrl.toptenInfo.tags=CharacterService.buildCharacterTags(ctrl.list[listType]),"character"===ctrl.list.type&&(ctrl.toptenInfo.series=CharacterService.buildSeriesList(ctrl.list[listType]));

}function cancel(){$uibModalInstance.dismiss("cancel")}var ctrl=this;ctrl.cancel=cancel,ctrl.list=list,ctrl.toptenInfo={tags:[],series:[]},process()}angular.module("toptens").controller("StatisticsTopten",StatisticsTopten),StatisticsTopten.$inject=["$scope","$uibModalInstance","list","CharacterService"]}(),function(){function ToptensController($scope,$stateParams,$location,Authentication,$uibModal,Toptens,NotificationFactory,ListService,spinnerService){function remove(topten){NotificationFactory.confirmation(function(){if(topten){topten.$remove();for(var i in ctrl.toptens)ctrl.toptens[i]===topten&&ctrl.toptens.splice(i,1)}else ctrl.topten.$remove(function(){$location.path("toptens")});NotificationFactory.warning("Deleted!","Anime was successfully deleted.")})}function find(){ctrl.filterConfig.selectListOptions=ListService.getSelectListOptions(ctrl.whichController),spinnerService.loading("topten",Toptens.query().$promise.then(function(result){ctrl.toptens=result})),console.log(ctrl.toptens)}function findOne(){Toptens.get({toptenId:$stateParams.toptenId}).$promise.then(function(result){ctrl.topten=result,ctrl.viewConfig.displayType="character"===ctrl.topten.type?"name":"title",ctrl.viewConfig.linkSuffix="character"===ctrl.topten.type?"s":"items"})}function openListStats(){$uibModal.open({animation:!0,templateUrl:"/modules/toptens/views/statistics-topten.client.view.html",controller:"StatisticsTopten as ctrl",size:"lg",resolve:{list:function(){return ctrl.topten}}})}var ctrl=this;ctrl.authentication=Authentication,ctrl.filterConfig={showingCount:0,expandFilters:!1,sortType:"",sortReverse:!1,ratingLevel:void 0,search:{},searchTags:"",tagsForFilter:[],taglessItem:!1,areTagless:!1,selectListOptions:{},commonArrays:ListService.getCommonArrays()},ctrl.find=find,ctrl.findOne=findOne,ctrl.openListStats=openListStats,ctrl.pageConfig={currentPage:0,pageSize:10},ctrl.remove=remove,ctrl.viewConfig={displayType:"",linkSuffix:"",tags:[],series:[]},ctrl.whichController="topten"}angular.module("toptens").controller("ToptensController",ToptensController),ToptensController.$inject=["$scope","$stateParams","$location","Authentication","$uibModal","Toptens","NotificationFactory","ListService","spinnerService"]}(),function(){function horizontalListItem(){return{restrict:"A",replace:!0,transclude:!0,scope:{},templateUrl:"/modules/toptens/templates/horizontal-list-item.html",require:"^horizontalList",link:function(scope,element,attr,horizontalListCtrl){scope.isVisible=!1,scope.itemWidth=horizontalListCtrl.itemWidth,scope.position=element.index(),horizontalListCtrl.register(scope)}}}angular.module("toptens").directive("horizontalListItem",horizontalListItem)}(),function(){function horizontalList(){return{restrict:"A",transclude:!0,require:"horizontalList",scope:{},templateUrl:"/modules/toptens/templates/horizontal-list.html",bindToController:!0,controllerAs:"horizontalList",controller:function($scope){function register(item){self.items.push(item),[0,1,2].indexOf(item.position)>-1&&(item.isVisible=!0)}function setVisibility(){for(var values=[],check=3*self.clicks,i=0;3>i;i++)values.push(check+i);angular.forEach(self.items,function(item){item.isVisible=values.indexOf(item.position)>-1})}function moveItems(direction){"left"===direction?(self.clicks-1<0?self.clicks=0:self.clicks-=1,setVisibility()):"right"===direction&&(self.clicks+1<Math.ceil(self.items.length/3)&&(self.clicks+=1),setVisibility())}var self=this;self.clicks=0,self.items=[],self.moveItems=moveItems,self.register=register,self.shift=0},link:function(scope,element,attr,ctrl){function listSettings(){ctrl.shift=-el.offsetWidth,ctrl.itemWidth=el.offsetWidth/3,angular.forEach(ctrl.items,function(item){item.itemWidth=ctrl.itemWidth})}var el=element[0],child=el.children[0];scope.settings={child:child,style:child.style,value:0},listSettings(),window.addEventListener("resize",function(e){el.offsetWidth!==Math.abs(ctrl.shift)&&(listSettings(),scope.$apply())})}}}angular.module("toptens").directive("horizontalList",horizontalList)}(),function(){function ngMax(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ctrl){scope.$watch(attr.ngMax,function(){ctrl.$isDirty&&ctrl.$setViewValue(ctrl.$viewValue)});var isEmpty=function(value){return angular.isUndefined(value)||""===value||null===value},maxValidator=function(value){var max=scope.$eval(attr.ngMax)||1/0;return!isEmpty(value)&&value>max?void ctrl.$setValidity("ngMax",!1):(ctrl.$setValidity("ngMax",!0),value)};ctrl.$parsers.push(maxValidator),ctrl.$formatters.push(maxValidator)}}}angular.module("toptens").directive("ngMax",ngMax)}(),function(){function ngMin(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attr,ctrl){scope.$watch(attr.ngMin,function(){ctrl.$isDirty&&ctrl.$setViewValue(ctrl.$viewValue)});var isEmpty=function(value){return angular.isUndefined(value)||""===value||null===value},minValidator=function(value){var min=scope.$eval(attr.ngMin)||0;return!isEmpty(value)&&min>value?void ctrl.$setValidity("ngMin",!1):(ctrl.$setValidity("ngMin",!0),value)};ctrl.$parsers.push(minValidator),ctrl.$formatters.push(minValidator)}}}angular.module("toptens").directive("ngMin",ngMin)}(),function(){function oneStep(){return{restrict:"A",replace:!0,transclude:!0,scope:{},require:"^steps",templateUrl:"/modules/toptens/templates/step.html",link:function(scope,elm,attrs,stepsController){scope.active=!1,scope.stepNumber=elm.index()+1,stepsController.register(scope)}}}angular.module("toptens").directive("oneStep",oneStep)}(),function(){function stepControls(){return{restrict:"A",replace:!0,transclude:!0,template:'<div class="step-controls step-button-group padding-5" ng-transclude></div>'}}angular.module("toptens").directive("stepControls",stepControls)}(),function(){function steps(){return{restrict:"A",transclude:!0,scope:{stepConfig:"="},template:'<div class="steps" ng-transclude></div>',bindToController:!0,controllerAs:"steps",controller:function($scope){function register(step){self.steps.push(step),1===step.stepNumber&&(step.active=!0)}var self=this;self.register=register,self.steps=[]},link:function(scope,element,attrs,stepsController){scope.$watch("steps.stepConfig.currentStep",function(newValue){void 0!==newValue&&(console.log("steps: ",newValue),angular.forEach(stepsController.steps,function(step){step.stepNumber!==newValue?step.active=!1:step.active=!0}))})}}}angular.module("toptens").directive("steps",steps)}(),function(){function sticky(){return{restrict:"A",scope:{},link:function(scope,element,attrs){window.addEventListener("scroll",function(evt){var stickyClass="sticky-scroll-top",stickyInnerClass="sticky-inner-container",scrollTop=document.body.scrollTop,elm=element[0],inner=elm.children[0],viewportOffset=elm.getBoundingClientRect(),distance_from_top=viewportOffset.top;56>distance_from_top&&(elm.classList.add(stickyClass),inner.classList.add(stickyInnerClass)),(distance_from_top>55||10>scrollTop)&&(elm.classList.remove(stickyClass),inner.classList.remove(stickyInnerClass))})}}}angular.module("toptens").directive("sticky",sticky)}(),function(){function toptenFilter(){return function(array,displayType,value){return void 0!==array?array.filter(function(item){return item[displayType].toLowerCase().indexOf(value.toLowerCase())>-1?item:void 0}):void 0}}angular.module("toptens").filter("toptenFilter",toptenFilter)}(),function(){function ToptensFactory($resource){return $resource("toptens/:toptenId",{toptenId:"@_id"},{update:{method:"PUT"}})}angular.module("toptens").factory("Toptens",ToptensFactory),ToptensFactory.$inject=["$resource"]}(),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),function(){function AuthenticationController($scope,$http,$location,Authentication){function signup(){$http.post("/auth/signup",ctrl.credentials).success(function(response){ctrl.authentication.user=response,$location.path("/signin")}).error(function(response){ctrl.error=response.message})}function signin(){ctrl.credentials.username="username",$http.post("/auth/signin",ctrl.credentials).success(function(response){ctrl.authentication.user=response,ctrl.loginBody=!0,$location.path("/tasks")}).error(function(response){ctrl.error=response.message})}var ctrl=this;ctrl.authentication=Authentication,ctrl.signin=signin,ctrl.signup=signup}angular.module("users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$scope","$http","$location","Authentication"]}(),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),function(){function AuthenticationFactory(){var _this=this;return _this._data={user:window.user},_this._data}angular.module("users").factory("Authentication",AuthenticationFactory)}(),function(){function UsersFactory($resource){return $resource("users",{},{update:{method:"PUT"}})}angular.module("users").factory("Users",UsersFactory),UsersFactory.$inject=["$resource"]}();